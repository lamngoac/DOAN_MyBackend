@model List<RptSv_InosLicOrder_Commission>
@{
    var title = "DANH SÁCH ĐƠN HÀNG";
    ViewBag.Title = title;
    ViewBag.OverflowX = true;
    var startCount = 0;
    var strStartCount = ViewBag.StartCount as string;
    if (!CUtils.IsNullOrEmpty(strStartCount))
    {
        startCount = Convert.ToInt32(strStartCount);
    }

    var listMst_Dealer = ViewBag.ListMst_Dealer as List<Mst_Dealer>;
    if (listMst_Dealer == null || listMst_Dealer.Count == 0)
    {
        listMst_Dealer = new List<Mst_Dealer>();
    }
    var dictionaryLicOrderStatuses = ViewBag.DictionaryLicOrderStatuses;
}

<style>
    .ace-scroll, .scroll-content {
        overflow: hidden !important;
    }
</style>

<div class="row no-margin">
    <div class="row no-margin">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            <div class="panel-group" id="steps">
                <div class="panel panel-info">
                    <div class="title">
                        <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                    </div>
                </div>
                <div class="col-xs-12 no-padding layout-tk">
                    @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "manageForm", @class = "form-horizontal" }))
                    {
                        <input type="hidden" value="search" name="init" id="init" />
                        <div class="col-xs-12 box-shadow-tk">
                            <aside class="col-sm-5 no-padding">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-2 control-label no-padding-right font-weight-500">Đại lý</label>
                                    <div class="col-xs-12 col-sm-10">
                                        <span class="block input-icon input-icon-right">
                                            @{
                                                var dlcode = CUtils.StrValueNew(ViewBag.DLCode);
                                            }
                                            <select id="dlcode" name="dlcode" class="col-xs-11 " title="">
                                                <option></option>
                                                @if (listMst_Dealer != null && listMst_Dealer.Count > 0)
                                                {
                                                    foreach (var item in listMst_Dealer)
                                                    {
                                                        var dlcodeCur = CUtils.StrValueNew(item.DLCode);
                                                        var dlnameCur = CUtils.StrValueNew(item.DLName);
                                                        <option value="@MvcHtmlString.Create(dlcodeCur)" desc="@MvcHtmlString.Create(dlnameCur)" @(dlcodeCur.Equals(dlcode) ? "selected" : "")> @MvcHtmlString.Create(dlcodeCur + " - " + dlnameCur)</option>
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-2 control-label no-padding-right font-weight-500">Tên tổ chức</label>
                                    <div class="col-xs-12 col-sm-10">
                                        @{
                                            var orgname = CUtils.StrValueNew(ViewBag.InosLicOrderOrgName);
                                        }
                                        <input type="text" id="orgname" name="orgname" class="col-xs-11 " value="@MvcHtmlString.Create(orgname)" autocomplete="off">

                                    </div>
                                </div>
                                <div class="row no-margin">
                                    <div class="form-group margin-bottom-5">
                                        <label for="" class="col-xs-2 col-sm-2 control-label font-weight-500" style="width: 20%">Ngày tạo</label>
                                        <div class="col-xs-4 col-sm-4">
                                            <div class="col-xs-12" style="padding-left: 0; padding-right: 17px;">
                                                @{
                                                    var fromdate = CUtils.StrValueNew(ViewBag.InosLicOrderCreateDTimeFrom);
                                                }
                                                <div class="input-group" id="dtfromdate">
                                                    <input type="text" id="fromdate" name="fromdate" class="col-xs-12 fromdate" data-date-format="yyyy-mm-dd" value="@MvcHtmlString.Create(fromdate)" autocomplete="off">
                                                    <span class="input-group-addon">
                                                        <i class="fa fa-calendar bigger-100"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="" class="col-xs-2 col-sm-2 control-label font-weight-500" style="width: 10%">đến</label>
                                        <div class="col-xs-4 col-sm-4">
                                            <div class="col-xs-12" style="padding-left: 0; padding-right: 17px;">
                                                @{
                                                    var todate = CUtils.StrValueNew(ViewBag.InosLicOrderCreateDTimeTo);
                                                }
                                                <div class="input-group" id="dttodate">
                                                    <input type="text" id="todate" name="todate" class="col-xs-12 todate" data-date-format="yyyy-mm-dd" value="@MvcHtmlString.Create(todate)" autocomplete="off">
                                                    <span class="input-group-addon">
                                                        <i class="fa fa-calendar bigger-100"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </aside>
                            <aside class="col-sm-3 no-padding">

                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">Số đơn hàng</label>
                                    <div class="col-xs-12 col-sm-7">
                                        @{
                                            var orderid = CUtils.StrValueNew(ViewBag.OrderId);
                                        }
                                        <input type="text" id="orderid" name="orderid" class="col-xs-11 " value="@MvcHtmlString.Create(orderid)" autocomplete="off">
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">OrgID</label>
                                    <div class="col-xs-12 col-sm-7">
                                        @{
                                            var orgid = CUtils.StrValueNew(ViewBag.InosOrgId);
                                        }
                                        <input type="text" id="orgid" name="orgid" class="col-xs-11 " value="@MvcHtmlString.Create(orgid)" autocomplete="off">
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">MST</label>
                                    <div class="col-xs-12 col-sm-7">
                                        @{
                                            var mst = CUtils.StrValueNew(ViewBag.MST);
                                        }
                                        <input type="text" id="mst" name="mst" class="col-xs-11 " value="@MvcHtmlString.Create(mst)" autocomplete="off">
                                    </div>
                                </div>

                            </aside>
                            <aside class="col-sm-3 no-padding">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">NetworkID</label>
                                    <div class="col-xs-12 col-sm-7">
                                        @{
                                            var networkid = CUtils.StrValueNew(ViewBag.InosNetworkId);
                                        }
                                        <input type="text" id="networkid" name="networkid" class="col-xs-11 " value="@MvcHtmlString.Create(networkid)" autocomplete="off">
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">TT Duyệt HH</label>
                                    <div class="col-xs-12 col-sm-7">
                                        <span class="block input-icon input-icon-right">
                                            @{
                                                var commissionstatus = CUtils.StrValueNew(ViewBag.CommissionStatus);
                                            }
                                            <select id="commissionstatus" name="commissionstatus" class="col-xs-11 " title="">
                                                <option></option>
                                                <option value="@MvcHtmlString.Create(Client_CommissionStatus.Pending)" @(Client_CommissionStatus.Pending.Equals(commissionstatus) ? "selected" : "")>@MvcHtmlString.Create("Chưa duyệt")</option>
                                                <option value="@MvcHtmlString.Create(Client_CommissionStatus.Approve)" @(Client_CommissionStatus.Approve.Equals(commissionstatus) ? "selected" : "")>@MvcHtmlString.Create("Đã duyệt")</option>
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-5 control-label no-padding-right font-weight-500">Trạng thái</label>
                                    <div class="col-xs-12 col-sm-7">
                                        <span class="block input-icon input-icon-right">
                                            @{
                                                var orderstatus = CUtils.StrValueNew(ViewBag.InosLicOrderStatus);
                                            }
                                            <select id="orderstatus" name="orderstatus" class="col-xs-11 " title="">
                                                <option></option>
                                                @if (dictionaryLicOrderStatuses != null)
                                                {
                                                    foreach (KeyValuePair<int, string> entry in dictionaryLicOrderStatuses)
                                                    {
                                                        var keyCur = CUtils.StrValueNew(entry.Key);
                                                        var valueCur = CUtils.StrValueNew(entry.Value);
                                                        valueCur = ((BaseController)this.ViewContext.Controller).GetInosLicOrderStatusName(valueCur);
                                                        <option value="@MvcHtmlString.Create(keyCur)" desc="@MvcHtmlString.Create(valueCur)" @(orderstatus.Equals(keyCur) ? "selected" : "")>@MvcHtmlString.Create(valueCur)</option>
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>
                                </div>
                            </aside>
                            <aside class="col-sm-1 no-padding">
                                <div class="form-group margin-bottom-5">
                                    <div class="col-xs-12 col-sm-7 ">
                                        <div class="col-xs-11" style="padding: 0">
                                            <span class="block input-icon input-icon-right" style="">
                                                @RenderItemFormat("BTN_QL_DON_HANG_TK", "<a class=\"btn font-color mybtn-Button\" onclick=\"Search()\" href=\"javascript:void(0);\" style=\" \"><img class=\"img-button\" src='" + Url.Content("~/Images/search.svg") + "'></a>", "", "")
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </aside>

                        </div>
                        <div class="col-xs-12 no-padding">
                            @RenderItemFormat("BTN_QL_DON_HANG_EXPORT", "<a class=\"btn font-color mybtn-Button\" onclick=\"Export()\" href=\"javascript:void(0);\" style=\"float: right;font-size: 13px; margin-top: 20px;margin-right: 10px; \">Export Excel</a>", "", "")
                            @RenderItemFormat("BTN_QL_DON_HANG_IMPORT", "<a class=\"btn font-color mybtn-Button\" onclick=\"ShowPopupImportExcel()\" href=\"javascript:void(0);\" style=\"float: right;font-size: 13px; margin-top: 20px;margin-right: 10px; \">Import Excel</a>", "", "")
                            @RenderItemFormat("BTN_QL_DON_HANG_DUYET", "<a class=\"btn font-color mybtn-Button\" onclick=\"ApprovedHH()\" href=\"javascript:void(0);\" style=\"float: right;font-size: 13px; margin-top: 20px;margin-right: 10px; \">Duyệt HH</a>", "", "")
                        </div>
                    }
                </div>


                <div class="panel panel-info">
                    <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                        @Html.AntiForgeryToken()
                        <aside class="col-xs-12 no-padding">
                            <div class="scrollable-horizontal padding-left-0 padding-right-0 div-scrollable" data-size="3100" style="padding-top: 0!important;">
                                <div style="width: 100%; float: left;">
                                    <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0">
                                        <thead>
                                            <tr>
                                                <th class="cell-60 text-center" style="position: relative">
                                                    <input style="opacity: unset; width: 14px; height: 14px; top: 5px; left: 25px" type="checkbox" class="ace" onclick="CheckAlltbodyID(this);" />
                                                </th>
                                                <th class="text-center cell-50">

                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Đại lý")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Số đơn hàng")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("MST")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Tên tổ chức")
                                                </th>
                                                <th class="text-center cell-100">
                                                    @MvcHtmlString.Create("Ngày tạo")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Thành tiền (VND)")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Mã giảm giá")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Giảm giá (VND)")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Tổng TT (VND)")
                                                </th>
                                                <th class="text-center cell-100">
                                                    @MvcHtmlString.Create("Trạng thái")
                                                </th>
                                                <th class="text-center cell-100">
                                                    @MvcHtmlString.Create("TT duyệt HH")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("OrgID")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("NetworkID")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Giới thiệu 1")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Giới thiệu 2")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Telesale")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Tư vấn")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Triển khai")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("HH Giới thiệu 1")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("HH Giới thiệu 2")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("HH Telesale")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("HH Tư vấn")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("HH Triển khai")
                                                </th>
                                                <th class="text-center cell-250">
                                                    @MvcHtmlString.Create("Ghi chú")
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="table-tbodyID">
                                            @if (Model != null && Model.Count > 0)
                                            {
                                                var idx = 0;
                                                foreach (var item in Model)
                                                {
                                                    var iindex = startCount + (idx + 1);
                                                    var dLCode = CUtils.StrValueNew(item.DLCode);
                                                    var orderId = CUtils.StrValueNew(item.OrderId);
                                                    var mst = CUtils.StrValueNew(item.MST);
                                                    var inosLicOrderOrgName = CUtils.StrValueNew(item.InosLicOrderOrgName);
                                                    var inosLicOrderOrgNameSub = inosLicOrderOrgName;
                                                    if (!CUtils.IsNullOrEmpty(inosLicOrderOrgNameSub))
                                                    {
                                                        inosLicOrderOrgNameSub = CUtils.CatChuoi(inosLicOrderOrgNameSub, 60);
                                                    }
                                                    var inosLicOrderCreateDTime = CUtils.StrValueNew(item.InosLicOrderCreateDTime);
                                                    if (!CUtils.IsNullOrEmpty(inosLicOrderCreateDTime) && CUtils.IsDateTime(inosLicOrderCreateDTime))
                                                    {
                                                        inosLicOrderCreateDTime = CUtils.FormatDate(inosLicOrderCreateDTime, Nonsense.DATE_TIME_FORMAT);
                                                    }
                                                    var inosLicOrderPrice = CUtils.StrValueNew(item.InosLicOrderPrice);
                                                    var inosLicOrderDiscountCode = CUtils.StrValueNew(item.InosLicOrderDiscountCode);
                                                    var inosLicOrderDiscountVal = CUtils.StrValueNew(item.InosLicOrderDiscountVal);
                                                    var inosLicOrderTotalCost = CUtils.StrValueNew(item.InosLicOrderTotalCost);
                                                    var inosLicOrderStatus = CUtils.StrValueNew(item.InosLicOrderStatus);
                                                    var inosLicOrderStatusName = "";
                                                    if (!CUtils.IsNullOrEmpty(inosLicOrderStatus))
                                                    {
                                                        inosLicOrderStatusName = ((BaseController)this.ViewContext.Controller).GetInosLicOrderStatusName(inosLicOrderStatus);
                                                    }
                                                    var commissionStatus = CUtils.StrValueNew(item.CommissionStatus);
                                                    var commissionStatusName = "";
                                                    if (!CUtils.IsNullOrEmpty(commissionStatus))
                                                    {
                                                        commissionStatusName = ((BaseController)this.ViewContext.Controller).GetCommissionStatusName(commissionStatus);
                                                    }
                                                    var inosOrgId = CUtils.StrValueNew(item.InosOrgId);
                                                    var inosNetworkId = CUtils.StrValueNew(item.InosNetworkId);
                                                    var presenter1 = CUtils.StrValueNew(item.Presenter1);
                                                    var presenter2 = CUtils.StrValueNew(item.Presenter2);
                                                    var telesale = CUtils.StrValueNew(item.Telesale);
                                                    var consultants = CUtils.StrValueNew(item.Consultants);
                                                    var implementer = CUtils.StrValueNew(item.Implementer);
                                                    var commissionPresenter1 = CUtils.StrValueNew(item.CommissionPresenter1);
                                                    var commissionPresenter2 = CUtils.StrValueNew(item.CommissionPresenter2);
                                                    var commissionTelesale = CUtils.StrValueNew(item.CommissionTelesale);
                                                    var commissionConsultants = CUtils.StrValueNew(item.CommissionConsultants);
                                                    var commissionImplementer = CUtils.StrValueNew(item.CommissionImplementer);
                                                    var remark = CUtils.StrValueNew(item.Remark);
                                                    var remarkSub = remark;
                                                    if (!CUtils.IsNullOrEmpty(remarkSub))
                                                    {
                                                        remarkSub = CUtils.CatChuoi(remarkSub, 100);
                                                    }
                                                    <tr idx="@idx" class="data-item trdata">
                                                        <input type="hidden" name="ListRptSv_InosLicOrder_Commission[@idx].OrderId" value="@MvcHtmlString.Create(orderId)" />
                                                        <td class="cell-60 text-center">
                                                            <input type="checkbox" class="sl_ace" />
                                                        </td>
                                                        <td class="text-center cell-50">
                                                            <div class="action-buttons padding-top-2">
                                                                @{
                                                                    var urlDetail = Url.Action("Detail", "Mst_Order", new { orderid = item.OrderId });
                                                                }

                                                                @RenderItemFormat("BTN_QL_DON_HANG_CHI_TIET", "<a class=\"icon-detail\" href=\'" + urlDetail + "\' title=\"Chi tiết\"><img class=\"img-icon\" src='" + Url.Content("~/Images/Xem.svg") + "'></a>", "", "")

                                                            </div>
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(dLCode)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(orderId)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(mst)
                                                        </td>
                                                        <td class="text-left cell-150" title="@MvcHtmlString.Create(inosLicOrderOrgName)">
                                                            @MvcHtmlString.Create(inosLicOrderOrgNameSub)
                                                        </td>
                                                        <td class="text-center cell-100">
                                                            @MvcHtmlString.Create(inosLicOrderCreateDTime)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(inosLicOrderPrice)
                                                        </td>
                                                        <td class="text-center cell-120">
                                                            @MvcHtmlString.Create(inosLicOrderDiscountCode)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(inosLicOrderDiscountVal)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(inosLicOrderTotalCost)
                                                        </td>
                                                        <td class="text-center cell-100">
                                                            @MvcHtmlString.Create(inosLicOrderStatusName)
                                                        </td>
                                                        <td class="text-center cell-100">
                                                            @MvcHtmlString.Create(commissionStatusName)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(inosOrgId)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(inosNetworkId)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(presenter1)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(presenter2)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(telesale)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(consultants)
                                                        </td>
                                                        <td class="text-left cell-120">
                                                            @MvcHtmlString.Create(implementer)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(commissionPresenter1)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(commissionPresenter2)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(commissionTelesale)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(commissionConsultants)
                                                        </td>
                                                        <td class="text-right cell-120 formatnumber">
                                                            @MvcHtmlString.Create(commissionImplementer)
                                                        </td>
                                                        <td class="text-left cell-250" title="@MvcHtmlString.Create(remark)">
                                                            @MvcHtmlString.Create(remarkSub)
                                                        </td>
                                                    </tr>
                                                    idx++;
                                                }
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </aside>
                    </div>
                </div>
            </div>
        </div>
        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->
@*Active Menu*@
<script type="text/javascript">
    setAdminCurrentUrl('@Url.Action("Index", "Mst_Order")');
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.scrollable-horizontal').each(function () {
            var $this = $(this);
            $(this).ace_scroll(
                {
                    horizontal: true,
                    //styleClass: 'scroll-top',//show the scrollbars on top(default is bottom)
                    size: $this.attr('data-size') || 6500,
                    mouseWheelLock: true
                }
            ).css({ 'padding-top': 0 });
        });
        $('.scrollable').each(function () {
            var $this = $(this);
            $(this).ace_scroll({
                //size: 500,
                size: $this.attr('data-size') || 1000,
                mouseWheelLock: true,
                //styleClass: 'scroll-left scroll-margin scroll-thin scroll-dark scroll-light no-track scroll-visible'
            });
        });
    });

    $(document).on('keypress', function (e) {
        if (e.which === 13) {
            Search();
        }
    });
    function Search()
    {
        $('#manageForm').attr('action', '@Url.Action("Index", "Mst_Order")').submit();
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        //datepicker plugin
        $('#fromdate, #todate').datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'yyyy-mm-dd'
        })
            //show datepicker when clicking on the icon
            .next().on(ace.click_event, function () {
                $(this).prev().focus();
            });

    });
    jQuery(function ($) {
        $('.formatnumber').number(true, 0);
        //$('.formatnumber').number(true, 2);
    });
</script>

@*Import Excel*@
<div class="modal fade" id="ImportExcelModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"></div>

<script type="text/javascript">
    function ShowPopupImportExcel() {
        var url = '@Url.Action("ShowPopupImportExcel", "Home")';
        $.ajax({
            url: url,
            data: {},
            type: 'post',
            dataType: 'json',
            traditional: true,
            success: function (data) {
                if (data.Success) {
                    $('#ImportExcelModal').modal({
                        backdrop: false,
                        keyboard: true,
                    });
                    $("#ImportExcelModal").html(data.Html); // truyen html vao #form
                } else {
                    _showErrorMsg123('@MvcHtmlString.Create("Lỗi")', data.Detail);
                }

            }
        });
    }

    function ImportFileExcel() {
        var url = '@Url.Action("Import", "Mst_Order")';
        var formData = new window.FormData($('#manageFormImportExcel')[0]);
        formData.append('tax_file', $('input[type=file]')[0].files[0]);
        $.ajax({
            url: url,
            type: 'post',
            beforeSend: function(){},
            success: function (result) {
                var mes = '';
                if (result.Success) {
                    mes = result.Messages[0];
                    alert(mes);
                    window.location.href = window.location.href;
                } else {
                    if (result.Messages !== null && result.Messages !== undefined && result.Messages.length > 0) {
                        alert(result.Messages[0]);
                    }
                    else{
                        mes = result.Detail;
                        _showErrorMsg123("Lỗi!", mes);
                    }
                }

            },
            data: formData,
            cache: false,
            contentType: false,
            processData: false
        });
    }
</script>

@*Export*@
<script type="text/javascript">
    function Export()
    {
        var rows = $("tbody#tbd_VoiceHangHoa tr.trdata").length;
        if (rows > 0) {

        }
        var token = $('input[name=__RequestVerificationToken]').val();
        var url = '@Url.Action("Export", "Mst_Order")';
        var dlcode = ReturnValueText('#dlcode');
        var orgname = ReturnValueText('#orgname');
        var orderid = ReturnValueText('#orderid');
        var orgid = ReturnValueText('#orgid');
        var mst = ReturnValueText('#mst');
        var networkid = ReturnValueText('#networkid');
        var commissionstatus = ReturnValueText('#commissionstatus');
        var orderstatus = ReturnValueText('#orderstatus');
        var fromdate = ReturnValueText('#fromdate');
        var todate = ReturnValueText('#todate');
        $.ajax({
            url: url,
            data: {
                __RequestVerificationToken: token
                , dlcode: dlcode
                , orgname: orgname
                , orderid: orderid
                , orgid: orgid
                , mst: mst
                , networkid: networkid
                , commissionstatus: commissionstatus
                , orderstatus: orderstatus
                , fromdate: fromdate
                , todate: todate
            },
            type: 'post',
            dataType: 'JSON',
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            traditional: true,
            beforeSend: function () {
                //bodycur.addClass("my-loading");
            },
            success: function (data) {
                try {
                    var getData = data;
                    if (getData.Success === false || getData.Success === 'false') {
                        _showErrorMsg123("Lỗi!", getData.Detail);
                    } else {
                        alert(getData.Title);
                        if (getData.CheckSuccess === "1") {
                            if (getData.strUrl !== null && getData.strUrl.length > 0) {
                                window.location = getData.strUrl;
                            }
                        }
                    }
                } catch (e) {
                    console.log(e.message);
                }
            },
            complete: function (data) {
                // Hide image container
                //bodycur.removeClass("my-loading");
            }
        });
    }
</script>

<script type="text/javascript">
    function ApprovedHH() {
        var rows = $("tbody#table-tbodyID tr.trdata").length;
        if (rows > 0) {
            var idx = 0;
            var ListRptSv_InosLicOrder_Commission = [];
            $('#table-tbodyID').find('.sl_ace:checked').each(function() {
                var tr = $(this).parent().parent();
                idx = $(tr).attr('idx');
                var orderId = ReturnValue($(tr).find('input[type="hidden"][name="ListRptSv_InosLicOrder_Commission[' + idx + '].OrderId"]').val());
                if (!IsNullOrEmpty(orderId)) {
                    var objRptSv_InosLicOrder_Commission = {};
                    objRptSv_InosLicOrder_Commission.OrderId = orderId;

                    ListRptSv_InosLicOrder_Commission.push(objRptSv_InosLicOrder_Commission);
                }
            });
            if (ListRptSv_InosLicOrder_Commission !== null && ListRptSv_InosLicOrder_Commission.length > 0) {
                bootbox.confirm({
                    title: "<img id=\"exclamation-circle\" style=\"width: 35px; float: left; margin-right: 10px\" src=\"@Url.Content("~/Images/exclamation-circle-solid.svg")\"> THÔNG BÁO",
                    message: "Đồng ý duyệt hoa hồng?",
                    buttons: {
                        'cancel': {
                            label: 'Thoát',
                            className: 'btn mybtn-Button btnButton'
                        },
                        'confirm': {
                            label: 'Đồng ý',
                            className: 'btn mybtn-Button btnButton'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var modelCur = JSON.stringify(ListRptSv_InosLicOrder_Commission);
                            var url = '@Url.Action("ApprovedHH", "Mst_Order")';
                            var token = $('input[name=__RequestVerificationToken]').val();
                            //var token = $('#manageForm input[name=__RequestVerificationToken]').val();
                            $.ajax({
                                url: url,
                                data: {
                                    model: modelCur,
                                    __RequestVerificationToken: token
                                },
                                type: 'post',
                                dataType: 'json',
                                success: function (data) {
                                    if (data.Success) {
                                        if (data.Messages != null && data.Messages !== undefined && data.Messages.length > 0) {
                                            alert(data.Messages[0]);
                                        }
                                        window.location.href = window.location.href;
                                    } else {
                                        _showErrorMsg123("Lỗi!",data.Detail);
                                    }
                                }
                            });
                        }
                    }
                });
            } else {
                alert('@MvcHtmlString.Create("Chưa chọn đơn hàng duyệt hoa hồng!")');
            }
        } else {
            alert('@MvcHtmlString.Create("Lưới danh sách đơn hàng trống!")');
        }
    }
</script>