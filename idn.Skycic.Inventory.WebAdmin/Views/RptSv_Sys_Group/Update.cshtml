
@model RptSv_Sys_Group
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var title = "CẬP NHẬT NHÓM NGƯỜI DÙNG";
    var titleMng = "Quản lý nhóm người dùng";
    ViewBag.Title = title;
}
<script type="text/javascript">
    var parents = new Array();
    parents.push("@Url.Action("Index", "RptSv_Sys_Group")");
    parents.push("");
    var parentsText = new Array();
    parentsText.push("@MvcHtmlString.Create(titleMng)");
    parentsText.push("@MvcHtmlString.Create(title)");
    setAdminCurrentTag(parents, parentsText);
</script>

<div class="row no-margin">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="panel-group" id="steps">
            <div class="panel panel-info">
                <div class="title">
                    <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                </div>
                <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                    <aside class="row no-margin box-shadow-tk">
                        @using (Html.BeginForm("Create", "RptSv_Sys_Group", FormMethod.Post, new { id = "manageForm", @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="col-xs-4 no-padding">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã nhóm người dùng <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="GroupCode" name="GroupCode" class="col-xs-11 GroupCode disabled-fix" onkeyup="locdau(this);" value="@if (Model != null && Model.GroupCode != null){@MvcHtmlString.Create(Model.GroupCode.ToString())} else { @("")}" autocomplete="off" required />
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-4 no-padding">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mô tả nhóm người dùng <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="GroupName" name="GroupName" class="col-xs-11 GroupName" value="@if (Model != null && Model.GroupName != null){@MvcHtmlString.Create(Model.GroupName.ToString())} else { @("")}" autocomplete="off" required />
                                        </span>
                                    </div>

                                </div>
                            </div>
                            <div class="col-xs-4 no-padding">

                                <div class="form-group margin-bottom-5">
                                    @{
                                        var checkActive = "";
                                        if (Model != null && Model.FlagActive.Equals("1"))
                                        {
                                            checkActive = "checked";
                                        }
                                        else
                                        {
                                            checkActive = "";
                                        }
                                    }
                                    <label for="" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">Trạng thái</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right padding-top-5">
                                            <label>
                                                <input name="FlagActive" id="FlagActive" class="ace ace-switch ace-switch-4 FlagActive" type="checkbox" value="1" @checkActive />
                                                <span class="lbl"></span>
                                                <input name="FlagActive" type="hidden" value="0" />
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    </aside>
                    <div class="col-xs-12 no-padding">
                        <div class="clearfix">
                            <div class="row no-margin" style="float: right">
                                @*<a href="javascript:void(0);" class="btn font-color mybtn-Button" style="margin-left: 10px; padding-left: 15px!important; padding-right: 15px!important; " onclick="SaveData();"><i class="ace-icon fa fa-floppy-o bigger-110"></i>Lưu</a>*@
                                @RenderItemFormat("BTN_CAP_NHAT_NHOM_ND_LUU", "<a href=\"javascript: void(0); \" class=\"btn font-color mybtn-Button\" style=\"margin-top: 20px;\" onclick=\"SaveData();\">Lưu</a>", "", "")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

<script type="text/javascript">
    processAjaxForm($('#manageForm'), function (response) {
        processAjaxFormResult(response);

    });
</script>

@*Active Menu*@
<script>
    setAdminCurrentUrl('@Url.Action("Index", "RptSv_Sys_Group")');
</script>
@*Set focus*@
<script>
    var _getForm = document.getElementById("manageForm");
    _getForm.addEventListener('reset', function () {
        document.getElementById("").focus();
    });
</script>

<script>
    function CheckForm() {
        if (!CheckIsNullOrEmpty('#GroupCode', 'has-error-fix', '@MvcHtmlString.Create("Mã nhóm người dùng không được trống!")'))
        {
            return false;
        }
        if (!CheckIsNullOrEmpty('#GroupName', 'has-error-fix', '@MvcHtmlString.Create("Tên nhóm người dùng không được trống!")'))
        {
            return false;
        }
        return true;
    }

    function SaveData()
    {
        var check = CheckForm();

        if (check)
        {
            $("#manageForm").attr('action', '@Url.Action("Update","RptSv_Sys_Group")').submit();
            @*var GroupCode = ReturnValueText('#GroupCode');
            var GroupName = ReturnValueText('#GroupName');
            var tem = new Object();
            tem.GroupCode = GroupCode;
            tem.GroupName = GroupName;

            var token = $('#manageForm input[name=__RequestVerificationToken]').val();
            var modelCur = JSON.stringify(tem);
            var url = '@Url.Action("Create", "RptSv_Sys_Group")';
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    __RequestVerificationToken: token
                    , model: modelCur
                },
                traditional: true,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Success) {
                        if (data.Messages !== null && data.Messages !== undefined && data.Messages.length > 0) {
                            alert(data.Messages[0]);
                        }
                        window.location.href = data.RedirectUrl;
                    }
                    else {
                        if (data.Detail != null) {
                            _showErrorMsg123("Lỗi!", data.Detail);
                        }
                    }
                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    debugger;
                    if (textStatus === 'Unauthorized') {
                        alert('custom message. Error: ' + errorThrown);
                    } else {
                        //alert('custom message. Error2: ' + errorThrown);
                    }
                }
            });*@


        }
    }
</script>








