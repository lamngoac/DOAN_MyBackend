@using idn.Skycic.Inventory.Common.Models
@model Invoice_TempGroup
@{
    var title = "Cập nhật loại mẫu hóa đơn";
    var mstNNT = ViewBag.mstNNT as List<Mst_NNT>;
    var dicNNT = new Dictionary<string, string>();
    var dicCustomer = new Dictionary<string, string>();
    var lstCustomField = new List<Invoice_CustomField>();
    var lstCustomFieldDtl = new List<Invoice_DtlCustomField>();
    if (ViewBag.dicNNT != null)
    {
        dicNNT = ViewBag.dicNNT;
    }
    if (ViewBag.dicCustomer != null)
    {
        dicCustomer = ViewBag.dicCustomer;
    }
    if (ViewBag.lstCustomField != null)
    {
        lstCustomField = ViewBag.lstCustomField;
    }
    if (ViewBag.lstCustomFieldDtl != null)
    {
        lstCustomFieldDtl = ViewBag.lstCustomFieldDtl;
    }
    var lstInvoice_TempGroupField = new List<Invoice_TempGroupField>();
    if (ViewBag.lstInvoice_TempGroupField != null)
    {
        lstInvoice_TempGroupField = ViewBag.lstInvoice_TempGroupField;
    }
}
<div class="container">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="panel-group" id="steps">
            <div class="panel panel-info">
                <div class="title">
                    <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                </div>
                <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                    <aside class="col-xs-12">
                        @using (Html.BeginForm("Update", "InvoiceTempGroup", FormMethod.Post, new { id = "manageForm", @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="col-sm-6">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã loại mẫu")</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="InvoiceTGroupCode" name="InvoiceTGroupCode" class="col-xs-11 " onkeyup="locdau(this);" value="@Model.InvoiceTGroupCode" autocomplete="off" required />
                                        </span>
                                        <label class="span-input" style="color: red; padding-left: 5px; padding-top: 10px;">*</label>
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên loại mẫu")</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="InvoiceTGroupName" name="InvoiceTGroupName" class="col-xs-11 Code InvoiceTGroupName" value="@Model.InvoiceTGroupName" autocomplete="off" required />
                                        </span>
                                        <label class="span-input" style="color: red; padding-left: 5px; padding-top: 10px;">*</label>
                                    </div>
                                </div>
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Link ảnh logo")</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="FilePathThumbnail" name="FilePathThumbnail" class="col-xs-11 Code" value="@(Model.FilePathThumbnail == null ? "" : Model.FilePathThumbnail)" autocomplete="off" required />
                                        </span>
                                        @*<label class="span-input" style="color: red; padding-left: 5px; padding-top: 10px;">*</label>*@
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("MST")</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right">
                                            <select id="MST" name="MST" class="col-xs-11 MST">
                                                @{
                                                    foreach (var it in mstNNT)
                                                    {
                                                        <option value="@it.MST" @(Model.MST.Equals(it.MST) ? "selected" : "")>@it.MST</option>
                                                    }
                                                }
                                            </select>
                                            @*<input type="text" id="MST" name="MST" class="col-xs-11 Code " value="" autocomplete="off" required />*@
                                        </span>
                                        <label class="span-input" style="color: red; padding-left: 5px; padding-top: 10px;">*</label>
                                    </div>
                                </div>

                                <div class="form-group margin-bottom-5">
                                    <label for="Spec_Prd_Type" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Loại")</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right">
                                            <select type="text" id="Spec_Prd_Type" name="Spec_Prd_Type" class="col-xs-11 Code " value="" autocomplete="off" required>
                                                <option value="SPEC" @(Model.Spec_Prd_Type.Equals("SPEC") ? "selected" : "")>SPEC</option>
                                                <option value="PROCDUCT_ID" @(Model.Spec_Prd_Type.Equals("PROCDUCT_ID") ? "selected" : "")>PROCDUCT_ID</option>
                                            </select>
                                        </span>
                                        <label class="span-input" style="color: red; padding-left: 5px; padding-top: 10px;">*</label>
                                    </div>
                                </div>

                                @{
                                    var checkActive = "";
                                    if (Model != null && Model.FlagActive.Equals("1"))
                                    {
                                        checkActive = "checked";
                                    }
                                    else
                                    {
                                        checkActive = "";
                                    }
                                }
                                <div class="form-group margin-bottom-5">
                                    <label for="" class="col-xs-12 col-sm-3 control-label no-padding-right font-weight-500 ">Cờ hoạt động</label>
                                    <div class="col-xs-8">
                                        <span class="block input-icon input-icon-right padding-top-5">
                                            <label>
                                                <input name="FlagActive" id="FlagActive" class="ace ace-switch ace-switch-4 FlagActive" type="checkbox" value="1" @checkActive />
                                                <span class="lbl"></span>
                                                <input name="FlagActive" type="hidden" value="0" />
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xs-12">
                                <label style="font-size: 18px; letter-spacing: 1px; color:crimson; font-weight: 600">Chọn các trường tùy chỉnh trong hóa đơn</label>
                                <br />

                                <div class="col-xs-12">
                                    <label style="color: orangered; letter-spacing: 1px; font-size: 15px; font-weight: 500">Bên bán</label><br />
                                    @foreach (var it in dicNNT)
                                    {
                                        var check = "";
                                        var item = lstInvoice_TempGroupField.Where(x => x.DBFieldName.ToString().ToUpper() == it.Key.ToString().ToUpper()).FirstOrDefault();
                                        if (item != null)
                                        {
                                            check = "checked";
                                        }
                                        <input @check type="checkbox" class="master fields" name="@it.Key">
                                        <label class="disabled-fix">@it.Value</label>
                                    }
                                </div>
                                <div class="col-xs-12">
                                    <label style="color: orangered; letter-spacing: 1px; font-size: 15px; font-weight: 500">Bên mua</label><br />
                                    @foreach (var it in dicCustomer)
                                    {
                                        var check = "";
                                        var item = lstInvoice_TempGroupField.Where(x => x.DBFieldName.ToString().ToUpper() == it.Key.ToString().ToUpper()).FirstOrDefault();
                                        if (item != null)
                                        {
                                            check = "checked";
                                        }
                                        <input @check type="checkbox" name="@it.Key" class="master fields">
                                        <label class="disabled-fix">@it.Value</label>
                                    }
                                </div>
                                <div class="col-xs-12">
                                    <label style="color: orangered; letter-spacing: 1px; font-size: 15px; font-weight: 500">Các trường tùy chỉnh hóa đơn</label><br />
                                    @foreach (var it in lstCustomField)
                                    {
                                        var check = "";
                                        var item = lstInvoice_TempGroupField.Where(x => x.DBFieldName.ToString().ToUpper() == it.InvoiceCustomFieldCode.ToString().ToUpper()).FirstOrDefault();
                                        if (item != null)
                                        {
                                            check = "checked";
                                        }
                                        <input @check type="checkbox" name="@it.InvoiceCustomFieldCode" class="master fields">
                                        <label class="disabled-fix">@it.InvoiceCustomFieldName</label>
                                    }
                                </div>
                                <div class="col-xs-12">
                                    <label style="color: orangered; letter-spacing: 1px; font-size: 15px; font-weight: 500">Các trường tùy chỉnh hàng hóa</label><br />
                                    @foreach (var it in lstCustomFieldDtl)
                                    {
                                        var check = "";
                                        var item = lstInvoice_TempGroupField.Where(x => x.DBFieldName.ToString().ToUpper() == it.InvoiceDtlCustomFieldCode.ToString().ToUpper()).FirstOrDefault();
                                        if (item != null)
                                        {
                                            check = "checked";
                                        }
                                        <input @check type="checkbox" name="@it.InvoiceDtlCustomFieldCode" class="fields">
                                        <label class="disabled-fix">@it.InvoiceDtlCustomFieldName</label>
                                    }
                                </div>

                            </div>

                            <div class="form-group col-xs-12" style="padding-left: 5%; font-weight: 600">Bản thể hiện:</div>
                            <div class="col-xs-12" style="margin-left: 5%;" id="divView">
                                @MvcHtmlString.Create(Model.InvoiceTGroupBody == null ? "" : Model.InvoiceTGroupBody.ToString())
                            </div>
                            <div class="form-group col-xs-12" style="padding-left: 5%; font-weight: 600">Thiết kế mẫu:</div>
                            <div class="col-xs-12" style="text-align:center">
                                <textarea id="InvoiceTGroupBody" name="InvoiceTGroupBody" style="width: 94.5%; min-height: 150px">
 @Model.InvoiceTGroupBody
                            </textarea>
                            </div>


                        }
                    </aside>

                    <div class="col-xs-12 text-center">
                        <div class="clearfix">
                            <div class="row no-margin text-center">
                                <a class="btn font-color mybtn-Button" style="margin-left: 10px; padding-left: 15px!important; padding-right: 15px!important;" onclick="SaveData();"><i class="ace-icon fa fa-floppy-o bigger-110"></i>Lưu</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div>

<script>
    $(document).ready(function () {
        $("#InvoiceTGroupBody").on("change keyup paste", function () {
            var currentVal = $(this).val().trim();
            $('#divView').html(currentVal)
        });

        var host = '@MvcHtmlString.Create(ViewBag.host)';
        var linklogo = $('#FilePathThumbnail').val();
        if (linklogo != "") {
            var linkanh = host + linklogo;
            $('#thumbimage').attr('src', linkanh);
        }

        var a = document.getElementById("divTempContent").style.backgroundImage.replace('url("', '').replace('")', '');
        if (a != undefined && a != "") {
            b = a.split('api/File/');
            var background = host + b[1];
            document.getElementById("divTempContent").style.backgroundImage = "url('" + background + "')";
        }
    });

    function CheckForm() {
        var invoiceTGroupCode = $('#InvoiceTGroupCode').val();
        if (invoiceTGroupCode == "") {
            alert("Mã loại mẫu không được trống.");
            return false;
        }
        var invoiceTGroupName = $('#InvoiceTGroupName').val();
        if (invoiceTGroupName == "") {
            alert("Tên loại mẫu không được trống.");
            return false;
        }
        var mst = $('#MST').val();
        if (mst == "") {
            alert("MST chưa được chọn.");
            $('#MST').focus();
            return false;
        }
        var type = $('#Spec_Prd_Type').val();
        if (type == "") {
            alert("Loại chưa được chọn.");
            $('#Spec_Prd_Type').focus();
            return false;
        }
        return true;
    }

    function SaveData()
    {
        debugger;
        var check = CheckForm();
        if (check)
        {
            var flagActive = '0';
            var inputFlagActive = $('#FlagActive');
            if (inputFlagActive !== undefined && inputFlagActive !== null) {
                if (inputFlagActive.prop('checked')) {
                    flagActive = '1';
                }
            }

            var invoiceTGroupCode = ReturnValueText('#InvoiceTGroupCode');
            var invoiceTGroupName = ReturnValueText('#InvoiceTGroupName');
            var invoiceTGroupBody = $('#divView').html().trim();
            var spec_Prd_Type = $('#Spec_Prd_Type').val();
            var mst = $('#MST').val();
            var filePathThumbnail = $('#FilePathThumbnail').val();

            // Customfield
            var Lst_Invoice_TempGroupField = [];
            var countfield = $('input:checkbox.fields:checked').length;
            for (var i = 0; i < countfield; i++) {
                var chbox = $('input:checkbox.fields:checked').eq(i);
                var fieldname = $(chbox).attr('name');
                var ismaster = $(chbox).hasClass("master");
                var obj = new Object();
                obj.InvoiceTGroupCode = invoiceTGroupCode;
                obj.DBFieldName = fieldname;
                if (ismaster == true) {
                    obj.TCFType = "Master";
                }
                else {
                    obj.TCFType = "Detail";
                }
                Lst_Invoice_TempGroupField.push(obj);
            }
            //


            var tem = new Object();
            tem.InvoiceTGroupCode = invoiceTGroupCode;
            tem.InvoiceTGroupName = invoiceTGroupName;
            tem.InvoiceTGroupBody = invoiceTGroupBody;
            tem.FilePathThumbnail = filePathThumbnail;

            tem.Spec_Prd_Type = spec_Prd_Type;
            tem.MST = mst;
            tem.FlagActive = flagActive;
            var token = $('#manageForm input[name=__RequestVerificationToken]').val();
            var modelCur = JSON.stringify(tem);
            var Lst_Invoice_TempGroupFieldCur = JSON.stringify(Lst_Invoice_TempGroupField);

            var url = '@Url.Action("Update", "InvoiceTempGroup")';
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    __RequestVerificationToken: token
                    , model: modelCur
                    , lst_Invoice_TempGroupField: Lst_Invoice_TempGroupFieldCur
                },
                traditional: true,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Success) {
                        if (data.Messages !== null && data.Messages !== undefined && data.Messages.length > 0) {
                            alert(data.Messages[0]);
                        }
                        window.location.href = data.RedirectUrl;
                    }
                    else {
                        if (data.Detail != null) {
                            _showErrorMsg123("Lỗi!", data.Detail);
                        }
                    }
                }, error: function (XMLHttpRequest, textStatus, errorThrown) {
                    debugger;
                    if (textStatus === 'Unauthorized') {
                        alert('custom message. Error: ' + errorThrown);
                    } else {
                        //alert('custom message. Error2: ' + errorThrown);
                    }
                }
            });
        }
    }
</script>

