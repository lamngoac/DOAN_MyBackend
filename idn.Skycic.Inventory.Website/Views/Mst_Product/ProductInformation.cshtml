@using idn.Skycic.Inventory.Common.Models.ProductCentrer
@model RT_Mst_Product
@{

    var list_Mst_ProductType = ViewBag.List_Mst_ProductType as List<Mst_ProductType>;
    var list_Mst_ProductGroup = ViewBag.List_Mst_ProductGroup as List<Mst_ProductGroup>;
    var list_Mst_ProductGroupUI = ViewBag.List_Mst_ProductGroupUI as List<Mst_ProductGroupExt>;
    var list_Mst_Brand = ViewBag.List_Mst_Brand as List<Mst_Brand>;
    var list_Prd_DynamicField = ViewBag.List_Prd_DynamicField as List<Prd_DynamicField>;
    var list_Mst_Attribute = ViewBag.List_Mst_Attribute as List<Mst_Attribute>;
    var list_Mst_VATRate = ViewBag.List_Mst_VATRate as List<Mst_VATRate>;

    var objMst_Product = new Mst_Product();
    if (Model != null && Model.Lst_Mst_Product != null && Model.Lst_Mst_Product.Count > 0)
    {
        objMst_Product = Model.Lst_Mst_Product[0];
    }
    var productType = CUtils.StrValue(objMst_Product.ProductType);
    var productCode = CUtils.StrValue(objMst_Product.ProductCode);
    var productCodeBase = CUtils.StrValue(objMst_Product.ProductCodeBase);
    var productCodeRoot = CUtils.StrValue(objMst_Product.ProductCodeRoot);
    var networkID = CUtils.StrValue(objMst_Product.NetworkID);
    var orgID = CUtils.StrValue(objMst_Product.OrgID);
}
@section StyleSheet{
    <style>
        .labelinput {
            background: url(/Images/edit.svg) no-repeat right;
        }
    </style>
}
<style>
    .labelinput {
        background: url(/Images/edit.svg) no-repeat right;
    }

    .data-item {
        border: 1px solid #ddd;
        border-radius: 4px;
    }

        .data-item td {
            padding: 5px 5px;
        }

    .margin-bottom-5 {
        margin-bottom: 5px !important;
    }
</style>
<script src="~/Content/assets/js/bootbox.js"></script>
<!--Open Thông tin chung-->
<div id="prdct_generalinfo" class="row no-margin">
    <div class="col-7" style="">
        <div class="row no-margin">
            <div class="col-6" style="">
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Loại hàng".HtmlItemString("product"))<span style="color: red "> *</span></label>
                    <div class="col-8">
                        <select id="ProductType" name="ProductType" class="ProductType" onchange="ProductType_Change(this)">
                            <optgroup label="">
                                @if (list_Mst_ProductType != null && list_Mst_ProductType.Count > 0)
                                {
                                    foreach (var item in list_Mst_ProductType)
                                    {
                                        var productTypeCur = CUtils.StrValue(item.ProductType);
                                        var productTypeNameCur = CUtils.StrValue(item.ProductTypeName);
                                        <option value="@MvcHtmlString.Create(productTypeCur)" @(productTypeCur.Equals("PRODUCT") ? "selected" : "")>@MvcHtmlString.Create(productTypeNameCur)</option>
                                    }
                                }
                            </optgroup>
                            @*<option value="ADDDATA">@("".HtmlItemString("product"))</option>*@
                        </select>
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Mã hàng".HtmlItemString("product"))<span style="color: red "> *</span></label>
                    <div class="col-8">
                        <input type="hidden" name="OrgID" id="OrgID" value="@MvcHtmlString.Create(orgID)" />
                        <input type="hidden" name="NetworkID" id="NetworkID" value="@MvcHtmlString.Create(networkID)" />
                        <input type="hidden" name="ProductCode" id="ProductCode" value="@MvcHtmlString.Create(productCode)" />
                        <input type="hidden" name="ProductCodeBase" id="ProductCodeBase" value="@MvcHtmlString.Create(productCodeBase)" />
                        <input type="hidden" name="ProductCodeRoot" id="ProductCodeRoot" value="@MvcHtmlString.Create(productCodeRoot)" />
                        <input type="text" name="ProductCodeUser" id="ProductCodeUser" class="col-12" onchange="ProductCodeUser_OnChange(this);" onblur="ProductCodeUser_OnBlur(this);" value="">
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Bar code".HtmlItemString("product"))</label>
                    <div class="col-8">
                        <input type="text" name="ProductBarCode" id="ProductBarCode" class="col-12" onchange="ProductBarCode_OnChange(this);" onblur="ProductBarCode_OnBlur(this);" value="">
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Tên hàng".HtmlItemString("product"))<span style="color: red "> *</span></label>
                    <div class="col-8">
                        <input type="text" name="ProductName" id="ProductName" class="col-12 ProductName" onchange="ProductName_OnChange(this);" onblur="ProductName_OnBlur(this);" value="">
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Nhóm hàng".HtmlItemString("product"))<span style="color: red"> *</span></label>
                    <div class="col-8">
                        <span class="block input-icon input-icon-right">
                            <select id="ProductGrpCode" name="ProductGrpCode" showpopup-control-adddata="#ShowPopupAddProductGrp" class="col-12" required>
                                <optgroup label="">
                                    @if (list_Mst_ProductGroupUI != null && list_Mst_ProductGroupUI.Count > 0)
                                    {
                                        foreach (var item in list_Mst_ProductGroupUI)
                                        {
                                            var productGrpCode = CUtils.StrValue(item.ProductGrpCode);
                                            var productGrpName = CUtils.StrValue(item.ProductGrpName);
                                            var productGrpLevel = CUtils.StrValue(item.ProductGrpLevel);
                                            var hlevelTitle = CUtils.StrValue(item.HlevelTitle);
                                            @*<option value="@MvcHtmlString.Create(productGrpCode)" product-grp-level="@MvcHtmlString.Create(productGrpLevel)">@MvcHtmlString.Create(productGrpName)</option>*@
                                    <option value="@MvcHtmlString.Create(productGrpCode)" product-grp-level="@MvcHtmlString.Create(productGrpLevel)">@MvcHtmlString.Create(hlevelTitle + "-" + item.OrgID)</option>
                                        }
                                    }
                                </optgroup>
                                <option value="ADDDATA">@("Thêm".HtmlItemString("product"))</option>
                            </select>
                        </span>
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-4 control-label no-padding-right font-weight-500 ">@("Mã Brand".HtmlItemString("product"))</label>
                    <div class="col-8 ">
                        <span class="block input-icon input-icon-right">
                            <select id="BrandCode" name="BrandCode" showpopup-control-adddata="#ShowPopupAddBrand" class="">
                                <optgroup label="">
                                    <option value="">--Chọn Brand--</option>
                                    @if (list_Mst_Brand != null && list_Mst_Brand.Count > 0)
                                    {
                                        foreach (var item in list_Mst_Brand)
                                        {
                                            var brandCode = CUtils.StrValue(item.BrandCode);
                                            var brandName = CUtils.StrValue(item.BrandName);
                                            <option value="@MvcHtmlString.Create(brandCode)">@MvcHtmlString.Create(brandName)</option>
                                        }
                                    }
                                </optgroup>
                                <option value="ADDDATA">@("Thêm".HtmlItemString("product"))</option>
                            </select>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Giá mua".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <input type="text" name="UPBuy" id="UPBuy" onchange="UPBuy_OnChange(this)" onblur="UPBuy_OnBlur(this)" class="col-12 text-right UPBuy" value="0">
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Giá bán".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <input type="text" name="UPSell" id="UPSell" onchange="UPSell_OnChange(this)" onblur="UPSell_OnBlur(this)" class="col-12 text-right UPSell" value="0">
                    </div>
                </div>
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Thuế VAT".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <select id="VATRateCode" name="VATRateCode" class="col-12 VATRateCode">
                            <optgroup label="">
                                @if (list_Mst_VATRate != null && list_Mst_VATRate.Count > 0)
                                {
                                    foreach (var item in list_Mst_VATRate.Where(x => x.FlagActive.Equals("1")))
                                    {
                                        var vatRateCodeCur = CUtils.StrValue(item.VATRateCode);
                                        var vatRateCur = CUtils.StrValue(item.VATRate);
                                        var vatRateDes = CUtils.StrValue(item.VATDesc);
                                        <option value="@MvcHtmlString.Create(vatRateCodeCur)">@MvcHtmlString.Create(vatRateDes)</option>
                                    }
                                }
                            </optgroup>
                        </select>
                    </div>
                </div>
                <div id="div-QtyMinSt" class="form-group margin-bottom-9 div-QtyMinSt">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Tồn kho nhỏ nhất".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <input type="text" name="QtyMinSt" id="QtyMinSt" class="col-12 text-right QtyMinSt" value="0">
                    </div>
                </div>
                <div id="div-QtyEffSt" class="form-group margin-bottom-9 div-QtyEffSt">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Tồn kho tối ưu".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <input type="text" name="QtyEffSt" id="QtyEffSt" class="col-12 text-right QtyEffSt" value="0">
                    </div>
                </div>
                <div id="div-QtyMaxSt" class="form-group margin-bottom-9 div-QtyMaxSt">
                    <label for="" class="col-5 control-label no-padding-right font-weight-500 ">@("Tồn kho tối đa".HtmlItemString("product"))</label>
                    <div class="col-7">
                        <input type="text" name="QtyMaxSt" id="QtyMaxSt" class="col-12 text-right QtyMaxSt" value="0">
                    </div>
                </div>
            </div>
        </div>
        <div class="row no-margin">
            <div class="col-12 no-padding">
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-2 control-label no-padding-right font-weight-500 ">@("Ghi chú".HtmlItemString("product"))</label>
                    <div class="col-10">
                        <textarea name="Remark" id="Remark" class="col-12"></textarea>
                    </div>
                </div>
            </div>
        </div>
        <div class="row no-margin">
            <div class="col-12 no-padding">
                <div class="form-group margin-bottom-9">
                    <label for="" class="col-2 control-label no-padding-right font-weight-500 ">@("File đính kèm".HtmlItemString("product"))</label>
                    <div class="col-1" style="">
                        <span class="block input-icon input-icon-right">
                            <a href="javascript:void(0);" id="selectedFile" class=""><i class="fas fa-paperclip" style="line-height: 30px; color: #7D7D7D"></i></a>
                            <input type="file" name="fileInput" id="fileInput" class="uploadfile" inputid="thumbimage" onchange="setFileCom(this);" style="display: none;" />
                        </span>
                    </div>
                    <div class="col-9">
                        <div style="width: 100%; float: left;">
                            <table class="padding-left-right-25">
                                <tbody id="tbody-CrCt_FileUpload"></tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-5">
        <div class="slideshow-container">
            <!-- Full-width images with number and caption text -->
            <div class="mySlides fade">
                <img id="img-0" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="mySlides fade">
                <img id="img-1" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="mySlides fade">
                <img id="img-2" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="mySlides fade">
                <img id="img-3" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="mySlides fade">
                <img id="img-4" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>

            <!-- Next and previous buttons -->
            <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
            <a class="next" onclick="plusSlides(1)">&#10095;</a>
        </div>
        <div class="list-images-slide" style="text-align:center;padding-top: 10px;">
            <div class="thumbnail">
                <span class="change-img">
                    <span class="change">
                        <i class="fas fa-camera"></i>
                    </span>
                    <span class="delete">
                        <i class="fas fa-times"></i>
                    </span>
                </span>
                <input id="inp-thumbnail-0" type='file' hidden>
                <img id="img-thumbnail-0" src="https://www.vietravel.com/Images/no-image-available.jpg" style="width: 100%">
            </div>
            <div class="thumbnail">
                <span class="change-img">
                    <span class="change">
                        <i class="fas fa-camera"></i>
                    </span>
                    <span class="delete">
                        <i class="fas fa-times"></i>
                    </span>
                </span>
                <input id="inp-thumbnail-1" type='file' hidden>
                <img id="img-thumbnail-1" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="thumbnail">
                <span class="change-img">
                    <span class="change">
                        <i class="fas fa-camera"></i>
                    </span>
                    <span class="delete">
                        <i class="fas fa-times"></i>
                    </span>
                </span>
                <input id="inp-thumbnail-2" type='file' hidden>
                <img id="img-thumbnail-2" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="thumbnail">
                <span class="change-img">
                    <span class="change">
                        <i class="fas fa-camera"></i>
                    </span>
                    <span class="delete">
                        <i class="fas fa-times"></i>
                    </span>
                </span>
                <input id="inp-thumbnail-3" type='file' hidden>
                <img id="img-thumbnail-3" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
            <div class="thumbnail">
                <span class="change-img">
                    <span class="change">
                        <i class="fas fa-camera"></i>
                    </span>
                    <span class="delete">
                        <i class="fas fa-times"></i>
                    </span>
                </span>
                <input id="inp-thumbnail-4" type='file' hidden>
                <img id="img-thumbnail-4" src="https://www.vietravel.com/Images/no-image-available.jpg">
            </div>
        </div>
        <div class="product-images" hidden>
            <input type="text" name="productImage-0" id="productImage-0" value="" hidden />
            <input type="text" name="productImage-1" id="productImage-1" value="" hidden />
            <input type="text" name="productImage-2" id="productImage-2" value="" hidden />
            <input type="text" name="productImage-3" id="productImage-3" value="" hidden />
            <input type="text" name="productImage-4" id="productImage-4" value="" hidden />
        </div>
    </div>
</div>
<!--Close Thông tin chung-->
<!---->
<!--Open Thông tin bổ sung-->
<div id="prdct_additionalinfo" class="row no-margin">
    <div class="col-12 title-toggle" onclick="Toggle(this)">
        <span>@("Thông tin bổ sung".HtmlItemString("product").ToUpper())</span>
        <img class="showdetail" style="width: 20px" src="/Images/More.svg" value="1">
    </div>
    <div class="col-12 detail-toggle" style="display: none">
        <div class="row no-margin" style="padding: 5px 0 0">
            <table id="table-information" class="table-product col-7">
                <tbody id="tbody-information"></tbody>
            </table>
        </div>
        <a href="javascript: void(0); " class="btn btn-nc-button-2" style="" onclick="AddRow_Information()">@("Thêm thông tin".HtmlItemString("product"))</a>
    </div>
</div>
<!--Close Thông tin bổ sung-->
<!---->
<!--Open Thuộc tính-->
<div id="prdct_properties" class="row no-margin">
    <div class="col-12 title-toggle" onclick="Toggle(this)">
        <span>@("Thuộc tính".HtmlItemString("product").ToUpper())</span>
        <img class="showdetail" style="width: 20px" src="/Images/More.svg" value="1">
    </div>
    <div class="col-12 detail-toggle" style="display: none">
        <div class="row no-margin" style="padding: 5px 0 0">
            <table id="table-attribute" class="table-product col-7">
                <tbody id="tbody-attribute"></tbody>
            </table>
        </div>
        <a href="javascript: void(0); " class="btn btn-nc-button-2" style="" onclick="AddRow_Attribute()">@("Thêm thuộc tính".HtmlItemString("product"))</a>
    </div>
</div>
<!--Close Thuộc tính-->
<!---->
<!--Open Đơn vị tính-->
<div id="prdct_unit" class="row no-margin">
    <div class="col-12 title-toggle" onclick="Toggle(this)">
        <span>@("Đơn vị".HtmlItemString("product").ToUpper())</span>
        <img class="showdetail" style="width: 20px" src="/Images/More.svg" value="1">
    </div>
    <div class="col-12 detail-toggle" style="display: none">
        <div class="row no-margin" style="padding: 5px 0 0">
            <table id="table-unit-root" class="table-product col-7">
                <tbody id="tbody-unit-root">
                    <tr class="trdata unitcode-root">
                        <td>@("Đơn vị cơ bản".HtmlItemString("product"))</td>
                        <td>
                            <div class="form-group no-margin">
                                <input type="text" name="Unit_Root" id="Unit_Root" edit="0" onchange="UnitName_Root_Change(this);" onblur="UnitName_Root_Blur(this);" class="col-12" placeholder="Nhập đơn vị" value="">
                            </div>
                        </td>
                        <td>
                            <input type="checkbox" id="FlagSell_Root" name="FlagSell_Root" onchange="FlagSell_Root_Change(this);" value="0" />
                            <span class="">@("Cờ được bán".HtmlItemString("product"))</span>
                        </td>
                        <td>
                            <input type="checkbox" id="FlagBuy_Root" name="FlagBuy_Root" onchange="FlagBuy_Root_Change(this);" value="0" />
                            <span class="">@("Cờ được mua".HtmlItemString("product"))</span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="row no-margin" style="padding: 5px 0 0">
            <table id="table-unit" class="table-unit col-9">
                <thead class="display-none">
                    <tr>
                        <th></th>
                        <th class="text-center">@("Tên đơn vị".HtmlItemString("product"))</th>
                        <th class="text-center">@("SL quy đổi".HtmlItemString("product"))</th>
                        <th class="text-center">@("Giá bán".HtmlItemString("product"))</th>
                        <th class="text-center">@("Giá mua".HtmlItemString("product"))</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tbody-unit"></tbody>
            </table>
        </div>
        <a href="javascript: void(0); " class="btn btn-nc-button-2 btn-Add-Unit" style="" onclick="AddRow_Unit()">@("Thêm đơn vị".HtmlItemString("product"))</a>
    </div>
</div>
<!--Close Đơn vị tính-->
<!---->
<!--Open Danh sách hàng hóa cùng loại-->
<div id="prdct_samekind" class="row no-margin">
    <div class="col-12 title-toggle" onclick="Toggle(this)">
        <span>@("Danh sách hàng cùng loại".HtmlItemString("product").ToUpper())</span>
        <img class="showdetail" style="width: 20px" src="/Images/More.svg" value="1">
    </div>
    <div class="col-12 detail-toggle" style="display: none">
        <div id="divListOfTheSameTypeItems" tb="" class="row no-margin" style="padding: 5px 0 0">

        </div>
    </div>
</div>
<!--Close Danh sách hàng hóa cùng loại-->
@*Danh sách file*@
<table style="display: none;">
    <tbody id="rowtemplateFileUpload">
        <tr class="data-item trdata" idx="==idx==" productfilename="==productfilename==" productfiletype="==productfiletype==">
            <input type="hidden" name="Lst_CrCt_FileUpload[==idx==].ProductFileName" value="==productfilename==" />
            <input type="hidden" name="Lst_CrCt_FileUpload[==idx==].ProductFilePath" value="==productfilepath==" />
            <input type="hidden" name="Lst_CrCt_FileUpload[==idx==].ProductFileType" value="==productfiletype==" />
            <td>
                <a download='==productfilename==' href="==productfilepath==" target="_blank"><span><i style="color: #098850" class="==classtypefile=="></i></span><span> ==productfilename==</span></a>
            </td>
            <td>
                <span style="padding-left: 10px">
                    <a href="javascript:;" class="icon-delete" title="Xóa" onclick="DeleteFile(this)"><i class="fas fa-times"></i></a>
                </span>
            </td>
        </tr>
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $('#thuoctinh').select2();
        $('#ProductType, #VATRateCode').select2({
            minimumResultsForSearch: -1
        });

        $('#thuoctinh').on("select2:selecting", function (e) {
            alert("abc");
        });
    });

    function Toggle(thiz) {

        var shodetail = $(thiz).find('.showdetail');
        var idx = shodetail.attr('value');
        if (idx == 1) {
            shodetail.attr('src', '/Images/Hide.svg');
            shodetail.attr('value', '0');
        }
        else {
            shodetail.attr('src', '/Images/More.svg');
            shodetail.attr('value', '1');
        }

        $(thiz).parent().find('.detail-toggle').toggle();
    }

    function ShowPopupAddAttribute() {
        $('#ShowPopupAddAttribute').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ParentCode').select2();
        $('#ShowPopupAddAttribute').modal('show');
    }

    function ClosePopupAddAttribute() {
        $('#ShowPopupAddAttribute').modal('hide');
    }

    //function AddAttribute() {
    //
    //    var prodCode = commonUtils.returnValue($('#ProdCode').val());
    //    var parentCode = commonUtils.returnValue($('#ParentCode').val());
    //    if (!commonUtils.isNullOrEmpty(prodCode)) {
    //        //add dữ liệu
    //        var id = prodCode.replace(/\s/g, '');
    //        var padding = "";
    //        var level = parseInt($('#ParentCode').find(':selected').attr('level'));
    //        if (level === 2) {
    //            alert("Hệ thống chỉ hỗ trợ 3 cấp");
    //            return false;
    //        }

    //        if (!commonUtils.isNullOrEmpty(parentCode)) {
    //
    //            if (level === 0) {
    //                padding = "-";
    //                $('#thuoctinh, #ParentCode').append('<option id="' + id + '" value="' + prodCode + '">' + padding + prodCode + '</option>')
    //            }
    //            else if (level === 1) {
    //                padding = "--";
    //                $('#thuoctinh, #ParentCode').find('option[prodcode=' + parentCode + ']').after('<option id="' + id + '" value="' + prodCode + '">' + padding + prodCode + '</option>');
    //            }


    //        }
    //        else {
    //            $('#thuoctinh, #ParentCode').append('<option id="' + id + '" value="' + prodCode + '">' + prodCode + '</option>')
    //        }

    //        //Bỏ selected ở tất cả
    //        $('#thuoctinh').find('option').removeAttr('selected');
    //        //Gắn selected ở option mới thêm
    //        $('#thuoctinh').find('option[id=' + id + ']').attr('selected', 'selected')
    //        //Reset select2
    //        $('#thuoctinh').select2();
    //        //reset ô #ProdCode
    //        $('#ProdCode').val('');
    //        //Đóng popup
    //        ClosePopupAddAttribute();
    //        //CheckProduct();
    //    }
    //}
</script>

<script>
    updateList = function () {

        var input = document.getElementById('customFile');
        var output = document.getElementById('fileList');
        var children = "";
        for (var i = 0; i < input.files.length; ++i) {
            children += '<li>' + input.files.item(i).name + '</li>';
        }
        output.innerHTML = '<ul>' + children + '</ul>';
    }
</script>

@* File upload *@
<script type="text/javascript">
    var maxImageWidth = 800,
        totalFiles = 0,
        currentTotalFiles = 0,
        fileTypeError = false,
        fileSizeError = false,
        ListImages = [],
        ListFiles = [],
        ImgId = 0,
        FileId = 0;
    $(document).ready(function () {
        $("#selectedFile").bind('click', function () {
            $('#fileInput').click();
            //$('#fileInput').val('');
        });
    });
    document.getElementById("selectedFile").addEventListener('change', setFileCom, false);
    function setFileCom(event) {
        //
        var listFiles = event.files;
        totalFiles = listFiles.length;
        currentTotalFiles = 0;
        fileTypeError = false;
        fileSizeError = false;
        if (totalFiles > 0) {
            for (var i = 0; i < listFiles.length; i++) {
                if (FileId > 0) {
                    FileId = (FileId + 1);
                } else {
                    FileId = (FileId + i);
                }
                var file = listFiles[i];
                var name = file.name;
                if (!name.match(/(?:doc|docx|xls|xlsx|ppt|pptx|pdf|gif|jpg|jpeg|png|bmp|rar|zip|7z)$/)) {
                    alert("File upload phải thuộc các định dạng sau: \" doc | docx | xls | xlsx | pptx | pdf | gif | jpg | jpeg | png | rar | zip | 7z \"!");
                    return false;
                } else {
                    renderFileInfo(file, FileId);
                }

            }
        }
        $('#fileInput').val('');
    }
    function renderFileInfo(file, id) {

        var name = file.name;
        var size = file.size;
        var type = file.type;

        var classtypefile = '';
        if (name.match(/(?:doc|docx)$/)) {
            classtypefile = 'far fa-file-word';
        }
        else if (name.match(/(?:xls|xlsx)$/)) {
            classtypefile = 'far fa-file-excel';
        }
        else if (name.match(/(?:ppt|pptx)$/)) {
            classtypefile = 'far fa-file-powerpoint';
        }
        else if (name.match(/(?:pdf)$/)) {
            classtypefile = 'far fa-file-pdf';
        }
        else if (name.match(/(?:gif|jpg|jpeg|png|bmp)$/)) {
            classtypefile = 'far fa-file-image';
        }
        else if (name.match(/(?:rar|zip|7z)$/)) {
            classtypefile = 'far fa-file-archive';
        }

        var fileReader = new FileReader();

        fileReader.onload = function (event) {
            var base64 = event.target.result;
            var objFile = new Object();
            objFile.Id = id;
            objFile.Name = name;
            objFile.Size = size;
            objFile.Type = type;
            objFile.Src = base64;
            objFile.Status = 'N';
            var strHtml = commonUtils.getHtmlFromTemplate($('#rowtemplateFileUpload'), {
                productfilename: name
                , productfilepath: objFile.Src
                , productfiletype: type
                , productfiledesc: ''
                , classtypefile: classtypefile
                , idx: 999999
            });

            var oldItem = $('#tbody-CrCt_FileUpload').find('tr[productfilename="' + name + '"]');
            if (oldItem != undefined && oldItem.length > 0) {
                var strMess = "File: " + name + " đã tồn tại!";
                alert(strMess);
            }
            else {
                $('#tbody-CrCt_FileUpload').append(strHtml);
                commonUtils.updateTableTrNotShowIdx($('#tbody-CrCt_FileUpload tr'), true);
            }
            ListFiles.push(objFile);
        }

        fileReader.readAsDataURL(file);
    }
    function DeleteFile(thiz) {

        if (thiz !== undefined && thiz !== null) {
            var trCur = $(thiz).parent().parent().parent();
            var idx = $(trCur).attr('idx');
            var productfilename = trCur.attr('productfilename');
            var productfilepath = trCur.find('input[type="hidden"][name="Lst_CrCt_FileUpload[' + idx + '].ProductFilePath"]').val();
            var productfiletype = trCur.find('input[type="hidden"][name="Lst_CrCt_FileUpload[' + idx + '].ProductFileType"]').val();
            bootbox.confirm({
                title: "Thông báo!",
                message: "Đồng ý xóa tệp tin đính kèm: '" + productfilename + "' ?",
                buttons: {
                    'cancel': {
                        label: 'Cancel',
                        className: 'btn mybtn-Button btnButton'
                    },
                    'confirm': {
                        label: 'OK',
                        className: 'btn mybtn-Button btnButton'
                    }
                },
                callback: function (result) {
                    if (result) {
                        trCur.remove();
                        commonUtils.updateTableTrNotShowIdx($('#tbody-CrCt_FileUpload tr'), true);
                    }
                }
            });
        }
        else {
            alert("Chưa chọn bản ghi cần xóa!");
            return;
        }
    }
</script>

<!-- Modal -->
<!--Model Add Information-->
<div class="modal fade" id="ShowPopupAddInformation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Thêm thông tin</b></h2>
                <a href="javascript:;" onclick="ClosePopupAddInformation()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupAddInformation" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-5 display-none">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="InformationCode" name="InformationCode" class="col-11 text-right InformationCode" value="" autocomplete="off" required />
                            </span>
                        </div>
                    </div>
                    <div class="form-group margin-bottom-5">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="InformationTitle" name="InformationTitle" class="col-11 text-right InformationTitle" onblur="getvalue()" value="" autocomplete="off" required />
                            </span>
                        </div>
                    </div>
                    <div class="form-group margin-bottom-5 display-none">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("ControlType")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <select id="InformationControlType" name="InformationControlType" class="InformationControlType col-11">
                                    <option value="0">Default</option>
                                    <option value="1">TextBox</option>
                                    <option value="3">Select</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="form-group margin-bottom-5 display-none">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("PrdDynamicFieldDataTypes")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <select id="InformationPrdDynamicFieldDataTypes" name="InformationPrdDynamicFieldDataTypes" class="InformationPrdDynamicFieldDataTypes col-11">
                                    <option value="1">String</option>
                                    <option value="2">Int</option>
                                    <option value="3">Double</option>
                                    <option value="4">Bool</option>
                                    <option value="5">DateTime</option>
                                    <option value="6">Date</option>
                                </select>
                            </span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="AddInformation()" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Thêm</a>
            </div>
        </div>
    </div>
</div>

<!--Model Add Attribute-->
<div class="modal fade" id="ShowPopupAddAttribute" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Thêm thuộc tính</b></h2>
                <a href="javascript:;" onclick="ClosePopupAddAttribute()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupAddAttribute" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-5">
                        <label for="ProdCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên thuộc tính <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="AttributeName" name="AttributeName" class="col-11 text-right AttributeName" value="" autocomplete="off" required />
                            </span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="AddAttribute()" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Thêm</a>
            </div>
        </div>
    </div>
</div>

<!--Model Update Information-->
<div class="modal fade" id="ShowPopupUpdateInformation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Sửa thông tin</b></h2>
                <a href="javascript:;" onclick="ClosePopupUpdateInformation()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupUpdateInformation" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-5">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên thông tin <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="InformationCode" name="InformationCode" class="col-11 text-right InformationCode" value="" hidden />
                                <input type="text" id="InformationTitle" name="InformationTitle" class="col-11 text-right InformationTitle" value="" required />
                            </span>
                        </div>
                    </div>
                    <div class="form-group margin-bottom-5 display-none">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("ControlType")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <select id="InformationControlType" name="InformationControlType" class="InformationControlType col-11">
                                    <option value="0">Default</option>
                                    <option value="1">TextBox</option>
                                    <option value="3">Select</option>
                                </select>
                            </span>
                        </div>
                    </div>
                    <div class="form-group margin-bottom-5 display-none">
                        <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("PrdDynamicFieldDataTypes")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <select id="InformationPrdDynamicFieldDataTypes" name="InformationPrdDynamicFieldDataTypes" class="InformationPrdDynamicFieldDataTypes col-11">
                                    <option value="1">String</option>
                                    <option value="2">Int</option>
                                    <option value="3">Double</option>
                                    <option value="4">Bool</option>
                                    <option value="5">DateTime</option>
                                    <option value="6">Date</option>
                                </select>
                            </span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="UpdateInformation()" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Cập nhật</a>
            </div>
        </div>
    </div>
</div>

<!--Model Update Attribute-->
<div class="modal fade" id="ShowPopupUpdateAttribute" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Sửa thuộc tính</b></h2>
                <a href="javascript:;" onclick="ClosePopupUpdateAttribute()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupAddAttribute" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-5">
                        <label for="ProdCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên thuộc tính <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-8">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="AttributeCode" name="AttributeCode" class="col-11 text-right AttributeCode" value="" hidden />
                                <input type="text" id="AttributeName" name="AttributeName" class="col-11 text-right AttributeName" value="" required />
                            </span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="UpdateAttribute()" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Cập nhật</a>
            </div>
        </div>
    </div>
</div>

<!--Model Add ProductGroup-->
<div class="modal fade" id="ShowPopupAddProductGrp" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Thêm nhóm hàng</b></h2>
                <a href="javascript:;" onclick="ClosePopupAddProductGrp()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupAddGrpCode" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-9">
                        <label for="ProdCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên nhóm hàng <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-5">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="ProductGrpName" name="ProductGrpName" class="col-12 text-right BrandName" value="" autocomplete="off" required />
                            </span>
                        </div>

                    </div>
                    <div class="form-group margin-bottom-9">
                        <label for="ProductGrpCodeParent" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Nhóm hàng cha <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-5">
                            <select id="ProductGrpCodeParent" name="ProductGrpCodeParent" class="col-11" required="">
                                @if (list_Mst_ProductGroupUI != null && list_Mst_ProductGroupUI.Count > 0)
                                {
                                    foreach (var item in list_Mst_ProductGroupUI)
                                    {
                                        var productGrpCode = CUtils.StrValue(item.ProductGrpCode);
                                        var productGrpLevel = CUtils.StrValue(item.ProductGrpLevel);
                                        var hlevelTitle = CUtils.StrValue(item.HlevelTitle);
                                        <option value="@MvcHtmlString.Create(productGrpCode)" product-grp-level="@MvcHtmlString.Create(productGrpLevel)">@MvcHtmlString.Create(hlevelTitle)</option>
                                    }
                                })
                            </select>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" onclick="AddProductGrp()" id="AddProductGrp" href="javascript:void(0);" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Thêm</a>
            </div>
        </div>
    </div>
</div>

<!--Model Add Brand-->
<div class="modal fade" id="ShowPopupAddBrand" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Thêm nhãn hiệu</b></h2>
                <a href="javascript:;" onclick="ClosePopupAddBrand()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupAddBrand" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-9">
                        <label for="ProdCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên nhãn hiệu <span style=\"color: red\">*</span>")</label>
                        <div class="col-12 col-sm-5">
                            <span class="block input-icon input-icon-right">
                                <input type="text" id="BrandName" name="BrandName" class="col-12 text-right BrandName" value="" autocomplete="off" required />
                            </span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" onclick="AddBrand()" href="javascript:void(0);" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i> Thêm</a>
            </div>
        </div>
    </div>
</div>

<!--Model Warning-->
<div class="modal fade" id="ShowPopupWarning" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel"><b>Mã hàng</b></h2>
                <a href="javascript:;" onclick="ClosePopupWarning()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
            </div>
            <div class="modal-body" style="">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupWarning" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group margin-bottom-5">
                        <label for="" class="col-xs-12 control-label no-padding-right font-weight-500">@MvcHtmlString.Create("Mã hàng chứa ký tự đặc biệt, bạn chắc chắn muốn lưu?")</label>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a class="btn font-color mybtn-Button" id="Confirm" onclick="onConfirm(this)" href="javascript:void(0);" style="float: right;font-size: 13px;"><i class="fas fa-check icon-checked" aria-hidden="true"></i> Đồng ý</a>
                <a class="btn btn-cancel" id="Cancel" onclick="ClosePopupWarning()" href="javascript:void(0);" style="float: right;font-size: 13px;"><i class="fas fa-ban" aria-hidden="true"></i> Bỏ qua</a>
            </div>
        </div>
    </div>
</div>
<!--Script popup thông tin thêm-->
<script>
    function getvalue() {

        var value = commonUtils.returnValueText('#ShowPopupAddInformation #InformationTitle');
        var gen = commonUtils.genCode(value);
        $('#ShowPopupAddInformation #InformationCode').val(gen);
    }

    function ShowPopupAddInformation(idx) {

        $('#ShowPopupAddInformation #InformationCode').attr('idx', idx);
        $('#ShowPopupAddInformation').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupAddInformation').modal('show');
    }

    function ShowPopupUpdateInformation(code, title, controlType, dataType) {

        $('#ShowPopupUpdateInformation #InformationCode').val(code);
        $('#ShowPopupUpdateInformation #InformationTitle').val(title);
        $('#ShowPopupUpdateInformation #InformationControlType').find('option[value="' + controlType + '"]').attr('selected', 'selected');
        $('#ShowPopupUpdateInformation #InformationPrdDynamicFieldDataTypes').find('option[value="' + dataType + '"]').attr('selected', 'selected');
        $('#ShowPopupUpdateInformation').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupUpdateInformation').modal('show');;
    }

    function ClosePopupUpdateInformation() {
        $('#ShowPopupUpdateInformation').modal('hide');
        $('#ShowPopupUpdateInformation').on('hidden.bs.modal', function () {
            $('#ShowPopupUpdateInformation form')[0].reset();
        });
    }

    function ClosePopupAddInformation() {
        $('#ShowPopupAddInformation').modal('hide');
        $('#ShowPopupAddInformation').on('hidden.bs.modal', function () {
            $(this).find('#manageFormShowPopupAddInformation').trigger('reset');
        });
    }

    function AddInformation() {
        debugger
        var code = commonUtils.returnValue($('#InformationCode').val());
        var title = commonUtils.returnValue($('#InformationTitle').val());
        var controlType = commonUtils.returnValue($('#InformationControlType').val());
        var dataType = commonUtils.returnValue($('#InformationPrdDynamicFieldDataTypes').val());

        var tem = {};
        tem.Code = code;
        tem.Title = title;
        tem.ControlType = controlType;
        tem.DataType = dataType;

        var modelcur = commonUtils.returnJSONValue(tem);

        $.ajax({
            url: '@Url.Action("Prd_DynamicField_Create", "Mst_Product")',
            type: 'POST',
            //contentType: 'json',
            data: {
                model: modelcur
            },
            success: function (data) {
                debugger
                ClosePopupAddInformation();
                ListDataInformation.push({ Code: code, Title: title });
                $('.select-information').each(function () {
                    debugger
                    let selected = commonUtils.returnValue($('#InformationCode').attr('idx')) === $(this).closest('tr.trdata').attr('idx') ? 'selected' : '';
                    $(this).append('<option value="' + code + ' " ' + selected + '>' + title + '</option>');
                    $(this).select2();
                })

                var $divSelectInformation = $('.select-information').closest('tr.trdata[idx="' + commonUtils.returnValue($('#InformationCode').attr('idx')) + '"]')
                var $aEditAttr = $divSelectInformation.find('a.btn-add-or-edit');
                $aEditAttr.empty();
                $aEditAttr.attr('title', 'Sửa thông tin');
                $aEditAttr.off('click');
                $aEditAttr.on('click', function (e) {
                    var attributeCode = $($aEditAttr).siblings('select.select-information').attr('select-value');
                    var attributeName = $($aEditAttr).siblings('select.select-information').find('option[value = "' + code + '"]').text();
                    // Show popup update attribute
                    ShowPopupUpdateInformation(attributeCode, attributeName);
                });
                var $iEditAttr = $('<i>');
                $iEditAttr.attr('class', 'fas fa-pencil-alt');
                $aEditAttr.append($iEditAttr);
            }
        })
    }

    function UpdateInformation() {
        var code = commonUtils.returnValue($('#ShowPopupUpdateInformation #InformationCode').val());
        var title = commonUtils.returnValue($('#ShowPopupUpdateInformation #InformationTitle').val());
        var controlType = commonUtils.returnValue($('#ShowPopupUpdateInformation #InformationControlType').val());
        var dataType = commonUtils.returnValue($('#ShowPopupUpdateInformation #InformationPrdDynamicFieldDataTypes').val());

        var tem = {};
        tem.Code = code;
        tem.Title = title;
        tem.ControlType = controlType;
        tem.DataType = dataType;

        var modelcur = commonUtils.returnJSONValue(tem);
        $.ajax({
            url: '@Url.Action("Prd_DynamicField_Update", "Mst_Product")',
            type: 'POST',
            //contentType: 'json',
            data: {
                model: modelcur
            },
            success: function (data) {

                ClosePopupUpdateInformation();
                //debugger;
                ListDataInformation.find(element => element.Code === code).Title = title;
                $('.select-information').each(function () {
                    $(this).find('option[value="' + code + '"]').text(title);
                    $(this).on('select2:close', function () { commonUtils.showPopup(this); });
                    $(this).select2();
                });
            }
        })
    }
</script>

<!-- Script popup thong tin san pham-->
<script>
    $(document).ready(function () {
        $('select#BrandCode').select2().on('select2:close', function () {commonUtils.showPopup(this);});
        $('select#ProductGrpCode').select2().on('select2:close', function () { commonUtils.showPopup(this); });
        $('select#ProductGrpCodeParent').select2();
    })



    function ShowPopupAddAttribute(idx) {

        $('#ShowPopupAddAttribute #AttributeName').attr('idx', idx);
        $('#ShowPopupAddAttribute').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupAddAttribute').modal('show');
    }

    function ShowPopupUpdateAttribute(attributeCode, attributeName) {
        $('#ShowPopupUpdateAttribute #AttributeCode').val(attributeCode);
        $('#ShowPopupUpdateAttribute #AttributeName').val(attributeName);
        $('#ShowPopupUpdateAttribute').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupUpdateAttribute').modal('show');;
    }

    function ClosePopupUpdateAttribute() {
        $('#ShowPopupUpdateAttribute').modal('hide');
        $('#ShowPopupUpdateAttribute').on('hidden.bs.modal', function () {
            $('#ShowPopupUpdateAttribute form')[0].reset();
        });
    }

    function ClosePopupAddAttribute() {
        $('#ShowPopupAddAttribute').modal('hide');
        $('#ShowPopupAddAttribute').on('hidden.bs.modal', function () {
            $(this).find('#manageFormShowPopupAddAttribute').trigger('reset');
        });
    }

    function ShowPopupWarning(flagRedirect) {
        $('#Confirm').attr('data-flag', flagRedirect);
        $('#ShowPopupWarning').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupWarning').modal('show');
    }

    function ClosePopupWarning() {
        $('#ShowPopupWarning').modal('hide');
        $('#ShowPopupWarning').on('hidden.bs.modal', function () {
            $(this).find('#manageFormShowPopupWarning').trigger('reset');
        });
    }
    function onConfirm(thiz) {
        var flag = $(thiz).attr('data-flag');
        SaveData(flag);
    }
    function AddAttribute() {
        var listError = [];
        var attributename = commonUtils.returnValue($('#AttributeName').val());
        listError = commonUtils.checkElementAddListError(listError, '#AttributeName', 'has-error-fix', 'Tên thuộc tính không được chứa ký tự đặc biệt!', attributename);
        if (listError !== undefined && listError !== null && listError.length > 0) {
            commonUtils.showToastr(listError);
            return false;
        } else {

        $.ajax({
            url: '@Url.Action("Mst_Attribute_Create", "Mst_Product")',
            type: 'POST',
            //contentType: 'json',
            data: { attributename: attributename },
            success: function (data) {
                debugger;
                ClosePopupAddAttribute();
                if (data.Data != null) {
                    ListDataAttribute.push({ AttributeCode: data.Data.AttributeCode, AttributeName: data.Data.AttributeName });
                    $('.select-attribute').each(function () {
                        let selected = commonUtils.returnValue($('#AttributeName').attr('idx')) === $(this).closest('tr.trdata').attr('idx') ? 'selected' : '';
                        $(this).append('<option value="' + data.Data.AttributeCode + ' " ' + selected + '>' + data.Data.AttributeName + '</option>');
                        $(this).select2();
                    });

                    var $divSelectAttribute = $('.select-attribute').closest('tr.trdata[idx="' + commonUtils.returnValue($('#AttributeName').attr('idx')) + '"]')
                    var $aEditAttr = $divSelectAttribute.find('a.btn-add-or-edit');
                    $aEditAttr.empty();
                    $aEditAttr.attr('title', 'Sửa thuộc tính');
                    $aEditAttr.off('click');
                    $aEditAttr.on('click', function (e) {
                        var attributeCode = $($aEditAttr).siblings('select.select-attribute').attr('select-value');
                        var attributeName = $($aEditAttr).siblings('select.select-attribute').find('option[value = "' + attributeCode + '"]').text();
                        // Show popup update attribute
                        ShowPopupUpdateAttribute(attributeCode, attributeName);
                    });
                    var $iEditAttr = $('<i>');
                    $iEditAttr.attr('class', 'fas fa-pencil-alt');
                    $aEditAttr.append($iEditAttr);
                }

            }
        })
        }
    }

    function UpdateAttribute() {
        var attributeCode = commonUtils.returnValue($('#AttributeCode').val());
        var attributeName = commonUtils.returnValue($('#ShowPopupUpdateAttribute #AttributeName').val());
        $.ajax({
            url: '@Url.Action("Mst_Attribute_Update", "Mst_Product")',
            type: 'POST',
            //contentType: 'json',
            data: {
                attributename: attributeName,
                attributecode: attributeCode
            },
            success: function (data) {
                ClosePopupUpdateAttribute();
                ListDataAttribute.find(element => element.AttributeCode === attributeCode).AttributeName = attributeName;
                $('.select-attribute').each(function () {
                    $(this).find('option[value="' + attributeCode + '"]').text(attributeName) ;
                    $(this).select2();
                })
            }
        })
    }

    function ShowPopupAddBrand() {
        $('#ShowPopupAddBrand').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupAddBrand').modal('show');
    }

    function ClosePopupAddBrand() {
        $('#ShowPopupAddBrand').modal('hide');
        $('#ShowPopupAddBrand').on('hidden.bs.modal', function () {
            $('#ShowPopupAddBrand form')[0].reset();
        });
    }

    function AddBrand() {
        var listError = [];
        var brandname = commonUtils.returnValue($('#BrandName').val());
        listError = commonUtils.checkElementAddListError(listError, '#BrandName', 'has-error-fix', 'Tên nhãn hiệu không được chứa ký tự đặc biệt!', brandname);
        if (listError !== undefined && listError !== null && listError.length > 0) {
            commonUtils.showToastr(listError);
            return false;
        } else {
            $.ajax({
                url: '@Url.Action("Mst_Brand_Create", "Mst_Product")',
                type: 'POST',
                //contentType: 'json',
                data: { brandname: brandname },
                success: function (data) {
                    ClosePopupAddBrand();
                    $('select#BrandCode').each(function () {
                        $(this).find('optgroup').append('<option value="' + brandname + '" selected>' + brandname + '</option>');
                        $(this).select2().on('select2:close', function () { commonUtils.showPopup(this); });
                    })
                }
            })
        }
    }

    function ShowPopupAddProductGrp() {
        $('#ShowPopupAddProductGrp').modal({
            backdrop: false,
            keyboard: true,
        });
        $('#ShowPopupAddProductGrp').modal('show');
    }

    function ClosePopupAddProductGrp() {
        $('#ShowPopupAddProductGrp').modal('hide');
        $('#ShowPopupAddProductGrp').on('hidden.bs.modal', function () {
            $('#ShowPopupAddProductGrp form')[0].reset();
        });
    }

    function AddProductGrp() {
        var productGrpName = commonUtils.returnValue($('#ProductGrpName').val());
        var productGrpCodeParent = commonUtils.returnValue($('#ProductGrpCodeParent').val());
        var productGrpNameUI = productGrpName;
        var productGrpLevel = 1 + Number($('#ProductGrpCodeParent option:selected').attr('product-grp-level'));
        for (let i = 1; i <= productGrpLevel; i++) {
            productGrpNameUI = '&emsp;' + productGrpNameUI;
        }
        var listError = [];
        listError = commonUtils.checkElementAddListError(listError, '#ProductGrpName', 'has-error-fix', 'Tên nhóm hàng không được chứa ký tự đặc biệt!', productGrpName);
        if (listError !== undefined && listError !== null && listError.length > 0) {
            commonUtils.showToastr(listError);
            return false;
        } else {

        $.ajax({
            url: '@Url.Action("Mst_ProductGrp_Create", "Mst_Product")',
            type: 'POST',
            //contentType: 'json',
            data: {
                productGrpName: productGrpName,
                productGrpCodeParent: productGrpCodeParent
            },
            success: function (data) {
                ClosePopupAddProductGrp();
                $('select#ProductGrpCode').each(function () {
    debugger
    var x = $(this).find('optgroup').find('option[value="' + productGrpCodeParent + '"]');
                    $(this).find('optgroup').find('option[value="' + productGrpCodeParent + '"]')
                                            .after('<option value="' + productGrpName + '" selected>' + productGrpNameUI + '</option>');
                    $(this).trigger('change');
                })
            }
        })
        }
    }
</script>

<!-- Script for Slide-->
<script>
    const changeProductImgs = document.getElementsByClassName('change');
    const deleteProductImgs = document.getElementsByClassName('delete');
    for (let i = 0; i < changeProductImgs.length; i++) {
        changeProductImgs[i].addEventListener('click', () => {
            changeImage(i);
            if (!e) var e = window.event;
            e.cancelBubble = true;
            if (e.stopPropagation) e.stopPropagation();
        });
    }
    for (let i = 0; i < deleteProductImgs.length; i++) {
        deleteProductImgs[i].addEventListener('click', () => {
            deleteImage(i);
            if (!e) var e = window.event;
            e.cancelBubble = true;
            if (e.stopPropagation) e.stopPropagation();
        });
    }
    function changeImage(i) {
        const input = document.getElementById(`inp-thumbnail-${i}`);
        thumbnailHandle(i, input, { value: false });
    }

    function deleteImage(i) {
        const imgSlide = document.getElementById(`img-${i}`);
        const imgThumb = document.getElementById(`img-thumbnail-${i}`);
        const productImage = document.getElementById(`productImage-${i}`);
        imgSlide.src = imgThumb.src = 'https://www.vietravel.com/Images/no-image-available.jpg';
        productImage.value = '';
        const changeBar = document.querySelectorAll('.change-img')[i];
        changeBar.classList.remove('change-bar');
        //
        //var next = $(imgThumb).parent().next().find('img');
        ////var prev = imgThumb.closest('thumbnail').prev();
        //var parentCurrent = $(imgThumb).parent();
        //$(parentCurrent).remove(imgThumb);
        //$(parentCurrent).append(next);
    };
    function sortImage(next, prev) {
        const imgSlide = document.getElementById(`img-${i}`);
        const imgThumb = document.getElementById(`img-thumbnail-${i}`);
        const productImage = document.getElementById(`productImage-${i}`);

    }
</script>
<script>
    const thumbnails = document.getElementsByClassName('thumbnail');
    var listImgSlide = [];
    for (let i = 0; i < thumbnails.length; i++) {
        //debugger;
        const thumbnail = thumbnails[i];
        const input = document.getElementById(`inp-thumbnail-${i}`);
        const imgInput = document.getElementById(`productImage-${i}`);
        thumbnail.addEventListener("click", () => {
            thumbnailHandle(i, input, imgInput)
        })
        input.addEventListener("change", readFile.bind(i, input));
    }

    function thumbnailHandle(i, input, imgInput) {
        if (!imgInput.value) {
            input.click();
        }
    }
    function checkfileimg(type) {
        if (type.split('/')[0] === 'image') {
            return true;
        }
        else {
            return false;
        }
    }
    function readFile(input) {
        //debugger;
        const index = this;
        if (input.files && input.files[0]) {
            var fileName = input.files[0].name;
            var type = input.files[0].type;
            if (checkfileimg(type)) {
                var size = input.files[0].size;

                var FR = new FileReader();
                FR.addEventListener("load", function (e) {
                    //
                    const productImageInputs = document.querySelectorAll('.product-images input');
                    //debugger
                    for (let i = 0; i <= index; i++) {
                        if (!productImageInputs[i].value && i < index) {
                            //debugger
                            const imgThumnail = document.getElementById(`img-thumbnail-${i}`);
                            const imgSlide = document.getElementById(`img-${i}`);
                            const productImg = document.getElementById(`productImage-${i}`);

                            var base64 = event.target.result;
                            imgThumnail.src = base64;
                            imgThumnail.setAttribute('data-file-name', fileName);
                            imgThumnail.setAttribute('data-idx', i);
                            imgThumnail.setAttribute('onclick', 'currentImage(this)');
                            imgThumnail.setAttribute('data-type', type);
                            //imgThumnail.setAttribute('data-base64', dataBase64);

                            imgSlide.src = e.target.result;
                            productImg.value = e.target.result;
                            productImg.setAttribute('data-file-name', fileName);

                            const changeBar = document.querySelectorAll('.change-img')[i];
                            changeBar.classList.add('change-bar');
                            var objImgSlide = {
                                Idx: i,
                                Base64: imgThumnail.src,
                                Name: fileName,
                                Type: type,
                            };
                            listImgSlide.push(objImgSlide);
                            //debugger;
                            showSlides(i);
                            break;
                        }
                        if (i == index) {
                            debugger
                            const imgThumnail = document.getElementById(`img-thumbnail-${i}`);
                            const imgSlide = document.getElementById(`img-${i}`);
                            const productImg = document.getElementById(`productImage-${i}`);

                            var base64 = event.target.result;
                            imgThumnail.src = base64;

                            imgThumnail.setAttribute('data-file-name', fileName);
                            imgThumnail.setAttribute('data-idx', i);
                            imgThumnail.setAttribute('onclick', 'currentImage(this)');
                            imgThumnail.setAttribute('data-type', type);
                            //imgThumnail.setAttribute('data-base64', dataBase64);

                            imgSlide.src = e.target.result;
                            productImg.value = e.target.result;
                            productImg.setAttribute('data-file-name', fileName);

                            const changeBar = document.querySelectorAll('.change-img')[i];
                            changeBar.classList.add('change-bar');
                            var objImgSlide = {
                                Idx: i,
                                Base64: imgThumnail.src,
                                Name: fileName,
                                Type: type,
                            };
                            listImgSlide.push(objImgSlide);
                            //debugger;
                            showSlides(i);
                        }
                    }
                });
                FR.readAsDataURL(input.files[0]);
                input.value = '';
            }
            else {
                var listError = [];
                listError = commonUtils.checkElementIsSame_AddListError(listError, '#ProductType', 'has-error-fix', 'file nhập phải là ảnh! ');
                commonUtils.showToastr(listError);
            }
        }
    }
</script>
<script>
    let slideIndex = 0;
    showSlides(slideIndex);

    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += Number(n));
    }

    // Thumbnail image controls
    function currentSlide(n) {
        //debugger
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        const slides = document.getElementsByClassName("mySlides");
        const dots = document.getElementsByClassName("thumbnail");
        if (n >= slides.length) {
            slideIndex = 0;
        }
        else if (n < 0) {
            slideIndex = slides.length - 1;
        }
        else {
            slideIndex = n;
        }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
            slides[i].classList.remove("show");
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex].style.display = "block";
        slides[slideIndex].classList.add("show");
        dots[slideIndex].className += " active";
    }
</script>
<script>
    function currentImage(thiz) {
        //
        var idx = $(thiz).attr('data-idx');
        currentSlide(idx);
    }
</script>