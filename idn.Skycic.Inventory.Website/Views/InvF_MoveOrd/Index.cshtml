@model PageInfo<InvF_MoveOrd>
@{
    ViewBag.Title = "Quản lý điều chuyển";
    var userState = ViewBag.UserState as UserState;
    var List_Mst_InventoryInOut = ViewBag.List_Mst_InventoryInOut as List<Mst_Inventory>;
    var init = CUtils.StrValue(ViewBag.init);
    var pageCur = CUtils.StrValue(ViewBag.PageCur);
    var recordCount = CUtils.StrValue(ViewBag.RecordCount);
    var totalPage = "0";
    if (Model != null)
    {
        totalPage = CUtils.StrValue(Model.PageCount);
    }


    var showtext = "";
    if (Model.ItemCount > 0)
    {
        var recordstart = (Model.PageIndex) * Model.PageSize + 1;
        var recordend = (Model.PageIndex + 1) * Model.PageSize;
        if (recordend > Model.ItemCount)
        {
            recordend = Model.ItemCount;
        }
        showtext = recordstart + "-" + recordend + " trong số " + Model.ItemCount;
    }
    var viewid = string.Format("{0}_{1}_{2}_{3}", CUtils.StrValue(userState.SysUser.UserCode), CUtils.StrValue(ViewBag.SolutionCodeSignature), CUtils.StrValue(userState.Mst_NNT.OrgID), "InvF_MoveOrd_Mng");

}
<script>
    setAdminCurrentUrl('@Url.Action("Index", "InvF_MoveOrd")');
</script>
<script src="~/Content/assets/js/bootbox.js"></script>



<div class="row no-margin">
    <div class="col-sm-12">
        <aside class="row no-margin">
            @using (Html.BeginForm("Index", "InvF_MoveOrd", FormMethod.Get, new { id = "manageForm", @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <input type="hidden" id="viewid" name="viewid" value="@MvcHtmlString.Create(viewid)" />
                <input hidden id="init" name="init" value="search" />
                <div class="layout-search layout-bot-top-16">
                    <div class="row no-margin">
                        <div class="col-sm-11 row no-margin">
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="IF_MONo" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Số phiếu điều chuyển".HtmlItemString("inventory"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="IF_MONo" name="IF_MONo" class="col-12 IF_MONo" value="" autocomplete="off" />
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="CreateTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày tạo từ".HtmlItemString("inventory"))</label>
                                    <div class="col-sm-8 row date-input-group no-margin">
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="CreateTimeFrom" name="CreateTimeFrom" class="col-9 cl-date CreateTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="CreateTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("đến".HtmlItemString("inventory"))</label>
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="CreateTimeTo" name="CreateTimeTo" class="col-9 cl-date CreateTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="InvCodeOut" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Kho xuất".HtmlItemString("customer"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right selection--multiple">
                                            <select class="select2-selection" name="InvCodeOut" id="InvCodeOut">
                                                <option value="">--Chọn kho xuất--</option>
                                                @{
                                                    if (List_Mst_InventoryInOut != null && List_Mst_InventoryInOut.Count > 0)
                                                    {
                                                        foreach (var invOut in List_Mst_InventoryInOut)
                                                        {
                                                            <option value="@invOut.InvCode">@invOut.InvCode : @invOut.InvName</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="ApprTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày duyệt từ".HtmlItemString("inventory"))</label>
                                    <div class="col-sm-8 row date-input-group no-margin">
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="ApprTimeFrom" name="ApprTimeFrom" class="col-9 cl-date ApprTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="ApprTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("đến".HtmlItemString("inventory"))</label>
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="ApprTimeTo" name="ApprTimeTo" class="col-9 cl-date ApprTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="InvCodeIn" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Kho nhập".HtmlItemString("inventory"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right selection--multiple">
                                            <select class="select2-selection" name="InvCodeIn" id="InvCodeIn">
                                                <option value="">--Chọn kho nhập--</option>
                                                @{
                                                    if (List_Mst_InventoryInOut != null && List_Mst_InventoryInOut.Count > 0)
                                                    {
                                                        foreach (var invIn in List_Mst_InventoryInOut)
                                                        {
                                                            <option value="@invIn.InvCode">@invIn.InvCode : @invIn.InvName</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="Remark" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Nội dung".HtmlItemString("inventory"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="Remark" name="Remark" class="col-12 Remark" value="" autocomplete="off" required />
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-1 text-right">
                            <span class="block input-icon input-icon-right">
                                @RenderItemFormat("BTN_QL_DIEUCHUYEN_TIMKIEM", "<a class=\"btn btn-nc-button\" onclick=\"SearchData()\" href=\"javascript: void(0);\"><img class=\"img-button\" src=" + @Url.Content("~/Images/search.svg") + "></a>", "", "")
                            </span>
                        </div>
                        <div class="col-12 no-padding margin-top-5">
                            <div class="col-sm-11">
                                <div class="form-group margin-bottom-9">
                                    <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 " style="max-width: 12.5%; padding-top: 0; padding-right: 15px!important;">@("Trạng thái".HtmlItemString("inventory"))</label>
                                    <div class="row no-margin checkbox-list">
                                        @*<div class="row chk">
            <input type="checkbox" class="idn-checkbox" name="chk-pending" id="chk-pending">
            <label for="chk-pending" style="padding-top: 0;"><span class="no-margin"></span> Mới tạo</label>
        </div>
        <div class="row chk">
            <input type="checkbox" class="idn-checkbox" name="chk-approved" id="chk-approved">
            <label for="chk-approved" style="padding-top: 0;"><span class="no-margin"></span> Đã duyệt</label>
        </div>
        <div class="row chk">
            <input type="checkbox" class="idn-checkbox" name="chk-canceled" id="chk-canceled">
            <label for="chk-canceled" style="padding-top: 0;"><span class="no-margin"></span> Đã hủy</label>
        </div>*@
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-pending" id="chk-pending" />
                                            <label for="chk-pending">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Mới tạo</span>
                                        </div>
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-approved" id="chk-approved" />
                                            <label for="chk-approved">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Đã duyệt</span>
                                        </div>
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-canceled" id="chk-canceled" />
                                            <label for="chk-canceled">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Đã huỷ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </aside>
        <div id="BindDataInvF_MoveOrd" class="conten-table">
            @Html.Partial("BindDataInvF_MoveOrd", Model, new ViewDataDictionary() { { "init", MvcHtmlString.Create(init) }, { "PageCur", MvcHtmlString.Create(pageCur) }, { "RecordCount", MvcHtmlString.Create(recordCount) }, { "UserState", userState } })
        </div>
    </div>
</div>

@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/InvF_MoveOrd.js")"></script>
    <!-- #region table sort -->
    <script>
        var initDefault = function () {
            $('#dynamic-table-thead').idnTable({
                searchTextbox: '#dynamic-table-thead-search', columnToggleButton: '#togglecolumn',
                cookieId: '#viewid',
            });
        };
        var initCustom = function () {
            var tb = $('#dynamic-table-thead').idnTable();

            $('#dynamic-table-thead-search').keyup(function () {
                var kw = $(this).val();
                tb.search(kw);
            });

            //tb.showColumns(['STT'], false);
            //tb.reload();
            var colList = tb.getAllColumns();
            $('#togglecolumn').html('');

            for (var i = 0; i < colList.length; ++i) {

                var col = colList[i];
                var fieldid = col.id;
                var title = col.name;

                if (title !== undefined && title !== null && title.toString().trim().length > 0) {
                    title = title.toString().trim();
                } else {
                    title = '';
                }

                var fieldactive = col.show;

                //B2: Sinh popup tùy chỉnh các cột trong bảng #dynamic-table-thead
                var $input = $('<input>');
                $input.attr('type', 'checkbox');
                $input.attr('name', fieldid);

                if (fieldactive === true) { //Nếu trạng thái bằng 0 cho hiện cột và checked ô input tương ứng
                    $input.attr('checked', 'checked');

                }

                var $spaninput = $('<span>');
                $spaninput.append($input);
                $spaninput.css('margin-right', '10px');

                var $spantext = $('<span>');
                $spantext.text(title);

                var $li = $('<li>');
                $li.css('line-height', '19px');
                $li.css('margin-bottom', '18px');
                $li.append($spaninput);
                $li.append($spantext);

                $('#togglecolumn').append($li);

                $input.click(function () {
                    if ($(this).is(':checked')) {
                        tb.showColumns([$(this).attr('name')], false);
                    }
                    else {
                        tb.hideColumns([$(this).attr('name')], false);
                    }
                });
            }
        };
        $(document).ready(function () {
            initDefault();
            //initCustom();
        });
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#dynamic-table-thead-search', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        //debugger
                        var dataOfRow = $(this).text();
                        if (dataOfRow !== undefined && dataOfRow !== null && dataOfRow.toString().trim().length > 0) {
                            dataOfRow = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });
        $(document).ready(function () {
            //debugger;
            var viewId = commonUtils.returnValueText('#viewid');
            if (!commonUtils.isNullOrEmpty(viewId)) {
                var cookie = commonUtils.getCookie(viewId);
                if (commonUtils.isNullOrEmpty(cookie)) {
                    var cookieValue = 'CONTROL|STT|IF_MONO|CREATEDTIMEUTC|INVCODEOUT|INVCODEIN|IF_MOSTATUS';
                    commonUtils.setCookie(viewId, cookieValue, 10);
                }
            }
            initDefault();

            //initCustom();



        });
    </script>
    <!-- #endregion -->
    <!-- #region cookies -->
    <script>
        document.addEventListener('DOMContentLoaded',
            function () {
                //debugger;
                readCookies("InvF_MoveOrd");
                var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
                for (let checkbox of checkboxs) {
                    checkbox.addEventListener('change', setCookie)
                }
            });

        function saveSelectedToCookie() {
            //debugger;
            setCookie("InvF_MoveOrd",
                {
                    path: '/',
                    expires: 10
                });
        }

        function setCookie(name, options = {}) {
            //debugger;
            var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
            var value = new Object();
            for (const ckb of checkboxs) {
                value[ckb.name] = ckb.checked === true ? "0" : "1";
            }
            let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(JSON.stringify(value));

            if (options.expires instanceof Date) {
                options.expires = options.expires.toUTCString();
            }

            for (let optionKey in options) {
                updatedCookie += "; " + optionKey;
                let optionValue = options[optionKey];
                if (optionValue !== true) {
                    updatedCookie += "=" + optionValue;
                }
            }
            document.cookie = updatedCookie;
        }

        function readCookies(name) {
            //debugger;
            var result = document.cookie.match(new RegExp(name + '=([^;]+)'));
            result && (result = JSON.parse(decodeURIComponent(result[1])));
            if (result != null && result != undefined) {
                for (const key in result) {
                    $('#dynamic-table-thead').find('th[fieldid="' + key + '"]').attr('fieldactive', result[key]);
                }
            }
        }
    </script>
    <!-- #endregion -->
    <!-- Search -->
    <script type="text/javascript">
        //Date picker
        $('.select2-selection').select2();
        $('#CreateTimeFrom, #CreateTimeTo, #ApprTimeFrom , #ApprTimeTo').datepicker({
            autoclose: true,
            format: 'yyyy-mm-dd'
        })
        $(document).ready(function(){
            $('.dropdown-menu').on('click', function (event) {
                event.stopPropagation();
            });
        })

        function SearchData() {
            debugger
            var objInvF_MoveOrd = new InvF_MoveOrd();
             var ajaxSettings = {};
            ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("DoSearch", "InvF_MoveOrd")';
            objInvF_MoveOrd.ajaxSettings = ajaxSettings;
            objInvF_MoveOrd.searchData();
        }
    </script>
    <!-- Delete - Export Excel -->
    <script>
        var objInvF_MoveOrd = new InvF_MoveOrd();
        function Delete() {
            debugger

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Delete", "InvF_MoveOrd")';

            objInvF_MoveOrd.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_MoveOrd.Confirm_Message = "Đồng ý xoá danh sách phiếu điều chuyển này?";
            objInvF_MoveOrd.ajaxSettings = ajaxSettings;
            objInvF_MoveOrd.deleteData();
        }

        var objCommonExcel = new CommonExcel();
        var objVariablesInit = {
            Id_FormMain: '',
            Id_FormImportExcel: 'manageFormImportExcel',
            Id_Modal: 'ImportExcelModal',
            Id_FileInput: 'file',
        };

        var ajaxSettings_Excel = {};
        ajaxSettings_Excel.Type = 'post';
        ajaxSettings_Excel.DataType = 'json';

        function Export() {

            var listError = [];
            ajaxSettings_Excel.Url = '@Url.Action("Export", "InvF_MoveOrd")';
            var IF_MONo = '';

            IF_MONo = commonUtils.returnValueText('#IF_MONo');
            var checkedItem = $('#table-tbodyID tr.trdata');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: 'Lưới dữ liệu trống!'
                };
                listError.push(objToastr);
            }
            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);

            }
            else {
                let lstCheckedIFMONo = [];
                if (checkedItem != undefined && checkedItem.length > 0) {
                    for (let item of checkedItem) {
                        let checkedIFMONo = $(item).closest('tr.trdata').find('input[type="hidden"][name="IF_MONo"]').val();
                        lstCheckedIFMONo.push(checkedIFMONo);
                    }
                }
                if (IF_MONo.length > 0) {
                    IF_MONo = IF_MONo + ',';
                }
                if (lstCheckedIFMONo.length > 0) {
                    IF_MONo += lstCheckedIFMONo.join(',');
                }
                var CreateTimeFrom = commonUtils.returnValueText('#CreateTimeFrom');
                var CreateTimeTo = commonUtils.returnValueText('#CreateTimeTo');
                var InvCodeOut = commonUtils.returnValueText('#InvCodeOut');
                var ApprTimeFrom = commonUtils.returnValueText('#ApprTimeFrom');
                var ApprTimeTo = commonUtils.returnValueText('#ApprTimeTo');
                var InvCodeIn = commonUtils.returnValueText('#InvCodeIn');
                var Remark = commonUtils.returnValueText('#Remark');
                var chkPending = commonUtils.returnValueCheckBox('#chk-pending');
                var chkApproved = commonUtils.returnValueCheckBox('#chk-approved');
                var chkCanceled = commonUtils.returnValueCheckBox('#chk-canceled');
                var recordcount = commonUtils.returnValueText('#recordcount');
                var pagecur = commonUtils.returnValueText('#page');
                var listParams = [
                    { "Key": 'recordcount', "Value": recordcount },
                    { "Key": 'pagecur', "Value": pagecur },
                    { "Key": 'IF_MONo', "Value": IF_MONo },
                    { "Key": 'CreateTimeFrom', "Value": CreateTimeFrom },
                    { "Key": 'CreateTimeTo', "Value": CreateTimeTo },
                    { "Key": 'InvCodeOut', "Value": InvCodeOut },
                    { "Key": 'ApprTimeFrom', "Value": ApprTimeFrom },
                    { "Key": 'ApprTimeTo', "Value": ApprTimeTo },
                    { "Key": 'InvCodeIn', "Value": InvCodeIn },
                    { "Key": 'Remark', "Value": Remark },
                    { "Key": 'chkPending', "Value": chkPending },
                    { "Key": 'chkApproved', "Value": chkApproved },
                    { "Key": 'chkCanceled', "Value": chkCanceled },
                ];
                objCommonExcel.ajaxSettingsInit();
                objCommonExcel.ajaxSettings = ajaxSettings_Excel;
                objCommonExcel.exportExcel(listParams);
            }
        }
    </script>
    <!-- Cancel -->
    <script>
        var objInvF_MoveOrd = new InvF_MoveOrd();
        function Cancel() {
            debugger;

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Cancel", "InvF_MoveOrd")';

            objInvF_MoveOrd.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_MoveOrd.Confirm_Message = "Đồng ý huỷ danh sách phiếu điều chuyển này?";
            objInvF_MoveOrd.ajaxSettings = ajaxSettings;
            objInvF_MoveOrd.cancelData();
        }
    </script>
    <!-- Approve -->
    <script>
        var objInvF_MoveOrd = new InvF_MoveOrd();
        function Approve() {
            debugger;

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Approve", "InvF_MoveOrd")';

            objInvF_MoveOrd.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_MoveOrd.Confirm_Message = "Đồng ý duyệt danh sách phiếu điều chuyển này?";
            objInvF_MoveOrd.ajaxSettings = ajaxSettings;
            objInvF_MoveOrd.approveData();
        }
    </script>
    <!-- Quick Search -->
    <script>
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#txtSearchObj', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        var dataOf = $(this).text();
                        if (dataOf !== undefined && dataOf !== null && dataOfRow.toString().trim().length > 0) {
                            dataOf = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });
    </script>

    <!-- In -->
    <script src="@Url.Content("~/Scripts/print.min.js")"></script>
    <script>
        function Print() {
            debugger
            var objInvF_MoveOrd = new InvF_MoveOrd();
              var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("PrintTemp", "InvF_MoveOrd")';
            objInvF_MoveOrd.ajaxSettings = ajaxSettings;
            objInvF_MoveOrd.printData();

        }


    </script>
}
