@model PageInfo<InvF_InventoryCusReturnDtlUI>
@{
    var pageCur = CUtils.StrValue(ViewBag.PageCur);
    var recordCount = CUtils.StrValue(ViewBag.RecordCount);
    var totalPage = "0";
    if (Model != null)
    {
        totalPage = CUtils.StrValue(Model.PageCount);
    }

    var showtext = "";
    if (Model.ItemCount > 0)
    {
        var recordstart = (Model.PageIndex) * Model.PageSize + 1;
        var recordend = (Model.PageIndex + 1) * Model.PageSize;
        if (recordend > Model.ItemCount)
        {
            recordend = Model.ItemCount;
        }
        showtext = recordstart + "-" + recordend + " trong số " + Model.ItemCount;
    }
}

<input type="hidden" id="page" value="@ViewBag.PageCur" />
<input type="hidden" id="totalpage" value="@Model.PageCount" />

<div class="col-12 row no-margin no-padding">
    <div class="col-4">
    </div>
    <div class="col-8 no-padding-right layout-bot-top-16">
        @Html.Partial("Pagination", null, new ViewDataDictionary() { { "PageCur", MvcHtmlString.Create(pageCur) }, { "RecordCount", MvcHtmlString.Create(recordCount) }, { "ShowText", showtext } })
    </div>
</div>
<div class="panel-body no-padding" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
    <aside class="col-xs-12 layout-table no-padding">
        <div class="scrollable-horizontal padding-left-0 padding-right-0" style="padding-top: 0!important;">
            <div style="width: 100%; float: left;">
                <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0 no-margin">
                    <thead>
                        <tr class="trthead">
                            <th fieldId="CONTROL" fieldName="CONTROL" fieldActive="0" class="text-center cell-30">
                                <input type="checkbox" class="cl-check" onclick="CheckAll(this);" name="check-box-all" />
                            </th>
                            <th class="text-center cell-100">@("Mã hàng hoá".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-175">@("Tên hàng hoá".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-75">@("Đơn vị".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-120">@("Số RefNo".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-75">@("Số lượng YC".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-100">@("Số lượng đã xuất".HtmlItemString("invf_inventorycusreturn"))</th>
                            <th class="text-center cell-100">@("SL có thể trả".HtmlItemString("invf_inventorycusreturn"))</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="scrollable_1" class="scrollable" style="width: 100%; float: left">
                <table id="dynamic-table-thead-tbody" class="table table-borderedtable-cus table-bottom-0 dynamic-table-tbody dynamic-table-thead-tbody no-margin">
                    <tbody id="table-tbodyID">
                        @if (Model != null && Model.DataList.Count > 0)
                        {
                            var i = 0;
                            foreach (var item in Model.DataList)
                            {
                        <tr idx="@i" class="data-item trdata" id="unitpu_@item.ProductCode">
                            <!-- Product -->
                            <input type="hidden" name="ListProduct[@i].ProductCodeRoot" value="@item.ProductCodeRoot" />
                            <input type="hidden" name="ListProduct[@i].ProductCodeBase" value="@item.mp_ProductCodeBase" />
                            <input type="hidden" name="ListProduct[@i].ProductCode" value="@item.ProductCode" />
                            <input type="hidden" name="ListProduct[@i].ProductCodeUser" value="@item.ProductCodeUser" />
                            <input type="hidden" name="ListProduct[@i].ProductName" value="@item.mp_ProductName" />
                            <input type="hidden" name="ListProduct[@i].UnitCode" value="@item.UnitCode" />
                            <input type="hidden" name="ListProduct[@i].UPBuy" value="@item.UPBuy" />
                            <input type="hidden" name="ListProduct[@i].mp_FlagLot" value="@item.mp_FlagLot" />
                            <input type="hidden" name="ListProduct[@i].FlagCombo" value="@item.FlagCombo" />
                            <input type="hidden" name="ListProduct[@i].mp_FlagSerial" value="@item.mp_FlagSerial" />
                            <input type="hidden" name="ListProduct[@i].QtyOrder" value="@item.QtyOrder" />
                            <input type="hidden" name="ListProduct[@i].InvCodeSuggest" value="@item.InvCodeSuggest" />

                            <td fieldId="CONTROL" fieldActive="0" class="text-center cell-30">
                                <input type="checkbox" class="cl-check" name="ckb" onclick="CheckProductRow(this,'@item.mp_ProductCodeBase');" />
                            </td>
                            <td class="text-center cell-100">@item.ProductCodeUser</td>
                            <td class="text-center cell-175">@item.mp_ProductName</td>
                            <td class="text-center cell-75">@item.UnitCode</td>
                            <td class="text-center cell-120">@item.RefNo</td>
                            <td class="text-right cell-75">@item.QtyOrder</td>
                            <td class="text-right cell-100">@item.QtyOut</td>
                            <td class="text-right cell-100">@item.QtyReturnRemain</td>
                        </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </aside>
</div>

<!-- Check all rows-->
<script>
    function CheckAll(thiz) {
        debugger;
        let trArr = $('#ShowPopupProductInOrderSearch #dynamic-table-thead-tbody tr');
        if (trArr !== null && trArr.length > 0) {
            for (var i = 0; i < trArr.length; i++) {
                var trCur = trArr[i];
                if (trCur !== null && trCur !== undefined) {
                    var inputCkb = $(trCur).find('input[type="checkbox"]');
                    var check = false;
                    if ($(thiz).is(":checked")) {
                        check = true;
                    }
                    $(inputCkb).prop("checked", check);
                }
            }
        }
    }

    function CheckProductRow(thiz, prdCodeBase) {
        debugger;
        let trArr = $('#ShowPopupProductInOrderSearch #dynamic-table-thead-tbody tr');
        var check = false;
        if ($(thiz).is(":checked")) {
            check = true;
        }

        if (trArr !== null && trArr.length > 0) {
            for (var i = 0; i < trArr.length; i++) {
                var trCur = trArr[i];
                if (trCur !== null && trCur !== undefined) {
                    var idx = $(trCur).attr('idx');
                    var prdCodeBaseCur = $(trCur).find('input[type="hidden"][name="ListProduct[' + idx + '].ProductCodeBase"]').val();

                    if (prdCodeBase === prdCodeBaseCur) {
                        var inputCkb = $(trCur).find('input[type="checkbox"]');
                        $(inputCkb).prop("checked", check);
                    }
                }
            }
        }
    }
</script>
<!-- Search Product -->
<script>
    function SearchData() {
        let invcodein = $('#InvCodeIn').val();
        if (invcodein === undefined || invcodein === '') {
            alert("Kho nhập chưa được chọn");
            //$('#InvCodeIn').focus();
            return;
        }

        var recordcount = commonUtils.returnValueText('#recordcount');
        var pagecur = commonUtils.returnValueText('#page');
        var customerCode = commonUtils.returnValueText('#ShowPopupProductInOrderSearch #sCustomerCode');
        var orderNo = commonUtils.returnValueText('#ShowPopupProductInOrderSearch #sOrderNo');
        var productCode = commonUtils.returnValueText('#ShowPopupProductInOrderSearch #sProductCode');
        var productName = commonUtils.returnValueText('#ShowPopupProductInOrderSearch #sProductName');
        var token = $('#ShowPopupProductInOrderSearch #manageForm input[name=__RequestVerificationToken]').val();
        var url = '@Url.Action("SearchProductInOrder", "InvF_InventoryCusReturn")';
        $.ajax({
            type: "post",
            data: {
                __RequestVerificationToken: token,
                customercode: customerCode,
                orderno: orderNo,
                productcode: productCode,
                productname: productName,
                invcode: invcodein,
                recordcount: recordcount,
                page: pagecur
            },
            url: url,
            dataType: 'json',
            beforeSend: function () { }
        }).done(function (result) {
            if (result.Success) {
                $('#List_Product_Data_InOrder').html('');
                $('#List_Product_Data_InOrder').html(result.Html);
                //Disabled_previous_Next();
                $('.numberic').number(true, 2);
            } else {
                if (!commonUtils.isNullOrEmpty(result.Detail)) {
                    showErrorDialog(result.Detail);
                }
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {

        }).always(function (jqXHROrData, textStatus, jqXHROrErrorThrown) {
            //alert("complete");
        });
    }

</script>
