@model PageInfo<InvF_InventoryCusReturn>
@{
    ViewBag.Title = "Quản lý khách hàng trả hàng";
    var listMstInventory = ViewBag.Lst_Mst_Inventory as List<Mst_Inventory>;
    var listMstCustomer = ViewBag.Lst_MstCustomer as List<Mst_Customer>;
    var userState = ViewBag.UserState as UserState;
    var init = CUtils.StrValue(ViewBag.init);
    var pageCur = CUtils.StrValue(ViewBag.PageCur);
    var recordCount = CUtils.StrValue(ViewBag.RecordCount);
    var totalPage = "0";
    if (Model != null)
    {
        totalPage = CUtils.StrValue(Model.PageCount);
    }


    var showtext = "";
    if (Model.ItemCount > 0)
    {
        var recordstart = (Model.PageIndex) * Model.PageSize + 1;
        var recordend = (Model.PageIndex + 1) * Model.PageSize;
        if (recordend > Model.ItemCount)
        {
            recordend = Model.ItemCount;
        }
        showtext = recordstart + "-" + recordend + " trong số " + Model.ItemCount;
    }

    var viewid = string.Format("{0}_{1}_{2}_{3}", CUtils.StrValue(userState.SysUser.UserCode), CUtils.StrValue(ViewBag.SolutionCodeSignature), CUtils.StrValue(userState.Mst_NNT.OrgID), "InvF_InventoryCusReturn_Mng");

}

<script>
    setAdminCurrentUrl('@Url.Action("Index", "InvFInventoryReturnSup")');
</script>

<script src="~/Content/assets/js/bootbox.js"></script>

<div class="row no-margin">



    <div class="col-sm-12">
        <aside class="row no-margin">
            @using (Html.BeginForm("Index", "InvF_InventoryCusReturn", FormMethod.Get, new { id = "manageForm", @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <input type="hidden" id="viewid" name="viewid" value="@MvcHtmlString.Create(viewid)" />
                <input hidden id="init" name="init" value="search" />
                <div class="layout-search layout-bot-top-16">
                    <div class="row no-margin">
                        <div class="col-sm-11 row no-margin">
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="IF_InvCusReturnNo" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Số phiếu KH trả hàng".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="IF_InvCusReturnNo" name="IF_InvCusReturnNo" class="col-12 IF_InvCusReturnNo" value="" autocomplete="off" />
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="CreateDTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày tạo từ".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-sm-8 row date-input-group no-margin">
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="CreateDTimeFrom" name="CreateDTimeFrom" class="col-9 cl-date CreateDTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="CreateDTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("~".HtmlItemString("invf_inventorycusreturn"))</label>
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="CreateDTimeTo" name="CreateDTimeTo" class="col-9 cl-date CreateDTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="ApprDTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày duyệt từ".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-sm-8 row date-input-group no-margin">
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="ApprDTimeFrom" name="ApprDTimeFrom" class="col-9 cl-date ApprDTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <label for="ApprDTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("~".HtmlItemString("invf_inventorycusreturn"))</label>
                                        <div class="row col-fix-5 no-margin">
                                            <div class="col-12 no-padding">
                                                <div class="input-group" id="dtdatestart">
                                                    <input type="text" id="ApprDTimeTo" name="ApprDTimeTo" class="col-9 cl-date ApprDTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                    <span class="input-group-addon col-3">
                                                        <i class="far fa-calendar-alt"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="CustomerCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Khách hàng".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right selection--multiple">
                                            <select class="select2-selection" name="CustomerCode" id="CustomerCode">
                                                <optgroup label="">
                                                    <option value="">--Chọn khách hàng--</option>
                                                    @{
                                                        if (listMstCustomer != null && listMstCustomer.Count > 0)
                                                        {
                                                            foreach (var customer in listMstCustomer)
                                                            {
                                                                <option value="@customer.CustomerCodeSys">@MvcHtmlString.Create(customer.CustomerCode + " - " + customer.CustomerName)</option>
                                                            }
                                                        }
                                                    }
                                                </optgroup>
                                                <option value="SEARCHDATA"></option>
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="InvCodeIn" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Kho nhập".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right selection--multiple">
                                            <select class="select2-selection" name="InvCodeIn" id="InvCodeIn">
                                                <optgroup label="">
                                                    <option value="">--Chọn kho nhập--</option>
                                                    @{
                                                        if (listMstInventory != null && listMstInventory.Count > 0)
                                                        {
                                                            foreach (var invIn in listMstInventory)
                                                            {
                                                                <option value="@invIn.InvCode">@MvcHtmlString.Create(invIn.InvCode + " - " + invIn.InvName)</option>
                                                            }
                                                        }
                                                    }
                                                </optgroup>
                                                <option value="SEARCHDATA"></option>
                                            </select>
                                        </span>
                                    </div>
                                </div>
                                <div class="row form-group margin-bottom-9">
                                    <label for="IF_InvCusReturnNo" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("RefNo".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="OrderNo" name="OrderNo" class="col-12 OrderNo" value="" autocomplete="off" />
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-4 no-padding">
                                <div class="row form-group margin-bottom-9">
                                    <label for="ProductCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Hàng hóa".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="col-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="ProductCode" name="ProductCode" class="col-12 ProductCode" value="" autocomplete="off" />
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <span class="block input-icon input-icon-right">
                                <a class="btn btn-nc-button" onclick="SearchData()" href="javascript:void(0);" style=""><img class="img-button-search" src="@Url.Content("~/Images/search.svg")"></a>
                            </span>
                        </div>
                        <div class="col-12 no-padding margin-top-5">
                            <div class="col-sm-11">
                                <div class="form-group margin-bottom-9">
                                    <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 " style="max-width: 12.5%; padding-top: 0; padding-right: 15px!important;">@("Trạng thái".HtmlItemString("invf_inventorycusreturn"))</label>
                                    <div class="row no-margin checkbox-list">
                                        @*<div class="row chk">
                                                <input type="checkbox" class="cl-check" name="chk-pending" id="chk-pending" />
                                                <div class="span-title-check">Mới tạo</div>
                                            </div>
                                            <div class="row chk">
                                                <input type="checkbox" class="cl-check" name="chk-approved" id="chk-approved" />
                                                <div class="span-title-check">Đã duyệt</div>
                                            </div>
                                            <div class="row chk">
                                                <input type="checkbox" class="cl-check" name="chk-canceled" id="chk-canceled" />
                                                <div class="span-title-check">Đã huỷ</div>
                                            </div>*@
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-pending" id="chk-pending" />
                                            <label for="chk-pending">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Mới tạo</span>
                                        </div>
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-approved" id="chk-approved" />
                                            <label for="chk-approved">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Đã duyệt</span>
                                        </div>
                                        <div class="checkbox-item">
                                            <input type="checkbox" class="cl-check idn-checkbox" name="chk-canceled" id="chk-canceled" />
                                            <label for="chk-canceled">
                                                <span></span>
                                            </label>
                                            <span class="span-title-check">Đã huỷ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </aside>
        <div id="BindDataInvF_InventoryCusReturn" class="conten-table">
            @Html.Partial("BindDataInvF_InventoryCusReturn", Model, new ViewDataDictionary() { { "init", MvcHtmlString.Create(init) }, { "PageCur", MvcHtmlString.Create(pageCur) }, { "RecordCount", MvcHtmlString.Create(recordCount) }, { "UserState", userState } })
        </div>
    </div>
</div>

@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/InvF_InventoryCusReturn.js")"></script>
    <script src="@Url.Content("~/Scripts/print.min.js")"></script>

    <!-- Search -->
    <script type="text/javascript">
        //Date picker
        $('.select2-selection').select2();
        $('#CreateDTimeFrom, #CreateDTimeTo, #ApprDTimeFrom , #ApprDTimeTo').datepicker({
            autoclose: true,
            format: 'yyyy-mm-dd'
        })
        $(document).ready(function(){
            $('.dropdown-menu').on('click', function (event) {
                event.stopPropagation();
            });
        })
        @*@*Active Menu*@
        //setAdminCurrentUrl('@Url.Action("Index", "InvF_InventoryCusReturn")');

        function SearchData() {
            var IF_InvCusReturnNo = commonUtils.returnValueText('#IF_InvCusReturnNo');
            var CreateDTimeFrom = commonUtils.returnValueText('#CreateDTimeFrom');
            var CreateDTimeTo = commonUtils.returnValueText('#CreateDTimeTo');
            var OrderNo = commonUtils.returnValueText('#OrderNo');
            var ApprDTimeFrom = commonUtils.returnValueText('#ApprDTimeFrom');
            var ApprDTimeTo = commonUtils.returnValueText('#ApprDTimeTo');
            var InvCodeIn = commonUtils.returnValueText('#InvCodeIn');
            var CustomerCode = commonUtils.returnValueText('#CustomerCode');
            var ProductCode = commonUtils.returnValueText('#ProductCode');
            var chkPending = commonUtils.returnValueCheckBox('#chk-pending');
            var chkApproved = commonUtils.returnValueCheckBox('#chk-approved');
            var chkCanceled = commonUtils.returnValueCheckBox('#chk-canceled');
            var recordcount = commonUtils.returnValueText('#recordcount');
            var pagecur = commonUtils.returnValueText('#page');
            var token = $('#manageForm input[name=__RequestVerificationToken]').val();
            var url = '@Url.Action("DoSearch", "InvF_InventoryCusReturn")';
            $.ajax({
            type: "post",
            data: {
                __RequestVerificationToken: token,
                if_invcusreturnno: IF_InvCusReturnNo,
                createdtimefrom: CreateDTimeFrom,
                createdtimeto: CreateDTimeTo,
                orderno: OrderNo,
                apprdtimefrom: ApprDTimeFrom,
                apprdtimeto: ApprDTimeTo,
                invcodein: InvCodeIn,
                customercode: CustomerCode,
                productcode: ProductCode,
                chkpending: chkPending,
                chkapproved: chkApproved,
                chkcanceled: chkCanceled,
                page: pagecur,
                recordcount: recordcount,
            },
            url: url,
            dataType: 'json',
                beforeSend: function () { }
            }).done(function (result) {
                if (result.Success) {
                    $('#BindDataInvF_InventoryCusReturn').html('');
                    $('#BindDataInvF_InventoryCusReturn').html(result.Html);
                    //tablesort();
                    readCookies("InvF_InventoryCusReturn");
                    $('.dropdown-menu').on('click', function (event) {
                        event.stopPropagation();
                    });
                    //Disabled_previous_Next();
                    //$('.numberic').number(true, 2);
                    var tableName = 'InvF_InventoryCusReturn';
                    var totalValCusReturnAfterDescFormat = objMst_ColumnConfig.returnValueColumnFormat_V2(tableName, 'TotalValCusReturnAfterDesc');
                     $('.numberic').number(true, totalValCusReturnAfterDescFormat);
                    initDefault();
                } else {
                    if (!commonUtils.isNullOrEmpty(result.Detail)) {
                        showErrorDialog(result.Detail);
                    }
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {

            }).always(function (jqXHROrData, textStatus, jqXHROrErrorThrown) {
                //alert("complete");
            });
        }
    </script>
    <!-- Delete - Export Excel -->
    <script>
        var objInvF_InventoryCusReturn = new InvF_InventoryCusReturn();
        function Delete() {

            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: 'Chưa chọn phiếu KH trả hàng cần xóa!'
                };
                listError.push(objToastr);
            }

            var listInvF_InventoryCusReturnDel = [];
            var hasErr = false;
            debugger;
            $(checkedItem).each(function () {
                iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();
                iF_InvCusReturnStatus = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnStatus"]').val();
                if (iF_InvCusReturnStatus !== 'PENDING') {
                    var errorMessage = "Không thể xóa phiếu KH trả hàng '" + iF_InvCusReturnNo + "' trạng thái '" + iF_InvCusReturnStatus + "'!";
                    var objToastr = {
                        ToastrType: 'error',
                        ToastrMessage: errorMessage
                    };
                    listError.push(objToastr);
                    //alert("Không thể xóa phiếu KH trả hàng '" + iF_InvCusReturnNo + "' trạng thái '" + iF_InvCusReturnStatus + "'!");
                    hasErr = true;
                    return false;
                }

                var objDel = {};
                objDel.IF_InvCusReturnNo = iF_InvCusReturnNo;
                objDel.Remark = '';
                listInvF_InventoryCusReturnDel.push(objDel);
            });

            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);
                //return false;
            }

            if (hasErr) {
                return false;
            }

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Delete", "InvF_InventoryCusReturn")';

            objInvF_InventoryCusReturn.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_InventoryCusReturn.Confirm_Message = "Đồng ý xoá danh sách phiếu KH trả hàng này?";
            objInvF_InventoryCusReturn.ajaxSettings = ajaxSettings;
            objInvF_InventoryCusReturn.deleteData(listInvF_InventoryCusReturnDel);
        }

        var objCommonExcel = new CommonExcel();
        var ajaxSettings_Excel = {};
        ajaxSettings_Excel.Type = 'post';
        ajaxSettings_Excel.DataType = 'json';

        function Export() {
            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: "Chưa chọn phiếu KH trả hàng cần xuất excel!"
                };
                listError.push(objToastr);
            }

            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);
                //return false;
            }

            var listInvF_InventoryCusReturn = [];
            $(checkedItem).each(function () {
                iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();

                var objSelect = { IF_InvCusReturnNo: iF_InvCusReturnNo };
                listInvF_InventoryCusReturn.push(objSelect);
            });

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Export", "InvF_InventoryCusReturn")';

            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings;
            objCommonExcel.exportExcelSelected(listInvF_InventoryCusReturn);
        }
    </script>
    <!-- Approve -->
    <script>
        //var objInvF_InventoryCusReturn = new InvF_InventoryCusReturn();
        function Approve() {
            debugger
            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: 'Chưa chọn phiếu KH trả hàng cần duyệt!'
                };
                listError.push(objToastr);
            }

            var listInvF_InventoryCusReturn = [];
            var hasErr = false;
            $(checkedItem).each(function () {
                var iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();
                var iF_InvCusReturnStatus = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnStatus"]').val();
                var remark = $(this).closest('tr.trdata').find('input[type="hidden"][name="Remark"]').val();
                if (iF_InvCusReturnStatus !== 'PENDING') {
                    var errorMessage = "Không thể duyệt phiếu KH trả hàng '" + iF_InvCusReturnNo + "' trạng thái '" + iF_InvCusReturnStatus + "'!";
                    var objToastr = {
                        ToastrType: 'error',
                        ToastrMessage: errorMessage
                    };
                    listError.push(objToastr);
                    hasErr = true;
                    return false;
                }

                var objDel = {};
                objDel.IF_InvCusReturnNo = iF_InvCusReturnNo;
                objDel.Remark = remark;
                listInvF_InventoryCusReturn.push(objDel);
            });

            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);
                //return false;
            }

            if (hasErr) {
                return false;
            }

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Approve", "InvF_InventoryCusReturn")';

            objInvF_InventoryCusReturn.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_InventoryCusReturn.Confirm_Message = "Đồng ý duyệt danh sách phiếu KH trả hàng này?";
            objInvF_InventoryCusReturn.ajaxSettings = ajaxSettings;
            objInvF_InventoryCusReturn.approveData(listInvF_InventoryCusReturn);
        }
    </script>
    <!-- Huỷ -->
    <script>
        //var objInvF_InventoryCusReturn = new InvF_InventoryCusReturn();
        function Cancel() {
            debugger
            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: "Chưa chọn phiếu KH trả hàng cần hủy!"
                };
                listError.push(objToastr);
            }

            var listInvF_InventoryCusReturn = [];
            var hasErr = false;
            $(checkedItem).each(function () {
                var iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();
                var iF_InvCusReturnStatus = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnStatus"]').val();
                var remark = $(this).closest('tr.trdata').find('input[type="hidden"][name="Remark"]').val();
                if (iF_InvCusReturnStatus !== 'PENDING') {
                    var errorMessage = "Không thể hủy phiếu KH trả hàng '" + iF_InvCusReturnNo + "' trạng thái '" + iF_InvCusReturnStatus + "'!";
                    var objToastr = {
                        ToastrType: 'error',
                        ToastrMessage: errorMessage
                    };
                    listError.push(objToastr);
                    //alert("Không thể hủy phiếu KH trả hàng '" + iF_InvCusReturnNo + "' trạng thái '" + iF_InvCusReturnStatus + "'!");
                    hasErr = true;
                    return false;
                }

                var objDel = {};
                objDel.IF_InvCusReturnNo = iF_InvCusReturnNo;
                objDel.Remark = remark;
                listInvF_InventoryCusReturn.push(objDel);
            });

            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);
                //return false;
            }

            if (hasErr) {
                return false;
            }

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Cancel", "InvF_InventoryCusReturn")';

            objInvF_InventoryCusReturn.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
            objInvF_InventoryCusReturn.Confirm_Message = "Đồng ý hủy danh sách phiếu KH trả hàng này?";
            objInvF_InventoryCusReturn.ajaxSettings = ajaxSettings;
            objInvF_InventoryCusReturn.cancelData(listInvF_InventoryCusReturn);
        }

        function Edit(urlUpdate) {
            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: "Chưa chọn phiếu KH trả hàng!"
                };
                listError.push(objToastr);

            }

            var iF_InvCusReturnNo = '';
            $(checkedItem).each(function () {
                iF_InvCusReturnStatus = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnStatus"]').val();
                if (iF_InvCusReturnStatus === 'PENDING') {
                    iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();
                }
            });

            if (iF_InvCusReturnNo !== '') {
                var url = urlUpdate.split("ZZZ").join(iF_InvCusReturnNo);
                commonUtils.window_location_href(url);
            }
        }
    </script>
    <!-- Quick Search -->
    <script>
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#txtSearchObj', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        debugger
                        var dataOf = $(this).text();
                        if (dataOf !== undefined && dataOf !== null && dataOfRow.toString().trim().length > 0) {
                            dataOf = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });
    </script>

    <!-- #region table sort -->
    <script>
        var initDefault = function () {
            $('#dynamic-table-thead').idnTable({
                searchTextbox: '#dynamic-table-thead-search', columnToggleButton: '#togglecolumn',
                cookieId: '#viewid',
            });
        };
        var initCustom = function () {
            var tb = $('#dynamic-table-thead').idnTable();

            $('#dynamic-table-thead-search').keyup(function () {
                var kw = $(this).val();
                tb.search(kw);
            });

            //tb.showColumns(['STT'], false);
            //tb.reload();
            var colList = tb.getAllColumns();
            $('#togglecolumn').html('');

            for (var i = 0; i < colList.length; ++i) {

                var col = colList[i];
                var fieldid = col.id;
                var title = col.name;

                if (title !== undefined && title !== null && title.toString().trim().length > 0) {
                    title = title.toString().trim();
                } else {
                    title = '';
                }

                var fieldactive = col.show;

                //B2: Sinh popup tùy chỉnh các cột trong bảng #dynamic-table-thead
                var $input = $('<input>');
                $input.attr('type', 'checkbox');
                $input.attr('name', fieldid);

                if (fieldactive === true) { //Nếu trạng thái bằng 0 cho hiện cột và checked ô input tương ứng
                    $input.attr('checked', 'checked');

                }

                var $spaninput = $('<span>');
                $spaninput.append($input);
                $spaninput.css('margin-right', '10px');

                var $spantext = $('<span>');
                $spantext.text(title);

                var $li = $('<li>');
                $li.css('line-height', '19px');
                $li.css('margin-bottom', '18px');
                $li.append($spaninput);
                $li.append($spantext);

                $('#togglecolumn').append($li);

                $input.click(function () {
                    if ($(this).is(':checked')) {
                        tb.showColumns([$(this).attr('name')], false);
                    }
                    else {
                        tb.hideColumns([$(this).attr('name')], false);
                    }
                });
            }
        };
        $(document).ready(function () {
            initDefault();
            //initCustom();
        });
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#dynamic-table-thead-search', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        //debugger
                        var dataOfRow = $(this).text();
                        if (dataOfRow !== undefined && dataOfRow !== null && dataOfRow.toString().trim().length > 0) {
                            dataOfRow = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });
        $(document).ready(function () {
            //debugger;
            var viewId = commonUtils.returnValueText('#viewid');
            if (!commonUtils.isNullOrEmpty(viewId)) {
                var cookie = commonUtils.getCookie(viewId);
                if (commonUtils.isNullOrEmpty(cookie)) {
                    var cookieValue = 'CONTROL|STT|IF_INVCUSRETURNNO|APPRDTIMEUTC|INVCODEIN|CUSTOMERCODE|IF_INVCUSRETURNSTATUS';
                    commonUtils.setCookie(viewId, cookieValue, 10);
                }
            }
            initDefault();

            //initCustom();



        });
    </script>
    <!-- #endregion -->
    <!-- #region cookies -->
    <script>
        document.addEventListener('DOMContentLoaded',
            function () {
                //debugger;
                readCookies("InvF_InventoryCusReturn");
                var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
                for (let checkbox of checkboxs) {
                    checkbox.addEventListener('change', setCookie)
                }
            });
        function saveSelectedToCookie() {
            //debugger;
            setCookie("InvF_InventoryCusReturn",
                {
                    path: '/',
                    expires: 10
                });
        }
        function setCookie(name, options = {}) {
            //debugger;
            var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
            var value = new Object();
            for (const ckb of checkboxs) {
                value[ckb.name] = ckb.checked === true ? "0" : "1";
            }
            let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(JSON.stringify(value));

            if (options.expires instanceof Date) {
                options.expires = options.expires.toUTCString();
            }

            for (let optionKey in options) {
                updatedCookie += "; " + optionKey;
                let optionValue = options[optionKey];
                if (optionValue !== true) {
                    updatedCookie += "=" + optionValue;
                }
            }
            document.cookie = updatedCookie;
        }
        function readCookies(name) {
            //debugger;
            var result = document.cookie.match(new RegExp(name + '=([^;]+)'));
            result && (result = JSON.parse(decodeURIComponent(result[1])));
            if (result != null && result != undefined) {
                for (const key in result) {
                    $('#dynamic-table-thead').find('th[fieldid="' + key + '"]').attr('fieldactive', result[key]);
                }
            }
        }
    </script>
    <!-- #endregion -->
    <!-- In phiếu -->
    <script>
        function Print() {
            var listError = [];
            var checkedItem = $('#table-tbodyID').find('.cl-check:checked');
            if (checkedItem.length == 0) {
                var objToastr = {
                    ToastrType: 'error',
                    ToastrMessage: "Chưa chọn phiếu KH trả hàng cần in!"
                };
                listError.push(objToastr);

            }

            if (listError !== undefined && listError !== null && listError.length > 0) {
                commonUtils.showToastr(listError);
                //return false;
            }

            var iF_InvCusReturnNo = '';
            $(checkedItem).each(function () {
                iF_InvCusReturnNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvCusReturnNo"]').val();
                return false;
            });

            let Url = '@Url.Action("PrintTemp", "InvF_InventoryCusReturn")';

            $.ajax({
                type: "post",
                data:
                {
                    if_invcusreturnno: iF_InvCusReturnNo
                },
                url: Url,
                dataType: 'json',
                beforeSend: function () { }
            }).done(function (result) {
                if (result.Success) {
                    if (result.LinkPDF !== undefined || result.LinkPDF !== '') {
                        printPdf(result.LinkPDF);
                    }
                    else {
                        var objToastr = {
                            ToastrType: 'error',
                            ToastrMessage: "Không lấy được dữ liệu mẫu in"
                        };
                        listError.push(objToastr);

                        if (listError !== undefined && listError !== null && listError.length > 0) {
                            commonUtils.showToastr(listError);
                            //return false;
                        }
                    }
                }
                else {
                    if (result.Messages !== undefined && result.Messages.length > 0) {
                        alert(result.Messages[0]);
                    }
                    if (!commonUtils.isNullOrEmpty(result.Detail)) {
                        showErrorDialog(result.Detail);
                    }
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {

            }).always(function (jqXHROrData, textStatus, jqXHROrErrorThrown) {
                //alert("complete");
            });
        }

        function printPdf(linkPdf) {
            printJS({
                printable: linkPdf,
                type: 'pdf',
                showModal: true,
                //onPrintDialogClose: () => console.log('The print dialog was closed'),
                //onPdfOpen: () => console.log('Pdf was opened in a new tab due to an incompatible browser')
            })
        }
    </script>
}
