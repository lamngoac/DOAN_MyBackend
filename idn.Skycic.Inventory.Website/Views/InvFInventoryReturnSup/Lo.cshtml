@*@model List<InvF_InventoryOutInstLot>*@
@{
    var lstInv_InventoryBalanceLot = new List<Inv_InventoryBalanceLot>();
    if (ViewBag.lstInv_InventoryBalanceLot != null)
    {
        lstInv_InventoryBalanceLot = ViewBag.lstInv_InventoryBalanceLot as List<Inv_InventoryBalanceLot>;
    }
    var listLot = ViewBag.ListLot as List<Inv_InventoryBalanceLot>;
    var ProductCodeUser = ViewBag.ProductCodeUser == null ? "" : ViewBag.ProductCodeUser;
    var ProductName = ViewBag.ProductName == null ? "" : ViewBag.ProductName;
    var ProductCodeTonKho = ViewBag.ProductCode == null ? "" : ViewBag.ProductCode;

    var viewType = ViewBag.ViewType == null ? "" : ViewBag.ViewType;

    var invBUPattern = CUtils.StrValue(ViewBag.InvBUPattern);
    var valConvert = CUtils.StrValue(ViewBag.ValConvert);
    var productCode = CUtils.StrValue(ViewBag.ProductCode);
    var productCodeBase = CUtils.StrValue(ViewBag.ProductCodeBase);
}


<style>
    div.modal-footer {
        text-align: center !important;
    }
</style>
<div class="modal-dialog" style="max-width: 900px;">
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="modal-title" id="exampleModalLabel"><b>POPUP danh sách Lô</b></h2>
            <a href="javascript:;" onclick="ClosePopupLo()" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></a>
        </div>
        <div class="modal-body" style="">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "manageFormShowPopupLo" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-group margin-bottom-9">
                    <div class="col-10 col-sm-8">
                        <span class="block input-icon input-icon-right">
                            <label>Mã hàng hóa: @ProductCodeUser - @ProductName</label>
                        </span>
                    </div>
                </div>
                @*<div class="col-xs-12">*@
                @*<input hidden id="mdLo_ProductCode" value="@(ViewBag.ProductCode == null ? "" : ViewBag.ProductCode)" />*@
                <div class="form-group margin-bottom-5">
                    <input hidden id="mdLo_ProductCode" value="@(ViewBag.ProductCode == null ? "" : ViewBag.ProductCode)" />
                    @*<label for="ParentCode" class=" control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tìm số lô <span style=\"color: red\">*</span>")</label>*@
                    <div class="col-xs-5 col-sm-5">
                        @*<select id="Lo" style="width: 150px;" multiple>
            @{
                foreach (var it in lstInv_InventoryBalanceLot)
                {
                    <option ProductLotNo="@it.ProductLotNo" ProductionDate="@(it.ProductionDate == null ? "" : Convert.ToDateTime(it.ProductionDate).ToString("yyyy-MM-dd"))" ExpiredDate="@(it.ExpiredDate == null ? "" : Convert.ToDateTime(it.ExpiredDate).ToString("yyyy-MM-dd"))" QtyTotalOK="@it.QtyTotalOK" InvCode="@it.InvCode" value="@it.ProductLotNo">@it.ProductLotNo - @it.QtyTotalOK</option>
                }
            }
        </select>*@
                        @*<input type="text" class="col-md-12 " name="lo" id="lo" readonly="readonly" value="" placeholder="Tìm số lô" />*@
                        <input type="text" id="ProductLotNo" name="ProductLotNo" class="col-12 text-left ProductLotNo" placeholder="Tìm số lô" />
                    </div>
                    @*<div>
                        <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="SelectLo()" style="float: right;font-size: 13px;">Chọn</a>
                    </div>*@
                </div>
                @*</div>*@
            }
            <div class="scrollable-horizontal padding-left-0 padding-right-0 table-responsive" style="padding-top: 0!important; ">
                <div style="width: 100%; float: left;">
                    <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0 no-margin">
                        <thead>
                            <tr class="trthead">
                                <th class="text-center cell-50">
                                </th>
                                <th fieldId="INVCODE" sorttype="T" fieldName="Mã kho" fieldActive="0" class="text-left cell-150">
                                    @("Số lô".HtmlItemString("ProductLotNo"))
                                </th>
                                <th fieldId="INVNAME" sorttype="T" fieldName="Tên kho" fieldActive="0" class="text-left cell-150">
                                    @("Ngày sản xuất".HtmlItemString("inventory"))
                                </th>
                                <th fieldId="INVCODEPARENT" sorttype="T" fieldName="Mã kho cha" fieldActive="0" class="text-left cell-150">
                                    @("Ngày hết hạn".HtmlItemString("inventory"))
                                </th>
                                <th fieldId="INVADDRESS" sorttype="T" fieldName="Địa chỉ" fieldActive="0" class="text-left cell-100">
                                    @("Số lượng tồn".HtmlItemString("inventory"))
                                </th>
                                <th fieldId="INVLEVELTYPE" sorttype="T" fieldName="Tên cấp kho" fieldActive="0" class="text-left cell-100">
                                    @("Số lượng xuất".HtmlItemString("Qty"))
                                </th>
                                <th fieldId="INVTYPE" sorttype="T" fieldName="Tên loại kho" fieldActive="0" class="text-left cell-150">
                                    @("Vị trí".HtmlItemString("InvCodeOutActual"))
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div id="scrollable_1" class="scrollable" style="width: 100%; float: left">
                    <table id="dynamic-table-thead-tbody" class="table table-borderedtable-cus table-bottom-0 dynamic-table-tbody dynamic-table-thead-tbody no-margin">
                        <tbody id="table-tbodyIDLo">
                            @{
                                if (listLot != null && listLot.Count != 0)
                                {
                                    var idx = 0;
                                    foreach (var it in listLot)
                                    {
                                        <tr class="data-item trdata" idx="@idx" ProductLotNo="@it.ProductLotNo" InvCode="@it.InvCode">
                                            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[@idx].ProductLotNo" value="@(it.ProductLotNo == null ? "" : it.ProductLotNo)" />
                                            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[@idx].ProductionDate" value="@(it.ProductionDate == null ? "" : it.ProductionDate)" />
                                            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[@idx].ExpiredDate" value="@(it.ExpiredDate == null ? "" : it.ExpiredDate)" />
                                            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[@idx].QtyTotalOK" value="@(it.QtyTotalOK == null ? "" : it.QtyTotalOK)" />
                                            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[@idx].InvCode" value="@(it.InvCode == null ? "" : it.InvCode)" />

                                            <td fieldId="CONTROL" fieldActive="0" class="text-center cell-50 action-buttons">
                                                <a href="javascript:;" class="icon-delete" title="Xóa" onclick="DeleteLo(this, '@it.ProductLotNo');"><i class="fas fa-trash-alt"></i></a>
                                            </td>
                                            <td fieldActive="ProductLotNo" class="text-left cell-150">
                                                @(it.ProductLotNo == null ? "" : it.ProductLotNo)
                                            </td>
                                            <td fieldId="ProductionDate" fieldActive="0" class="text-left cell-150">
                                                @(it.ProductionDate == null ? "" : Convert.ToDateTime(it.ProductionDate).ToString("yyyy-MM-dd"))
                                            </td>
                                            <td fieldId="ValDateExpired" fieldActive="0" class="text-left cell-150">
                                                @(it.ExpiredDate == null ? "" : Convert.ToDateTime(it.ExpiredDate).ToString("yyyy-MM-dd"))
                                            </td>
                                            <td fieldId="QtyTotalOK" fieldActive="0" class="text-right cell-100 QtyTotalOKPopup1">
                                                @(it.QtyTotalOK == null ? "" : it.QtyTotalOK)
                                            </td>
                                            <td fieldId="QtyOut" fieldActive="0" class="text-left cell-100">
                                                <input class="qtyoutPopup col-md-12 text-right" name="Lst_InvF_InventoryOutLotDtl[@idx].Qty" value="@(it.QtyAvailOK == null ? "" : it.QtyAvailOK)" onchange="ChangeQtyOut(this);">
                                            </td>
                                            <td fieldId="InvCode" fieldActive="0" class="text-left cell-150">
                                                @(it.InvCode == null ? "" : it.InvCode)
                                            </td>
                                        </tr>
                                        idx++;
                                    }

                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        @if (viewType != "detail")
        {
            <div class="modal-footer" style="display:flex; align-items:center; justify-content: center">
                @*<div style="text-align:center !important">*@
                    @*<a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="ClosePopupLo()" style="float: right;font-size: 13px;">Đóng</a>

                    <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="product_InvF_InventoryOutInstLot_SaveUpdate('@ProductCodeTonKho')" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i>Lưu</a>*@

                    <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="ClosePopupLo()" style="float: right;font-size: 13px;">Đóng</a>
                    <a class="btn font-color mybtn-Button" href="javascript:void(0);" onclick="product_InvF_InventoryOutInstLot_SaveUpdate('@ProductCodeTonKho')" style="float: right;font-size: 13px;"><i class="fa fa-plus-circle" aria-hidden="true"></i>Lưu</a>

                @*</div>*@

            </div>
        }
    </div>
</div>

<table hidden>
    <tbody id="rowtemplateLo">
        <tr class="data-item trdata" idx="==idx==" ProductLotNo="==ProductLotNo==" InvCode="==InvCode==">
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].ProductLotNo" value="==ProductLotNo==" />
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].ProductionDate" value="==ProductionDate==" />
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].ExpiredDate" value="==ExpiredDate==" />
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].QtyTotalOK" value="==   ==" />
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].InvCode" value="==InvCode==" />
            <input type="hidden" name="Lst_InvF_InventoryOutLotDtl[==idx==].FlagExist" value="0" />
            <td fieldId="CONTROL" fieldActive="0" class="text-center cell-50 action-buttons">
                <a href="javascript:;" class="icon-delete" title="Xóa" onclick="DeleteLo(this, '==ProductLotNo==');"><i class="fas fa-trash-alt"></i></a>
            </td>
            <td fieldActive="ProductLotNo" class="text-left cell-150">
                ==ProductLotNo==
            </td>
            <td fieldId="ProductionDate" fieldActive="0" class="text-left cell-150">
                ==ProductionDate==
            </td>
            <td fieldId="ExpiredDate" fieldActive="0" class="text-left cell-150">
                ==ExpiredDate==
            </td>
            <td fieldId="QtyTotalOK" fieldActive="0" class="text-right cell-100 QtyTotalOKPopup1">
                ==QtyTotalOK==
            </td>
            <td fieldId="QtyOut" fieldActive="0" class="text-left cell-100">
                <input class="qtyoutPopup col-md-12 text-right" value="==QtyTotalOK==" name="Lst_InvF_InventoryOutLotDtl[==idx==].Qty" onchange="ChangeQtyOut(this)">
            </td>
            <td fieldId="InvCode" fieldActive="0" class="text-left cell-150">
                ==InvCode==
            </td>
        </tr>
    </tbody>
</table>

<script>
    $(function () {
        //$('select[id$="Lo"]').multiselect({
        //    includeSelectAllOption: false,
        //    enableFiltering: true,
        //    maxHeight: 200,
        //    max_selected_options: 100
        //});

        $('#Lo').select2({
            closeOnSelect: false
        });
        //$('.qtyout').number(true, 2);
        format_Number();

    })


    function format_Number(){
        var tableName = 'InvF_InventoryReturnSup';
        var qtyTotalOKFormat = objMst_ColumnConfig.returnValueColumnFormat_V2(tableName, 'QtyTotalOK');
        $('.qtyoutPopup').number(true, qtyTotalOKFormat);
        //$('.QtyTotalOKPopup1').number(true, qtyTotalOKFormat);
    
    }

    function ChangeQtyOut(thiz) {
        var strqty = $(thiz).val();
        if (strqty == "") {
            alert("Số lượng không đúng định dạng số.");
            $(thiz).focus();
            return;
        }
        var tr = $(thiz).parents('tr');
        var idx = $(tr).attr("idx");
        var strqtytotalOK = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].QtyTotalOK"]').val();
        var qtytotalOK = parseFloat(strqtytotalOK);
        var qty = parseFloat(strqty);
        if (qty > qtytotalOK) {
            $(thiz).focus();
            alert("Số lượng không được lớn hơn số lượng tồn kho.");
            return;
        }
    }

    function SelectLo() {
        debugger;
        var length = $('#Lo').find("option:selected").length;
        if (length == 0) {
            alert("Không có lô nào được chọn");
            return;
        }
        var lstLo = [];

        for (var i = 0; i < length; i++) {
            var Lo = new Object();
            var optselect = $('#Lo').find("option:selected").eq(i);
            Lo.ProductLotNo = optselect.attr("ProductLotNo");
            Lo.ProductionDate = optselect.attr("ProductionDate");
            Lo.ExpiredDate = optselect.attr("ExpiredDate");
            Lo.QtyTotalOK = optselect.attr("QtyTotalOK");
            Lo.InvCode = optselect.attr("InvCode");
            lstLo.push(Lo);
        }
        var qtyLo = lstLo.length;
        for (var i = 0; i < qtyLo; i++) {
            var item = lstLo[i];
            var strHtml = getHtmlFromTemplate($('#rowtemplateLo'), {
                ProductLotNo: item.ProductLotNo,
                ProductionDate: item.ProductionDate,
                ExpiredDate: item.ExpiredDate,
                QtyTotalOK: item.QtyTotalOK,
                InvCode: item.InvCode,
                idx: 999999
            });

            var trProductOld = $('#table-tbodyIDLo').find("tr.trdata[ProductLotNo='" + item.ProductLotNo + "'][InvCode='" + item.InvCode + "']");
            if (trProductOld.length > 0) {
                trProductOld.replaceWith(strHtml);
            }
            else {
                $('#table-tbodyIDLo').append(strHtml);
            }
            //$('.qtyout').number(true, 2);

            updateTableTrIdx($('#table-tbodyIDLo tr'), false);
        }
    }

    function DeleteLo(thiz, malo) {
        bootbox.confirm("Đồng ý xóa lô " + malo + " ?", function (result) {
            if (result) {
                var tr = $(thiz).parents('tr');
                if (tr != undefined) {
                    tr.remove();
                    updateTableTrIdx($('#table-tbodyIDLo tr'), false);
                }
            }
        });
    }

    function SaveLo() {
        debugger;
        var length = $('#table-tbodyIDLo').length;
        var productcode = $('#mdLo_ProductCode').val();
        var trDetailproduct = $('#table-tbodyID tr.trdata[productcode="' + productcode + '"]');
        var check = true;
        if (length > 0) {
            var lenItem = $('#table-detailLot').find('tr.trdata[productcode="' + productcode + '"]').length;
            var sumqty = 0.0;
            var sumqtytotalok = 0.0;
            var arrayInvCode = [];
            var lstVitri = "";

            // Check sl xuất <= sl đơn hàng
            //var OrderNo = $('#OrderNo').val();
            //var sumQtyDetail = 0;
            //if (OrderNo != null && OrderNo != "") {
            //    var strqtyOrder = trDetailproduct.attr("qtyOrder");
            //    var qtyOrder = parseFloat(strqtyOrder);
            //    if ($.isNumeric(strqtyOrder)) {
            //        qtyOrder = parseFloat(strqtyOrder);
            //    }
            //    if (qtyOrder == 0) {
            //        alert("Số lượng đơn hàng = 0. Không thể thực hiện xuất kho.");
            //        return;
            //    }

            //    $("#table-detailLot tr.trdata").each(function () {
            //        var tr = $(this);
            //        var idx = tr.attr('idx');
            //        var strqtyout = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].Qty"]').val();
            //        var f_qtyout = parseFloat(strqtyout);
            //        sumQtyDetail += f_qtyout;
            //    });

            //    if (sumQtyDetail > qtyOrder) {
            //        alert("Số lượng sản phẩm vượt quá số lượng trong đơn hàng. (Số lượng đơn hàng: " + qtyOrder+ ")");
            //        return;
            //    }
            //}
            //




            $("#table-tbodyIDLo tr.trdata").each(function () {
                var tr = $(this);
                var idx = $(tr).attr('idx');
                var strqty = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].Qty"]').val();
                if (strqty == "") {
                    alert("Số lượng xuất không được trống");
                    tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].Qty"]').focus();
                    check = false;
                    return;
                }
                var qty = parseFloat(strqty);
                sumqty += qty;

                var strHtml;

                var ProductLotNo = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].ProductLotNo"]').val();
                var ProductionDate = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].ProductionDate"]').val();
                var ExpiredDate = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].ExpiredDate"]').val();
                var Qty = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].Qty"]').val();
                var QtyTotalOK = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].QtyTotalOK"]').val();
                var qtyok = parseFloat(QtyTotalOK);
                sumqtytotalok += qtyok;
                var InvCodeOutActual = tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + idx + '].InvCode"]').val();
                if (InvCodeOutActual != null) {
                    if (arrayInvCode.includes(InvCodeOutActual) == false) {
                        arrayInvCode.push(InvCodeOutActual);
                        if (lstVitri == "") {
                            lstVitri += InvCodeOutActual;
                        }
                        else {
                            lstVitri += ", " + InvCodeOutActual;
                        }
                    }

                }
                strHtml = getHtmlFromTemplate($('#rowtemplateLoDetail'), {
                    ProductCode: productcode,
                    ProductLotNo: ProductLotNo,
                    ProductionDate: ProductionDate,
                    ExpiredDate: ExpiredDate,
                    Qty: Qty,
                    InvCodeOutActual: InvCodeOutActual,
                    QtyTotalOK: QtyTotalOK,
                    idx: 999999
                });

                //

                if (lenItem == 0) {
                    $('#table-detailLot').append(strHtml);
                }
                else {
                    var trLo_Old = $('#table-detailLot').find('tr[productCode="' + productcode + '"][productLotNo="' + ProductLotNo + '"]').eq(0);
                    if (trLo_Old != undefined && trLo_Old.length > 0) {
                        trLo_Old.replaceWith(strHtml);
                    }
                    else {
                        $('#table-detailLot').append(strHtml);
                    }

                }
                updateTableTrIdx($('#table-detailLot tr'), false);

            });

            // Cập nhật lại số lượng theo sl lô
            debugger;
            var trProduct = $('#table-tbodyID').find('tr[productcode="' + productcode + '"]');
            var ProductIdx = trProduct.attr('idx');

            //
            var lengthReturn = trProduct.find('input[name="Lst_InvF_InventoryReturnSupDtl[' + ProductIdx + '].Qty"]').length;
            if (lengthReturn != 0 && lengthReturn != undefined) {
                trProduct.find('input[name="Lst_InvF_InventoryReturnSupDtl[' + ProductIdx + '].Qty"]').val(sumqty);
                trProduct.find('input[name="Lst_InvF_InventoryReturnSupDtl[' + ProductIdx + '].InvCodeOutActual"]').val(lstVitri);
            }
            //
            TongTien();
            ClosePopupLo();
        }
        if (check == false) return;
    }


</script>


<script>
    function product_InvF_InventoryOutInstLot_SaveUpdate(productCode) {
        debugger
        var rows = $('tbody#table-tbodyIDLo tr.trdata').length;
        if (rows > 0) {
            var productCode = commonUtils.returnValueText('#manageFormShowPopupLo input#mdLo_ProductCode');
            if (!commonUtils.isNullOrEmpty(productCode)) {
                @* Xóa LOT - hàng hóa đã lưu cache *@

                var rowOlds = $('#table-detailLot').find('tr[productcode="' + productCode + '"]').length;
                if (rowOlds > 0) {
                    $('#table-detailLot').find('tr[productcode="' + productCode + '"]').each(function () {
                        $(this).remove();
                    });
                }
                @* Thêm LOT - hàng hóa vào cache *@
                var strInvCodeInActual = '';
                var fTotalQty = 0.0;
                var arrayInvCode = [];
                var lstVitri = "";
                $("#table-tbodyIDLo tr.trdata").each(function () {
                    debugger
                    var $tr = $(this);
                    var rd = $tr.attr('idx');
                    var productlotno = $tr.attr('productlotno');

                    var ProductLotNo = $tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].ProductLotNo"]').val();
                    var ProductionDate = $tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].ProductionDate"]').val();
                    var ExpiredDate = $tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].ExpiredDate"]').val();
                    var fQty = commonUtils.parseFloat(commonUtils.returnValue($tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].Qty"]').val()));
                    var QtyTotalOK = $tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].QtyTotalOK"]').val();
                    var InvCode = $tr.find('input[name="Lst_InvF_InventoryOutLotDtl[' + rd + '].InvCode"]').val();
                    if (InvCode != null) {
                        if (arrayInvCode.includes(InvCode) == false && fQty !== '0') {
                            arrayInvCode.push(InvCode);
                            if (lstVitri == "") {
                                lstVitri += InvCode;
                            }
                            else {
                                lstVitri += ", " + InvCode;
                            }
                        }

                    }
                    fTotalQty += fQty;
                    var objProduct = {
                        ProductCode: productCode,
                        ProductLotNo: ProductLotNo,
                        ProductionDate: ProductionDate,
                        ExpiredDate: ExpiredDate,
                        Qty: fQty,
                        InvCodeInActual: InvCode,
                        QtyTotalOK: QtyTotalOK,
                    };

                    var extData = {
                        idx: 9999,
                    };
                    var $item = $(commonUtils.getHtmlFromTemplate($('#tmpl_Product_LOT'), objProduct, extData));
                    $item.appendTo($('#table-detailLot'));
                });
                commonUtils.updateTableTrNotShowIdx($('#table-detailLot tr.trdata'), true);

                debugger
                @* Update lại vị trí, số lượng *@
                    var $trInvF_InventoryInDtl = $('#table-tbodyID').find('tr[productcode="' + productCode + '"]');
                if ($trInvF_InventoryInDtl !== undefined && $trInvF_InventoryInDtl !== null && $trInvF_InventoryInDtl.length > 0) {
                    var rdInvF_InventoryInDtl = $trInvF_InventoryInDtl.attr('rd');
                    var $inputQty = $trInvF_InventoryInDtl.find('input.qty-' + rdInvF_InventoryInDtl);
                    if ($inputQty !== undefined && $inputQty !== null && $inputQty.length > 0) {
                        $inputQty.val(fTotalQty);
                    }

                    var $inputInvCodeInActual = $trInvF_InventoryInDtl.find('input.invcodeinactual-' + rdInvF_InventoryInDtl);
                    if ($inputInvCodeInActual !== undefined && $inputInvCodeInActual !== null && $inputInvCodeInActual.length > 0) {
                        $inputInvCodeInActual.val(lstVitri);
                    }

                    tongTienHang();

                }
                ClosePopupLo();

            }
        }
    }
</script>


<script type="text/javascript">
       $(document).ready(function () {
           $('#ProductLotNo').autocomplete({
               source: function (request, response) {
                   debugger
                   var keyword = request.term;
                   if (!commonUtils.isNullOrEmpty(keyword)) {
                       debugger
                       if (keyword.toString().trim().length > 1) {
                           var url = '@Url.Action("SearchLo", "InvFInventoryReturnSup")';
                           var token = $('#manageForm input[name=__RequestVerificationToken]').val();

                           var invBUPattern = "";
                           var selectKho = $('select.mstinventory').eq(0);
                           var optionSelect = $(selectKho).find('option:selected');
                           invBUPattern = optionSelect.attr("invBUPattern");
                           $.ajax({
                               url: url,
                               type: 'post',
                               data: {
                                   productCode: '@productCode',
                                   productCodeBase: '@productCodeBase',
                                   invBUPattern: invBUPattern,
                                   productCodeUser: '@ProductCodeUser',
                                   valConvert: '@valConvert',
                                   productLotNo: keyword,
                                   __RequestVerificationToken: token
                               },
                               cache: false,
                               dataType: 'json',
                               async: true,
                               success: function (objResult) {
                                   debugger
                                   var listItems = [];
                                   if (objResult.Success) {
                                       debugger
                                       var listItems = $.map(objResult.LstInv_InventoryBalanceLot, function (data, id) {
                                           return {
                                               value: data.ProductLotNo,
                                               label: data.ProductLotNo,
                                               //
                                               data: data
                                           };
                                       })
                                       listItems.push({ label: "", value: "", isShowAll: true })
                                       response(listItems);
                                   }
                                   else {
                                       if (!commonUtils.isNullOrEmpty(objResult.Messages)) {
                                           commonUtils.showAlert(objResult.Messages[0]);
                                       }
                                       if (!commonUtils.isNullOrEmpty(objResult.Detail)) {
                                           _showErrorMsg123('Lỗi!', objResult.Detail);
                                       }
                                       response(listItems);
                                   }

                               },
                               error: function (xmlHttpRequest, textStatus, errorThrown) {
                                   console.log('some error occured', textStatus, errorThrown);
                               }
                           });
                       }
                   }
               },
               minLength: 1,
               open: function () {
                   setTimeout(function () {
                       $('.ui-autocomplete').css('z-index', 99999999999999);
                   }, 0);
               },
               select: function (event, ui) {
                   debugger;
                   var _objProduct = ui.item;

                   var data = _objProduct.data;


                   var lstLo = [];

                   //for (var i = 0; i < length; i++) {
                   //    var Lo = new Object();
                   //    var optselect = $('#Lo').find("option:selected").eq(i);
                   //    Lo.ProductLotNo = optselect.attr("ProductLotNo");
                   //    Lo.ProductionDate = optselect.attr("ProductionDate");
                   //    Lo.ExpiredDate = optselect.attr("ExpiredDate");
                   //    Lo.QtyTotalOK = optselect.attr("QtyTotalOK");
                   //    Lo.InvCode = optselect.attr("InvCode");
                   //    lstLo.push(Lo);
                   //}
                   var Lo = new Object();
                   Lo.ProductLotNo = data.ProductLotNo;
                   Lo.ProductionDate = data.ProductionDate;
                   Lo.ExpiredDate = data.ExpiredDate;
                   Lo.QtyTotalOK = data.QtyTotalOK;
                   Lo.InvCode = data.InvCode;
                       lstLo.push(Lo);



                   var qtyLo = lstLo.length;
                   for (var i = 0; i < qtyLo; i++) {
                       var item = lstLo[i];

                       var ProductionDate = item.ProductionDate;
                       var ExpiredDate = item.ExpiredDate;

                       if (ProductionDate == '' || ProductionDate == null) {
                           ProductionDate = '';
                       }



                       if (ExpiredDate == '' || ExpiredDate == null) {
                           ExpiredDate = '';
                       }

                       var strHtml = getHtmlFromTemplate($('#rowtemplateLo'), {
                           ProductLotNo: item.ProductLotNo,
                           ProductionDate: ProductionDate,
                           ExpiredDate: ExpiredDate,
                           QtyTotalOK: item.QtyTotalOK,
                           InvCode: item.InvCode,
                           idx: 999999
                       });

                       var trProductOld = $('#table-tbodyIDLo').find("tr.trdata[ProductLotNo='" + item.ProductLotNo + "'][InvCode='" + item.InvCode + "']");
                       if (trProductOld.length > 0) {
                           trProductOld.replaceWith(strHtml);
                       }
                       else {
                           $('#table-tbodyIDLo').append(strHtml);
                       }
                       //$('.qtyout').number(true, 2);
                       format_Number();
                       updateTableTrIdx($('#table-tbodyIDLo tr'), false);
                   }


                   return false;

               }
           });
    });
</script>