@model PageInfo<InvF_InventoryReturnSup>

@{
                /**/

                ViewBag.Title = "Quản lý tả hàng NCC";
                var userState = ViewBag.UserState as UserState;
                var init = CUtils.StrValue(ViewBag.init);
                var pageCur = CUtils.StrValue(ViewBag.PageCur);
                var recordCount = CUtils.StrValue(ViewBag.RecordCount);
                var totalPage = "0";
                if (Model != null)
                {
                    totalPage = CUtils.StrValue(Model.PageCount);
                }

                var listMst_Inventory = ViewBag.List_Mst_Inventory as List<Mst_Inventory>;
                var listMst_NNT = ViewBag.ListMst_NNT as List<Mst_NNT>;

                var listCustomer = new List<Mst_Customer>();
                if (ViewBag.List_MstCustomer != null)
                {
                    listCustomer = ViewBag.List_MstCustomer as List<Mst_Customer>;
                }
                var viewid = string.Format("{0}_{1}_{2}_{3}", CUtils.StrValue(userState.SysUser.UserCode), CUtils.StrValue(ViewBag.SolutionCodeSignature), CUtils.StrValue(userState.Mst_NNT.OrgID), "InvFInventoryReturnSup_Mng");
}

<script>
    setAdminCurrentUrl('@Url.Action("Index", "InvFInventoryReturnSup")');
</script>
<script src="~/Content/assets/js/bootbox.js"></script>
@*<script src="~/Content/assets/js/myjs/trahangNCC.js"></script>*@
<script src="@Url.Content("~/Scripts/print.min.js")"></script>


<div class="mt-3 no-margin">
    <div class="col-12">
        @using (Html.BeginForm("Index", "InvFInventoryReturnSup", FormMethod.Post, new { id = "manageForm", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <input type="hidden" id="viewid" name="viewid" value="@MvcHtmlString.Create(viewid)" />
            <input hidden id="init" name="init" value="search" />
            <div class="layout-search layout-bot-top-16">
                <div class="row no-margin">
                    <div class="col-sm-11 row no-margin">
                        <div class="col-sm-4 no-padding">
                            <div class="row form-group margin-bottom-9">
                                <label for="IF_InvReturnSupNo" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Số phiếu trả hàng nhập".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-12 col-sm-8">
                                    <span class="block input-icon input-icon-right">
                                        <input type="text" id="IF_InvReturnSupNo" name="IF_InvReturnSupNo" class="col-12 IF_InvReturnSupNo" value="" autocomplete="off" />
                                    </span>
                                </div>
                            </div>
                            <div class="row form-group margin-bottom-9">
                                <label for="CreateDTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày tạo từ".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-sm-8 row date-input-group no-margin">
                                    <div class="row col-fix-5 no-margin">
                                        <div class="col-12 no-padding">
                                            <div class="input-group" id="dtdatestart">
                                                <input type="text" id="CreateDTimeFrom" name="CreateDTimeFrom" class="col-9 cl-date CreateDTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                <span class="input-group-addon col-3">
                                                    <i class="far fa-calendar-alt"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <label for="CreateDTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("đến".HtmlItemString("InvFInventoryReturnSup"))</label>
                                    <div class="row col-fix-5 no-margin">
                                        <div class="col-12 no-padding">
                                            <div class="input-group" id="dtdatestart">
                                                <input type="text" id="CreateDTimeTo" name="CreateDTimeTo" class="col-9 cl-date CreateDTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                <span class="input-group-addon col-3">
                                                    <i class="far fa-calendar-alt"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4 no-padding">
                            <div class="row form-group margin-bottom-9">
                                <label for="CustomerCode" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Nhà cung cấp".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-12 col-sm-8">
                                    <span class="block input-icon input-icon-right selection--multiple">
                                        <select class="select2-selection" name="CustomerCode" id="CustomerCode">
                                            <option value="">--Chọn nhà cung cấp--</option>
                                            @{
                                                if (listCustomer != null && listCustomer.Count > 0)
                                                {
                                                    foreach (var item in listCustomer)
                                                    {
                                                        <option value="@item.CustomerCodeSys">
                                                            @MvcHtmlString.Create(item.CustomerCode + " - " + item.CustomerName)

                                                        </option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </span>
                                </div>
                            </div>
                            <div class="row form-group margin-bottom-9">
                                <label for="ApprDTimeFrom" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Ngày duyệt từ".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-sm-8 row date-input-group no-margin">
                                    <div class="row col-fix-5 no-margin">
                                        <div class="col-12 no-padding">
                                            <div class="input-group" id="dtdatestart">
                                                <input type="text" id="ApprDTimeFrom" name="ApprDTimeFrom" class="col-9 cl-date ApprDTimeFrom hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                <span class="input-group-addon col-3">
                                                    <i class="far fa-calendar-alt"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <label for="ApprDTimeTo" class="col-fix-2 control-label no-padding-right font-weight-500 text-center">@("đến".HtmlItemString("InvFInventoryReturnSup"))</label>
                                    <div class="row col-fix-5 no-margin">
                                        <div class="col-12 no-padding">
                                            <div class="input-group" id="dtdatestart">
                                                <input type="text" id="ApprDTimeTo" name="ApprDTimeTo" class="col-9 cl-date ApprDTimeTo hasDatepicker" data-date-format="yyyy-mm-dd" value="" autocomplete="off">
                                                <span class="input-group-addon col-3">
                                                    <i class="far fa-calendar-alt"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4 no-padding">
                            <div class="row form-group margin-bottom-9">
                                <label for="InvCodeOut" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Kho xuất".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-12 col-sm-8">
                                    <span class="block input-icon input-icon-right selection--multiple">
                                        <select class="select2-selection" name="InvCodeOut" id="InvCodeOut">
                                            <option value="">--Chọn kho xuất--</option>
                                            @{
                                                if (listMst_Inventory != null && listMst_Inventory.Count > 0)
                                                {
                                                    foreach (var item in listMst_Inventory)
                                                    {
                                                        <option value="@item.InvCode">
                                                            @MvcHtmlString.Create(item.InvCode + " - " + item.InvName)
                                                        </option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </span>
                                </div>
                            </div>
                            <div class="row form-group margin-bottom-9">
                                <label for="OrgID" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 ">@("Chi nhánh".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="col-12 col-sm-8">
                                    <span class="block input-icon input-icon-right selection--multiple">
                                        <select class="select2-selection" name="OrgID" id="OrgID">
                                            <optgroup label="">
                                                <option value="">--Chọn chi nhánh--</option>
                                                @{
                                                    if (listMst_NNT != null && listMst_NNT.Count > 0)
                                                    {
                                                        foreach (var item in listMst_NNT)
                                                        {
                                                            <option value="@item.OrgID">
                                                                @item.NNTFullName
                                                            </option>
                                                        }
                                                    }
                                                }
                                            </optgroup>
                                        </select>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-1 text-center">
                        <span class="block input-icon input-icon-right">
                            <a class="btn btn-nc-button" onclick="SearchData()" href="javascript:void(0);" style=""><img class="img-button-search" src="@Url.Content("~/Images/search.svg")"></a>
                        </span>
                    </div>
                    <div class="col-12 no-padding margin-top-5">
                        <div class="col-sm-11">
                            <div class="form-group no-margin">
                                <label for="" class="col-12 col-sm-4 control-label no-padding-right font-weight-500 no-margin" style="max-width: 12.5%; padding-top: 0; padding-right: 15px!important;">@("Trạng thái".HtmlItemString("InvFInventoryReturnSup"))</label>
                                <div class="row no-margin checkbox-list">
                                    @*<div class="row chk">
                                        <input type="checkbox" class="cl-check" name="chk-pending" id="chk-pending" />
                                        <div class="span-title-check">Mới tạo</div>
                                    </div>
                                    <div class="row chk">
                                        <input type="checkbox" class="cl-check" name="chk-approved" id="chk-approved" />
                                        <div class="span-title-check">Đã duyệt</div>
                                    </div>
                                    <div class="row chk">
                                        <input type="checkbox" class="cl-check" name="chk-canceled" id="chk-canceled" />
                                        <div class="span-title-check">Đã huỷ</div>
                                    </div>*@
                                    <div class="checkbox-item">
                                        <input type="checkbox" class="cl-check idn-checkbox" name="chk-pending" id="chk-pending" />
                                        <label for="chk-pending">
                                            <span></span>
                                        </label>
                                        <span class="span-title-check">Mới tạo</span>
                                    </div>
                                    <div class="checkbox-item">
                                        <input type="checkbox" class="cl-check idn-checkbox" name="chk-approved" id="chk-approved" />
                                        <label for="chk-approved">
                                            <span></span>
                                        </label>
                                        <span class="span-title-check">Đã duyệt</span>
                                    </div>
                                    <div class="checkbox-item">
                                        <input type="checkbox" class="cl-check idn-checkbox" name="chk-canceled" id="chk-canceled" />
                                        <label for="chk-canceled">
                                            <span></span>
                                        </label>
                                        <span class="span-title-check">Đã huỷ</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        }
    </div>
</div>
<div class="row no-margin">
    <div class="col-sm-12">
        <div id="BindDataInvFInventoryReturnSup" class="conten-table">
            @Html.Partial("BindDataInvFInventoryReturnSup", Model, new ViewDataDictionary() { { "PageCur", MvcHtmlString.Create(pageCur) }, { "RecordCount", MvcHtmlString.Create(recordCount) }, { "UserState", userState } })
        </div>
    </div>
</div>


@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/InvFInventoryReturnSup.js")"></script>
    <script>
        //Date picker
        $('.select2-selection').select2();
        $('#CreateDTimeFrom, #CreateDTimeTo, #ApprDTimeFrom , #ApprDTimeTo').datepicker({
            autoclose: true,
            todayHighlight: true,
            format: 'yyyy-mm-dd'
        })
        $(document).ready(function () {
            $('.dropdown-menu').on('click', function (event) {
                event.stopPropagation();
            });
        })
    </script>



    <!-- #region table sort -->
    <script>
        var initDefault = function () {
            $('#dynamic-table-thead').idnTable({
                searchTextbox: '#dynamic-table-thead-search', columnToggleButton: '#togglecolumn',
                cookieId: '#viewid',
            });
        };
        var initCustom = function () {
            var tb = $('#dynamic-table-thead').idnTable();

            $('#dynamic-table-thead-search').keyup(function () {
                var kw = $(this).val();
                tb.search(kw);
            });

            //tb.showColumns(['STT'], false);
            //tb.reload();
            var colList = tb.getAllColumns();
            $('#togglecolumn').html('');

            for (var i = 0; i < colList.length; ++i) {

                var col = colList[i];
                var fieldid = col.id;
                var title = col.name;

                if (title !== undefined && title !== null && title.toString().trim().length > 0) {
                    title = title.toString().trim();
                } else {
                    title = '';
                }

                var fieldactive = col.show;

                //B2: Sinh popup tùy chỉnh các cột trong bảng #dynamic-table-thead
                var $input = $('<input>');
                $input.attr('type', 'checkbox');
                $input.attr('name', fieldid);

                if (fieldactive === true) { //Nếu trạng thái bằng 0 cho hiện cột và checked ô input tương ứng
                    $input.attr('checked', 'checked');

                }

                var $spaninput = $('<span>');
                $spaninput.append($input);
                $spaninput.css('margin-right', '10px');

                var $spantext = $('<span>');
                $spantext.text(title);

                var $li = $('<li>');
                $li.css('line-height', '19px');
                $li.css('margin-bottom', '18px');
                $li.append($spaninput);
                $li.append($spantext);

                $('#togglecolumn').append($li);

                $input.click(function () {
                    if ($(this).is(':checked')) {
                        tb.showColumns([$(this).attr('name')], false);
                    }
                    else {
                        tb.hideColumns([$(this).attr('name')], false);
                    }
                });
            }
        };
        $(document).ready(function () {
            initDefault();
            //initCustom();
        });
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#dynamic-table-thead-search', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        //debugger
                        var dataOfRow = $(this).text();
                        if (dataOfRow !== undefined && dataOfRow !== null && dataOfRow.toString().trim().length > 0) {
                            dataOfRow = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });
        $(document).ready(function () {
            //debugger;
            var viewId = commonUtils.returnValueText('#viewid');
            if (!commonUtils.isNullOrEmpty(viewId)) {
                var cookie = commonUtils.getCookie(viewId);
                if (commonUtils.isNullOrEmpty(cookie)) {
                    var cookieValue = 'CONTROL|STT|IF_INVRETURNSUPNO|APPRDTIMEUTC|INVCODEOUT|CUSTOMERCODE|IF_RETURNSUPSTATUS|IF_INVINNO';
                    commonUtils.setCookie(viewId, cookieValue, 10);
                }
            }
            initDefault();

            //initCustom();



        });
    </script>
    <!-- #endregion -->
    <!-- #region cookies -->
    <script>
        document.addEventListener('DOMContentLoaded',
            function () {
                //debugger;
                readCookies("InvFInventoryReturnSup");
                var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
                for (let checkbox of checkboxs) {
                    checkbox.addEventListener('change', setCookie)
                }
            });

        function saveSelectedToCookie() {
            //debugger;
            setCookie("InvFInventoryReturnSup",
                {
                    path: '/',
                    expires: 10
                });
        }

        function setCookie(name, options = {}) {
            //debugger;
            var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
            var value = new Object();
            for (const ckb of checkboxs) {
                value[ckb.name] = ckb.checked === true ? "0" : "1";
            }
            let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(JSON.stringify(value));

            if (options.expires instanceof Date) {
                options.expires = options.expires.toUTCString();
            }

            for (let optionKey in options) {
                updatedCookie += "; " + optionKey;
                let optionValue = options[optionKey];
                if (optionValue !== true) {
                    updatedCookie += "=" + optionValue;
                }
            }
            document.cookie = updatedCookie;
        }

        function readCookies(name) {
            //debugger;
            var result = document.cookie.match(new RegExp(name + '=([^;]+)'));
            result && (result = JSON.parse(decodeURIComponent(result[1])));
            if (result != null && result != undefined) {
                for (const key in result) {
                    $('#dynamic-table-thead').find('th[fieldid="' + key + '"]').attr('fieldactive', result[key]);
                }
            }
        }
    </script>
    <!-- #endregion -->

    <script>
        function SearchData() {
            debugger
            var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
            var ajaxSettings = {};
              ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("DoSearch", "InvFInventoryReturnSup")';
            objInvFInventoryReturnSup.ajaxSettings = ajaxSettings;
            objInvFInventoryReturnSup.doSearch();
        }
    </script>
    <script>
        function Approve() {
            debugger
            var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Approve", "InvFInventoryReturnSup")';
            objInvFInventoryReturnSup.ajaxSettings = ajaxSettings;
            objInvFInventoryReturnSup.approveData();
        }
    </script>

    <script>
       function Cancel() {
           debugger
           var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
           var ajaxSettings = {};
              ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
           ajaxSettings.Url = '@Url.Action("Cancel", "InvFInventoryReturnSup")';
           objInvFInventoryReturnSup.Image_Message = "<i class=\"fas fa-info-circle\"></i> THÔNG BÁO";
           objInvFInventoryReturnSup.Confirm_Message = 'Đồng ý hủy danh sách phiếu trả hàng này?';
           objInvFInventoryReturnSup.ajaxSettings = ajaxSettings;
           objInvFInventoryReturnSup.cancleData();

       }
    </script>
    <script>
        function Delete() {
            debugger
            var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
            var ajaxSettings = {};
             ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Delete", "InvFInventoryReturnSup")';
            objInvFInventoryReturnSup.Image_Message = '<i class=\"fas fa-info-circle\"></i> THÔNG BÁO';
            objInvFInventoryReturnSup.Confirm_Message = 'Đồng ý xoá danh sách phiếu trả hàng này?';
            objInvFInventoryReturnSup.ajaxSettings = ajaxSettings;
            objInvFInventoryReturnSup.deleteData();
        }
    </script>
    <script>
        function Export() {
            debugger
            //var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
            //objInvFInventoryReturnSup.epxportData();


            var listError = [];
        var checkedItem = $('#table-tbodyID').find('input.idn-checkbox:checked');
        if (checkedItem.length == 0) {
            var objToastr = {
                ToastrType: 'error',
                ToastrMessage: 'Chưa chọn phiếu trả hàng cần xuất excel!'
            };
            listError.push(objToastr);
        }
        if (listError !== undefined && listError !== null && listError.length > 0) {
            commonUtils.showToastr(listError);
            //return false;
        }
        else {
            debugger
            var listInvFInventoryReturnSup = [];
            $(checkedItem).each(function () {
                iF_InvReturnSupNo = $(this).closest('tr.trdata').find('input[type="hidden"][name="IF_InvReturnSupNo"]').val();
                var objSelect = {};
                objSelect.IF_InvReturnSupNo = iF_InvReturnSupNo;
                listInvFInventoryReturnSup.push(objSelect);
            });

            var objCommonExcel = new CommonExcel();
            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Export", "InvFInventoryReturnSup")';
            debugger
            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings;
            objCommonExcel.exportExcelSelected(listInvFInventoryReturnSup);


        }
        }
    </script>
    <script>
        function Print() {
            debugger
            var objInvFInventoryReturnSup = new InvFInventoryReturnSup();
            var ajaxSettings = {};
              ajaxSettings.Type = 'post';
              ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("PrintTemp", "InvFInventoryReturnSup")';
            objInvFInventoryReturnSup.ajaxSettings = ajaxSettings;
            objInvFInventoryReturnSup.printData();
        }
    </script>
}