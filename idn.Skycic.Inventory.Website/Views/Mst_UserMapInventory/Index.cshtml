@model PageInfo<Mst_Inventory>
@{
    ViewBag.Title = "Index";
    var lstInventory = new List<Mst_Inventory>();
    if (ViewBag.lstInventory != null)
    {
        lstInventory = ViewBag.lstInventory as List<Mst_Inventory>;
    }
    var lstMstUser = ViewBag.lstMstUser as List<Sys_User>;
    var title = "PHÂN QUYỀN KHO";
    ViewBag.Title = title;
    var startCount = 0;
    var strStartCount = ViewBag.StartCount as string;
    var recordCount = CUtils.StrValue(ViewBag.RecordCount);
    if (!CUtils.IsNullOrEmpty(strStartCount))
    {
        startCount = Convert.ToInt32(strStartCount);
    }
    var init = CUtils.StrValue(ViewBag.init);
    var pageCur = CUtils.StrValue(ViewBag.PageCur);
    var pageCount = CUtils.StrValue(ViewBag.PageCount);
    var totalPage = "0";
    if (Model != null)
    {
        totalPage = CUtils.StrValue(Model.PageCount);
    }

    var showtext = "";
    if (Model.ItemCount > 0)
    {
        var recordstart = (Model.PageIndex) * Model.PageSize + 1;
        var recordend = (Model.PageIndex + 1) * Model.PageSize;
        if (recordend > Model.ItemCount)
        {
            recordend = Model.ItemCount;
        }
        showtext = recordstart + "-" + recordend + " trong số " + Model.ItemCount;
    }
    var userState = ViewBag.UserState as UserState;
    var viewid = string.Format("{0}_{1}_{2}_{3}", CUtils.StrValue(userState.SysUser.UserCode), CUtils.StrValue(ViewBag.SolutionCodeSignature), CUtils.StrValue(userState.Mst_NNT.OrgID), "Mst_Inventory_Mng");

}
<script>
    setAdminCurrentUrl('@Url.Action("Index", "Mst_UserMapInventory")');
</script>
<div class="col-12">
    <div class="row no-margin">
        <aside class="col-12 no-padding">
            @using (Html.BeginForm(null, null, FormMethod.Get, new { id = "manageForm", @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" id="viewid" name="viewid" value="@MvcHtmlString.Create(viewid)" />
                <input type="hidden" value="search" name="init" id="init" />
                <div class="layout-bot-top-16">
                    <div class="row">
                        <div class="col-6">
                            <span class="search-bar">
                                <input type="text" id="dynamic-table-thead-search" class="quicksearch dynamic-table-thead-search" name="search">
                                <input type="text" class="quicksearch1 dynamic-table-thead-search1" name="search" style="z-index: -1000; height: 0; padding: 0; margin: 0; border: 0">
                            </span>
                        </div>
                        <div class="col-6">
                            @if (CheckAccess("BTN_PHAN_QUYEN_KHO_TK"))
                            {
                                @Html.Partial("Pagination", null, new ViewDataDictionary() { { "PageCur", MvcHtmlString.Create(pageCur) }, { "RecordCount", MvcHtmlString.Create(Model.PageSize.ToString()) }, { "ShowText", showtext } })
                            }
                            <input type="hidden" value="@MvcHtmlString.Create(pageCur)" name="page" id="page" />
                            <input type="hidden" id="totalpage" value="@Model.PageCount" />
                        </div>
                    </div>
                </div>
            }
        </aside>
        <div class="col-12 panel-body no-padding" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
            <aside class="col-12 layout-table no-padding">
                @Html.AntiForgeryToken()
                <div class="scrollable-horizontal padding-left-0 padding-right-0" style="padding-top: 0!important;">
                    <div style="width: 100%; float: left;">
                        <table id="dynamic-table-thead" idn-datatable-id="dynamic-table-thead-tbody" class="table table-bordered table-thead table-cus table-bottom-0 no-margin">
                            <thead>
                                <tr class="trthead" filterroot="" bfilter="0">
                                    <th fieldId="CONTROL" fieldName="CONTROL" fieldActive="0" class="cell-50">&nbsp;</th>
                                    <th fieldId="STT" fieldName="STT" fieldActive="0" class="cell-50">@MvcHtmlString.Create("STT")</th>
                                    <th fieldId="INVCODE" fieldName="Mã kho" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-100">
                                        @("Mã kho".HtmlItemString("product"))
                                    </th>
                                    <th fieldId="INVNAME" fieldName="Tên kho" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-150">
                                        @("Tên kho".HtmlItemString("InvName"))
                                    </th>
                                    <th fieldId="INVCODEPARENT" fieldName="Mã kho cha" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-150">
                                        @("Mã kho cha".HtmlItemString("InvCodeParent"))
                                    </th>
                                    <th fieldId="INVADDRESS" fieldName="Địa chỉ" fieldActive="0" class="cell-200">
                                        @("Địa chỉ".HtmlItemString("InvAddress"))
                                    </th>
                                    <th fieldId="INVCONTACTNAME" fieldName="Người quản lý" fieldActive="0" class="cell-100">
                                        @("Người quản lý".HtmlItemString("InvContactName"))
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <div id="scrollable_1" class="scrollable" style="width: 100%; float: left">
                        <table id="dynamic-table-thead-tbody" class="table table-borderedtable-cus table-bottom-0 dynamic-table-tbody dynamic-table-thead-tbody no-margin">
                            <tbody id="table-tbodyID">
                                @if (Model != null && Model.DataList != null && Model.DataList.Count > 0)
                                {
                                    var idx = 0;
                                    foreach (var item in Model.DataList)
                                    {
                                        var iindex = startCount + (idx + 1);

                                        <tr idx="@idx" class="data-item trdata">
                                            <td fieldId="CONTROL" fieldActive="0" class="text-center cell-50">
                                                <div class="action-buttons padding-top-2">
                                                    @if (item.FlagActive.Equals("1"))
                                                    {
                                                        @RenderItemFormat("BTN_QL_NHOM_ND_GAN_ND_VAO_KHO", "<a href=\"javascript:;\" id=\"btnAddUserIn_MstInventory\" class=\"icon-freeze\" title=\"Gán người dùng vào kho\" onclick=\"GetUserMapInventory('" + item.InvCode + "')\"><i class=\"fas fa-users\"></i></a>", "", "")
                                                    }
                                                </div>
                                            </td>
                                            <td fieldId="STT" fieldActive="0" class="text-center cell-50">
                                                @MvcHtmlString.Create(iindex.ToString())
                                            </td>
                                            <td fieldId="INVCODE" fieldName="Mã kho" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-100">
                                                @(item.InvCode == null ? "" : item.InvCode)
                                            </td>
                                            <td fieldId="INVNAME" fieldName="Tên kho" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-150">
                                                @(item.InvName == null ? "" : item.InvName)
                                            </td>
                                            <td fieldId="INVCODEPARENT" fieldName="Mã kho cha" fieldActive="0" idn-data-type="T" idn-data-sort="1" idn-data-filter="1" class="cell-150">
                                                @(item.InvCodeParent == null ? "" : item.InvCodeParent)
                                            </td>
                                            <td fieldId="INVADDRESS" fieldName="Địa chỉ" fieldActive="0" class="cell-200">
                                                @(item.InvAddress == null ? "" : item.InvAddress)
                                            </td>
                                            <td fieldId="INVCONTACTNAME" fieldName="Người quản lý" fieldActive="0" class="cell-100">
                                                @(item.InvContactName == null ? "" : item.InvContactName)
                                            </td>
                                        </tr>
                                        idx++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </aside>
        </div>
    </div>
</div>


<table hidden>
    <tbody id="ListMst_UserMapInventory"></tbody>
</table>
<div class="modal fade" id="ShowPopup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
</div>

<script>

    function SearchData()
    {
        $('#manageForm').attr('action', '@Url.Action("Index", "Mst_UserMapInventory")').submit();
    }
    function CheckForm() {
        return true;
    }
    function ClosePopup() {
        $('#ShowPopup').html('');
        $('#ShowPopup').modal({
            backdrop: true,
            keyboard: false,
            show: false
        });
        $('#ShowPopup').removeClass('show');
        $('#ShowPopup').css('display', 'none');
    }
    function GetUserMapInventory(invCode) {
        debugger;
        var token = $('#manageForm input[name=__RequestVerificationToken]').val();
        $.ajax({
            url: '@Url.Action("GetUserMapInventory", "Mst_UserMapInventory")',
            data: {
                __RequestVerificationToken: token,
                invcode: invCode,
            },
            type: 'post',
            dataType: 'json',
            traditional: true,
            success: function (data) {
                debugger;
                if (data.Success) {
                        $("#ShowPopup").addClass('show');
                        $("#ShowPopup").css('display', 'block');
                        $('#ShowPopup').modal({
                            backdrop: false,
                            keyboard: true,
                        });
                        $("#ShowPopup").html(data.Html);
                } else {
                    showErrorDialog(data.Detail);
                }
            }
        });
    }

    function SaveData() {
        debugger;
        var check = CheckForm();
        if (check == false) return;
        var Lst_Mst_UserMapInventory = [];
        var invCode = $('#_InvCode').val();

        var lengCheck = $('#table-tbodyID-popup input.cl-check:checked').length;
        //if (lengCheck == 0) return;
        for (var i = 0; i < lengCheck; i++) {
            var checkbox = $('#table-tbodyID-popup input.cl-check:checked').eq(i);
            //var exist = checkbox.attr('exist');
            //if (exist == "0") {
            //}
            var userCode = checkbox.attr("usercode");
            var objUserMapInventory = new Object();
            objUserMapInventory.UserCode = userCode;
            objUserMapInventory.InvCode = invCode;
            Lst_Mst_UserMapInventory.push(objUserMapInventory);
        }

        var lstData = JSON.stringify(Lst_Mst_UserMapInventory);
        var token = $('#manageForm input[name=__RequestVerificationToken]').val();
        $.ajax({
            url: '@Url.Action("Mst_UserMapInventory_Save", "Mst_UserMapInventory")',
            data: {
                __RequestVerificationToken: token,
                lst_Mst_UserMapInventory: lstData,
            },
            type: 'post',
            dataType: 'json',
            traditional: true,
            success: function (data) {
                debugger;
                if (data.Success) {
                    alert(data.Messages);
                    if (data.RedirectUrl !== null) {
                        window.location.href = data.RedirectUrl;
                    }
                    ClosePopup();
                } else {
                    showErrorDialog(data.Detail);
                }
            }
        });
    }
</script>
<!-- #region table sort -->
<script>
    var initDefault = function () {
        $('#dynamic-table-thead').idnTable({
            searchTextbox: '#dynamic-table-thead-search', columnToggleButton: '#togglecolumn',
            cookieId: '#viewid',
        });
    };
    var initCustom = function () {
        var tb = $('#dynamic-table-thead').idnTable();

        $('#dynamic-table-thead-search').keyup(function () {
            var kw = $(this).val();
            tb.search(kw);
        });

        //tb.showColumns(['STT'], false);
        //tb.reload();
        var colList = tb.getAllColumns();
        $('#togglecolumn').html('');

        for (var i = 0; i < colList.length; ++i) {

            var col = colList[i];
            var fieldid = col.id;
            var title = col.name;

            if (title !== undefined && title !== null && title.toString().trim().length > 0) {
                title = title.toString().trim();
            } else {
                title = '';
            }

            var fieldactive = col.show;

            //B2: Sinh popup tùy chỉnh các cột trong bảng #dynamic-table-thead
            var $input = $('<input>');
            $input.attr('type', 'checkbox');
            $input.attr('name', fieldid);

            if (fieldactive === true) { //Nếu trạng thái bằng 0 cho hiện cột và checked ô input tương ứng
                $input.attr('checked', 'checked');

            }

            var $spaninput = $('<span>');
            $spaninput.append($input);
            $spaninput.css('margin-right', '10px');

            var $spantext = $('<span>');
            $spantext.text(title);

            var $li = $('<li>');
            $li.css('line-height', '19px');
            $li.css('margin-bottom', '18px');
            $li.append($spaninput);
            $li.append($spantext);

            $('#togglecolumn').append($li);

            $input.click(function () {
                if ($(this).is(':checked')) {
                    tb.showColumns([$(this).attr('name')], false);
                }
                else {
                    tb.hideColumns([$(this).attr('name')], false);
                }
            });
        }
    };
    $(document).ready(function () {
        initDefault();
        //initCustom();
    });
    $(document).ready(function () {
        (function ($) {
            var body = $('body');
            body.on('keyup', '#dynamic-table-thead-search', function () {
                var datafilter = $(this).val();
                if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                    datafilter = datafilter.toUpperCase().trim();
                }
                var rex = new RegExp($(this).val(), 'i');
                $('#table-tbodyID tr').hide();
                $('#table-tbodyID tr').filter(function () {
                    //debugger
                    var dataOfRow = $(this).text();
                    if (dataOfRow !== undefined && dataOfRow !== null && dataOfRow.toString().trim().length > 0) {
                        dataOfRow = dataOfRow.toUpperCase().trim();
                    }
                    if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                        return true;
                    }
                    else {
                        return false;
                    }
                }).show();
            });

        }(jQuery));

    });
    $(document).ready(function () {
        //debugger;
        var viewId = commonUtils.returnValueText('#viewid');
        if (!commonUtils.isNullOrEmpty(viewId)) {
            var cookie = commonUtils.getCookie(viewId);
            if (commonUtils.isNullOrEmpty(cookie)) {
                var cookieValue = 'CONTROL|STT|INVCODE|INVNAME|INVCODEPARENT|INVADDRESS|INVCONTACTNAME';
                commonUtils.setCookie(viewId, cookieValue, 10);
            }
        }
        initDefault();

        //initCustom();

    });
</script>
<!-- #endregion -->
<!-- #region cookies -->
<script>
    document.addEventListener('DOMContentLoaded',
        function () {
            //debugger;
            readCookies("Mst_InvInType");
            var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
            for (let checkbox of checkboxs) {
                checkbox.addEventListener('change', setCookie)
            }
        });

    function saveSelectedToCookie() {
        //debugger;
        setCookie("Mst_InvInType",
            {
                path: '/',
                expires: 10
            });
    }

    function setCookie(name, options = {}) {
        //debugger;
        var checkboxs = document.querySelectorAll('#togglecolumn.ulshowdata input[type="checkbox"]');
        var value = new Object();
        for (const ckb of checkboxs) {
            value[ckb.name] = ckb.checked === true ? "0" : "1";
        }
        let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(JSON.stringify(value));

        if (options.expires instanceof Date) {
            options.expires = options.expires.toUTCString();
        }

        for (let optionKey in options) {
            updatedCookie += "; " + optionKey;
            let optionValue = options[optionKey];
            if (optionValue !== true) {
                updatedCookie += "=" + optionValue;
            }
        }
        document.cookie = updatedCookie;
    }

    function readCookies(name) {
        //debugger;
        var result = document.cookie.match(new RegExp(name + '=([^;]+)'));
        result && (result = JSON.parse(decodeURIComponent(result[1])));
        if (result != null && result != undefined) {
            for (const key in result) {
                $('#dynamic-table-thead').find('th[fieldid="' + key + '"]').attr('fieldactive', result[key]);
            }
        }
    }
</script>
<!-- #endregion -->
