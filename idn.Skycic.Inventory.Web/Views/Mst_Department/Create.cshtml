@model Mst_Department
@{
    Layout = "~/Views/Shared/CoreLayoutQuanTri.cshtml";
    var title = "TẠO MỚI BỘ PHẬN/PHÒNG BAN";
    var titleMng = "Danh mục bộ phận/phòng ban";
    ViewBag.Title = title;
    var listMst_DepartmentUI = ViewBag.ListMst_DepartmentUI as List<Mst_DepartmentUI>;
    if (listMst_DepartmentUI == null || listMst_DepartmentUI.Count == 0)
    {
        listMst_DepartmentUI = new List<Mst_DepartmentUI>();
    }

    var listMst_NNT = ViewBag.ListMst_NNT as List<Mst_NNT>;
    if (listMst_NNT == null || listMst_NNT.Count == 0)
    {
        listMst_NNT = new List<Mst_NNT>();
    }
}

<div class="row no-margin">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="panel-group" id="steps">
            <div class="panel panel-info">
                <div class="title">
                    <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                </div>
                <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                    <aside class="row no-margin box-shadow-tk">
                        @using (Html.BeginForm("Create", "Mst_Department", FormMethod.Post, new { id = "manageForm", @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="col-xs-3 no-padding">
                                <div class="form-group margin-bottom-9">
                                    <label for="DepartmentCode" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã BP/PB <span style=\"color: red \">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="DepartmentCode" name="DepartmentCode" class="col-xs-12 DepartmentCode" onkeyup="locdau(this);" value="" autocomplete="off" required />
                                        </span>
                                    </div>

                                </div>
                            </div>
                            <div class="col-xs-3 no-padding">
                                <div class="form-group margin-bottom-9">
                                    <label for="DepartmentName" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên BP/PB <span style=\"color: red \">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="DepartmentName" name="DepartmentName" class="col-xs-12 DepartmentName" value="" autocomplete="off" required />
                                        </span>
                                    </div>

                                </div>
                            </div>
                            <div class="col-xs-3 no-padding">
                                <div class="form-group margin-bottom-9">
                                    <label for="DepartmentCodeParent" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("BP/PB quản lý <span style=\"color: red \">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <select id="DepartmentCodeParent" name="DepartmentCodeParent" class="col-xs-12 DepartmentCodeParent">
                                                <option value=""></option>
                                                @if (listMst_DepartmentUI != null && listMst_DepartmentUI.Count > 0)
                                                {
                                                    foreach (var item in listMst_DepartmentUI)
                                                    {
                                                        <option value="@MvcHtmlString.Create(item.DepartmentCode.ToString().Trim())" desc="@MvcHtmlString.Create(item.DepartmentName.ToString().Trim())">@MvcHtmlString.Create(item.HlevelTitle.ToString().Trim())</option>
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-3 no-padding">
                                <div class="form-group margin-bottom-9">
                                    <label for="MST" class="col-xs-12 col-sm-6 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã số thuế <span style=\"color: red \">*</span>")</label>
                                    <div class="col-xs-12 col-sm-6">
                                        <span class="block input-icon input-icon-right">
                                            <select id="MST" name="MST" class="col-xs-12 MST">
                                                <option value=""></option>
                                                @if (listMst_NNT != null && listMst_NNT.Count > 0)
                                                {
                                                    foreach (var item in listMst_NNT)
                                                    {
                                                        <option value="@MvcHtmlString.Create(item.MST.ToString().Trim())" desc="@MvcHtmlString.Create(item.MST.ToString().Trim())">@MvcHtmlString.Create(item.MST.ToString().Trim())</option>
                                                    }
                                                }
                                            </select>
                                        </span>
                                    </div>

                                </div>

                            </div>
                        }
                    </aside>
                    <div class="col-xs-12 no-padding">
                        <div class="clearfix">
                            <div class="row no-margin" style="float: right">
                                @RenderItemFormat("BTN_TAO_BPPB_LUU", "<a href=\"javascript:void();\" class=\"btn font-color mybtn-Button\" style=\"margin-top: 10px; padding-left: 15px!important; \" onclick=\"SaveData();\">Lưu</a>", "", "")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

<script type="text/javascript">
    processAjaxForm($('#manageForm'), function (response) {
        processAjaxFormResult(response);

    });
</script>

@*Active Menu*@
<script type="text/javascript">
    setAdminCurrentUrl('@Url.Action("Index", "Mst_Department")');
</script>

@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/Mst_Department.js")"></script>
    <script type="text/javascript">
        @*Active Menu*@
        setAdminCurrentUrl('@Url.Action("Index", "Mst_Department")');
        processAjaxForm($('#manageForm'), function (response) {
            processAjaxFormResult(response);
        });
        @* Set focus *@
        var _getForm = document.getElementById("manageForm");
        _getForm.addEventListener('reset', function () {
            document.getElementById("DepartmentCode").focus()
        })
        function SaveData() {
            debugger;
            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Create", "Mst_Department")';
            var objMst_Department = new Mst_Department();
            objMst_Department.ActionType = 'create';
            objMst_Department.ajaxSettings = ajaxSettings;
            objMst_Department.saveData();
        }
    </script>
}

@*<script>
    function CheckForm() {
        if (!CheckIsNullOrEmpty('#DepartmentCode', 'has-error-fix', '@MvcHtmlString.Create("Mã bộ phận/phòng ban không được trống!")'))
        {
            return false;
        }
        if (!CheckIsNullOrEmpty('#DepartmentName', 'has-error-fix', '@MvcHtmlString.Create("Tên bộ phận/phòng ban không được trống!")'))
        {
            return false;
        }
        if (!CheckIsNullOrEmpty('#DepartmentCodeParent', 'has-error-fix', '@MvcHtmlString.Create("Bộ phận/phòng ban quản lý không được trống!")'))
        {
            return false;
        }
        if (!CheckIsNullOrEmpty('#MST', 'has-error-fix', '@MvcHtmlString.Create("Mã đơn vị không được trống!")'))
        {
            return false;
        }
        return true;
    }

    function SaveData()
    {
        var check = CheckForm();

        if (check)
        {
            var departmentCode = ReturnValueText('#DepartmentCode');
            var departmentName = ReturnValueText('#DepartmentName');
            var departmentCodeParent = ReturnValueText('#DepartmentCodeParent');
            var mST = ReturnValueText('#MST');
            var tem = new Object();
            tem.DepartmentCode = departmentCode;
            tem.DepartmentName = departmentName;
            tem.DepartmentCodeParent = departmentCodeParent;
            tem.MST = mST;

            var token = $('#manageForm input[name=__RequestVerificationToken]').val();
            var modelCur = JSON.stringify(tem);
            var url = '@Url.Action("Create", "Mst_Department")';
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    __RequestVerificationToken: token
                    , model: modelCur
                },
                traditional: true,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Success) {
                        if (data.Messages !== null && data.Messages !== undefined && data.Messages.length > 0) {
                            alert(data.Messages[0]);
                        }
                        window.location.href = data.RedirectUrl;
                    }
                    else {
                        if (data.Detail != null) {
                            _showErrorMsg123("Lỗi!", data.Detail);
                        }
                    }
                }, error: function (xmlHttpRequest, textStatus, errorThrown) {
                    debugger;
                    if (textStatus === 'Unauthorized') {
                        alert('custom message. Error: ' + errorThrown);
                    } else {
                        //alert('custom message. Error2: ' + errorThrown);
                    }
                }
            });


        }
    }
</script>*@






