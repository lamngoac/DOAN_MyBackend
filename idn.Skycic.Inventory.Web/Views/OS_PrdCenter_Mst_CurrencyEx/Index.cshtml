@model PageInfo<Mst_CurrencyEx>
@{
    Layout = "~/Views/Shared/_LayoutQuantri.cshtml";
    var title = "DANH MỤC LOẠI TIỀN";
    ViewBag.Title = title;
    var startCount = 0;
    var strStartCount = ViewBag.StartCount as string;
    if (!CUtils.IsNullOrEmpty(strStartCount))
    {
        startCount = Convert.ToInt32(strStartCount);
    }
}

<div class="row no-margin">
    <div class="row no-margin">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            <div class="panel-group" id="steps">
                <div class="panel panel-info">
                    <div class="title">
                        <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                    </div>
                    <div class="panel-body no-padding" id="panel-body" style="">
                        <aside class="col-xs-12 no-padding layout-tk">
                            <a class="btn font-color mybtn-Button dropdown-toggle" data-toggle="dropdown" aria-expanded="false" style="float: right;font-size: 13px;margin-top: 20px;position: relative;">...</a>
                            <ul class="dropdown-menu" role="menu" style="">
                                <li>
                                    @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_NHAP_EXCEL", "<a class=\"mybtn-Button-1\" onclick=\"ShowPopupImportExcel()\" href=\"javascript:void(0);\" style=\"\"><img class=\"img-button\" src='" + Url.Content("~/Images/import.svg") + "'>Nhập Excel</a>", "", "")
                                </li>
                                <li>
                                    @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_XUAT_EXCEL", "<a class=\"mybtn-Button-1\" onclick=\"Export()\" href=\"javascript:void(0);\" style=\"\"><img class=\"img-button\" src='" + Url.Content("~/Images/export.svg") + "'>Xuất Excel</a>", "", "")
                                </li>
                                <li>
                                    @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_XUAT_EXCEL_TEM", "<a class=\"mybtn-Button-1\" onclick=\"ExportTemplate()\" href=\"javascript:void(0);\" style=\"\"><img class=\"img-button\" src='" + Url.Content("~/Images/export.svg") + "'>Xuất Excel template</a>", "", "")
                                </li>
                            </ul>
                            @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_TAO", "<a class=\"btn font-color mybtn-Button\" href=\"" + Url.Action("Create", "OS_PrdCenter_Mst_CurrencyEx") + "\" style=\"float: right;font-size: 13px; margin-top: 20px;margin-right: 10px; \"><img class=\"img-button in-acti\" src='" + Url.Content("~/Images/Hoadon/Tao.svg") + "'><img class=\"img-button acti\" src='" + Url.Content("~/Images/Hoadon/Tao.svg") + "'>Tạo</a>", "", "")

                        </aside>
                    </div>
                </div>
                <div class="panel panel-info">
                    <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                        @Html.AntiForgeryToken()
                        <aside class="col-xs-12 no-padding">
                            <div class="scrollable-horizontal padding-left-0 padding-right-0 div-scrollable" style="padding-top: 0!important;">
                                <div>
                                    <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0">
                                        <thead>
                                            <tr>
                                                <th class="text-center cell-50">@MvcHtmlString.Create("TT")</th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Mã loại tiền")
                                                </th>
                                                <th class="text-center cell-120">
                                                    @MvcHtmlString.Create("Tên loại tiền")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Loại tiền gốc")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Tỉ giá mua")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Tỉ giá bán")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Thời điểm cập nhật")
                                                </th>
                                                <th class="text-center cell-150">
                                                    @MvcHtmlString.Create("Nguồn lấy tỉ giá")
                                                </th>
                                                <th class="cell-120">&nbsp;</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                                <div class="scrollable" data-size="430" style="width: 100%; float: left;">
                                    <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0">

                                        <tbody id="table-tbodyID">
                                            @if (Model != null && Model.DataList != null && Model.DataList.Count > 0)
                                            {
                                                var idx = 0;
                                                foreach (var item in Model.DataList)
                                                {
                                                    var iindex = startCount + (idx + 1);
                                                    var currencyCode = "";
                                                    if (!CUtils.IsNullOrEmpty(item.CurrencyCode))
                                                    {
                                                        currencyCode = CUtils.StrValueOrNull(item.CurrencyCode);
                                                    }
                                                    var currencyName = "";
                                                    if (!CUtils.IsNullOrEmpty(item.CurrencyName))
                                                    {
                                                        currencyName = CUtils.StrValueOrNull(item.CurrencyName);
                                                    }
                                                    var baseCurrencyCode = "";
                                                    if (!CUtils.IsNullOrEmpty(item.BaseCurrencyCode))
                                                    {
                                                        baseCurrencyCode = CUtils.StrValueOrNull(item.BaseCurrencyCode);
                                                    }
                                                    var buyRate = "";
                                                    if (!CUtils.IsNullOrEmpty(item.BuyRate) && CUtils.IsNumeric(item.BuyRate))
                                                    {
                                                        buyRate = CUtils.formatNumeric(Convert.ToDouble(CUtils.StrValueOrNull(item.BuyRate)), Nonsense.NUMERIC_DB_FORMAT);
                                                    }
                                                    var sellRate = "";
                                                    if (!CUtils.IsNullOrEmpty(item.SellRate) && CUtils.IsNumeric(item.SellRate))
                                                    {
                                                        sellRate = CUtils.formatNumeric(Convert.ToDouble(CUtils.StrValueOrNull(item.SellRate)), Nonsense.NUMERIC_DB_FORMAT);
                                                    }
                                                    var updatedTime = "";
                                                    if (!CUtils.IsNullOrEmpty(item.SellRate) && CUtils.IsDateTime(item.UpdatedTime))
                                                    {
                                                        updatedTime = CUtils.FormatDate(CUtils.StrValueOrNull(item.UpdatedTime), Nonsense.DATE_TIME_FULL_DB_FORMAT);
                                                    }
                                                    var interEx = "";
                                                    if (!CUtils.IsNullOrEmpty(item.InterEx))
                                                    {
                                                        interEx = CUtils.StrValueOrNull(item.InterEx);
                                                    }
                                                    <tr idx="@idx" class="data-item trdata">
                                                        <td class="text-center cell-50" style="background: #D3EDE4;">
                                                            @MvcHtmlString.Create(iindex.ToString())
                                                        </td>
                                                        <td class="text-center cell-120">
                                                            @MvcHtmlString.Create(currencyCode)
                                                        </td>
                                                        <td class="text-center cell-120">
                                                            @MvcHtmlString.Create(currencyName)
                                                        </td>
                                                        <td class="text-center cell-150">
                                                            @MvcHtmlString.Create(baseCurrencyCode)
                                                        </td>
                                                        <td class="text-center cell-150">
                                                            @MvcHtmlString.Create(buyRate)
                                                        </td>
                                                        <td class="text-center cell-150">
                                                            @MvcHtmlString.Create(sellRate)
                                                        </td>
                                                        <td class="text-center cell-150">
                                                            @MvcHtmlString.Create(updatedTime)
                                                        </td>
                                                        <td class="text-center cell-150">
                                                            @MvcHtmlString.Create(interEx)
                                                        </td>
                                                        <td class="text-center cell-120">
                                                            <div class="action-buttons padding-top-2">
                                                                @{
                                                                    var urlDetail = Url.Action("Detail", "OS_PrdCenter_Mst_CurrencyEx", new { currencycode = item.CurrencyCode });
                                                                    var urlUpdate = Url.Action("Update", "OS_PrdCenter_Mst_CurrencyEx", new { currencycode = item.CurrencyCode });

                                                                }
                                                                @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_CHI_TIET", "<a class=\"icon-detail\" href=\'" + urlDetail + "\' title=\"Chi tiết\"><img class=\"img-icon\" src='" + Url.Content("~/Images/Xem.svg") + "'></a>", "", "")
                                                                @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_SUA", "<a class=\"icon-edit\" href=\'" + urlUpdate + "\' title=\"Sửa\"><img class=\"img-icon\" src='" + Url.Content("~/Images/Sua.svg") + "'></a>", "", "")
                                                                @RenderItemFormat("BTN_QL_OS_PRDCENTER_MST_CURRENCYEX_XOA", "<a href=\"javascript:;\" class=\"icon-delete\" title=\"Xóa\" onclick=\"Delete('" + item.CurrencyCode.ToString() + "','" + item.CurrencyName.ToString() + "')\"><img class=\"img-icon\" src='" + Url.Content("~/Images/Xoa.svg") + "'></a>", "", "")
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    idx++;
                                                }
                                            }


                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </aside>
                    </div>

                </div>
            </div>
        </div>
        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

@*Import Excel*@
<div class="modal fade" id="ImportExcelModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true"></div>

@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/OS_PrdCenter_Mst_CurrencyEx.js")"></script>
    <script type="text/javascript">
        @* Active Menu *@
        setAdminCurrentUrl('@Url.Action("Index", "OS_PrdCenter_Mst_CurrencyEx")');

        @* keypress *@
        $(document).on('keypress', function (e) {
            if (e.which == 13) {
                Search();
            }
        });

        var objOS_PrdCenter_Mst_CurrencyEx = new OS_PrdCenter_Mst_CurrencyEx();
        var objCommonExcel = new CommonExcel();
        var objVariablesInit = {
            Id_FormMain: '',
            Id_FormImportExcel: 'manageFormImportExcel',
            Id_Modal: 'ImportExcelModal',
            Id_FileInput: 'file',
        };

        var ajaxSettings_Excel = {};
        ajaxSettings_Excel.Type = 'post';
        ajaxSettings_Excel.DataType = 'json';

        function ShowPopupImportExcel() {
            ajaxSettings_Excel.Url = '@Url.Action("ShowPopupImportExcel", "Admin")';

            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings_Excel;
            objCommonExcel.variablesInit(objVariablesInit);
            objCommonExcel.showPopupImportExcel();
        }

        function ImportFileExcel() {
            ajaxSettings_Excel.Url = '@Url.Action("Import", "OS_PrdCenter_Mst_CurrencyEx")';

            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings_Excel;
            objCommonExcel.variablesInit(objVariablesInit);
            objCommonExcel.importFileExcel();
        }

        function ExportTemplate() {
            ajaxSettings_Excel.Url = '@Url.Action("ExportTemplate", "OS_PrdCenter_Mst_CurrencyEx")';

            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings_Excel;
            objCommonExcel.exportExcel();
        }

        function Export() {
            ajaxSettings_Excel.Url = '@Url.Action("Export", "OS_PrdCenter_Mst_CurrencyEx")';

            objCommonExcel.ajaxSettingsInit();
            objCommonExcel.ajaxSettings = ajaxSettings_Excel;
            var unitcode = 'c';
            var unitname = '';
            var ListSearchInput = [
                { Key: 'UnitCode', Value: unitcode },
                { Key: 'UnitName', Value: unitname },
            ];

            objCommonExcel.exportExcel(ListSearchInput);
        }

        function Delete(currencycode, currencyname) {
            var objOS_PrdCenter_Mst_CurrencyEx_Delete = {
                CurrencyCode: currencycode,
                CurrencyName: currencyname,
            };

            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Delete", "OS_PrdCenter_Mst_CurrencyEx")';

            objOS_PrdCenter_Mst_CurrencyEx.Image_Message = "<img id=\"exclamation-circle\" style=\"width: 35px; float: left; margin-right: 10px\" src=\"@Url.Content("~/Images/exclamation-circle-solid.svg")\"> THÔNG BÁO";
            objOS_PrdCenter_Mst_CurrencyEx.Confirm_Message = "Đồng ý xóa loại tiền '" + currencyname + "' ?";
            objOS_PrdCenter_Mst_CurrencyEx.ajaxSettings = ajaxSettings;
            objOS_PrdCenter_Mst_CurrencyEx.deleteData(objOS_PrdCenter_Mst_CurrencyEx_Delete);
        }



        @* Scroll *@
        $(document).ready(function () {
            $('.scrollable-horizontal').each(function () {
                var $this = $(this);
                $(this).ace_scroll(
                    {
                        horizontal: true,
                        //styleClass: 'scroll-top',//show the scrollbars on top(default is bottom)
                        size: $this.attr('data-size') || 6500,
                        mouseWheelLock: true
                    }
                ).css({ 'padding-top': 0 });
            });
        });
        $('.scrollable').each(function () {
            var $this = $(this);
            $(this).ace_scroll({
                //size: 500,
                size: $this.attr('data-size') || 1000,
                mouseWheelLock: true
                //styleClass: 'scroll-left scroll-margin scroll-thin scroll-dark scroll-light no-track scroll-visible'
            });
        });
    </script>
}
