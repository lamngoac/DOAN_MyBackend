
@model Sys_User
@{
    /**/

    Layout = "~/Views/Shared/CoreLayoutQuanTri.cshtml";
    var title = "SỬA NGƯỜI DÙNG";
    var titleMng = "Quản lý người dùng";
    ViewBag.Title = title;
    var ListMst_Department = ViewBag.ListMst_Department as List<Mst_Department>;

    var disablecheck = "";
    if (ViewBag.IsSysAdmin == "0")
    {
        disablecheck = "disabled-checkbox-fix";
    }
}
<script type="text/javascript">
    var parents = new Array();
    parents.push("@Url.Action("Index", "Sys_User")");
    parents.push("");
    var parentsText = new Array();
    parentsText.push("@MvcHtmlString.Create(titleMng)");
    parentsText.push("@MvcHtmlString.Create(title)");
    setAdminCurrentTag(parents, parentsText);
</script>

<div class="row no-margin">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="panel-group" id="steps">
            <div class="panel panel-info">
                @*<div class="title">
                        <p style="vertical-align: bottom">@MvcHtmlString.Create(title)</p>
                    </div>*@
                <div class="panel-body" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                    <aside class="row no-margin box-shadow-tk">
                        @using (Html.BeginForm("Update", "Sys_User", FormMethod.Post, new { id = "manageForm", @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="col-xs-4 no-padding">
                                <div class="form-group  margin-bottom-9">
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã người dùng <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="UserCode" name="UserCode" class="col-xs-12 disabled-fix UserCode" value="@if (Model != null && Model.UserCode != null){@MvcHtmlString.Create(Model.UserCode.ToString())} else { @("")}" autocomplete="off" required />
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group  margin-bottom-9">
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Tên người dùng <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="UserName" name="UserName" class="col-xs-12 UserName" value="@if (Model != null && Model.UserName != null){@MvcHtmlString.Create(Model.UserName.ToString())} else { @("")}" autocomplete="off" required />
                                        </span>
                                    </div>

                                </div>
                                <div class="form-group  margin-bottom-9">
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Điện thoại")</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="PhoneNo" name="PhoneNo" maxlength="11" class="col-xs-12 PhoneNo" onKeyPress="return isNumberKey(event)" value="@if (Model != null && Model.PhoneNo != null){@MvcHtmlString.Create(Model.PhoneNo.ToString())} else { @("")}" autocomplete="off" />
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-4 no-padding">
                                <div class="form-group  margin-bottom-9">
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Trực thuộc đơn vị <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <input type="text" id="MST" name="MST" class="col-xs-12 MST disabled-fix" value="@if (Model != null && Model.MST != null){@MvcHtmlString.Create(Model.MST.ToString())} else { @("")}" autocomplete="off" required />
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group  margin-bottom-9">
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Bộ phận/phòng ban <span style=\"color: red\">*</span>")</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right">
                                            <select id="DepartmentCode" name="DepartmentCode" class="col-xs-12 disabled-fix">
                                                <option></option>
                                                @{
                                                    if (ListMst_Department != null)
                                                    {
                                                        foreach (var it in ListMst_Department)
                                                        {
                                                            var departmentCode = "";
                                                            if (Model != null && !CUtils.IsNullOrEmpty(Model.DepartmentCode))
                                                            {
                                                                departmentCode = Model.DepartmentCode.ToString().Trim();
                                                            }
                                                            <option value="@it.DepartmentCode" @(departmentCode.Equals(it.DepartmentCode.ToString().Trim()) ? "selected" : "")> @MvcHtmlString.Create(it.DepartmentCode + " - " + it.DepartmentName)</option>
                                                        }
                                                    }
                                                }
                                            </select>
                                            @*<input type="text" id="DepartmentCode" name="DepartmentCode" class="col-xs-12 disabled-fix DepartmentCode"  value="@if (Model != null && Model.DepartmentCode != null){@MvcHtmlString.Create(Model.DepartmentCode.ToString())} else { @("")}" autocomplete="off" required />*@
                                        </span>
                                    </div>

                                </div>
                                <div class="form-group  margin-bottom-9">
                                    @{
                                        var checkActive = "";
                                        if (Model != null && Model.FlagActive.Equals("1"))
                                        {
                                            checkActive = "checked";
                                        }
                                        else
                                        {
                                            checkActive = "";
                                        }
                                    }
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">Trạng thái</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right padding-top-5">
                                            <label>
                                                <input name="FlagActive" id="FlagActive" class="ace ace-switch ace-switch-4 FlagActive" type="checkbox" value="1" @checkActive />
                                                <span class="lbl"></span>
                                                <input name="FlagActive" type="hidden" value="1" />
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-4 no-padding">
                                <div class="form-group  margin-bottom-9">
                                    @{
                                        var checkFlagSysAdmin = "";
                                        if (Model != null && Model.FlagSysAdmin.Equals("1"))
                                        {
                                            checkFlagSysAdmin = "checked";
                                        }
                                        else
                                        {
                                            checkFlagSysAdmin = "";
                                        }
                                    }
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">Cờ Quản trị HT</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right padding-top-5">
                                            <label class="@disablecheck">
                                                <input name="FlagSysAdmin" id="FlagSysAdmin" class="ace ace-switch ace-switch-4 FlagSysAdmin" type="checkbox" value="1" @checkFlagSysAdmin />
                                                <span class="lbl"></span>
                                                <input name="FlagSysAdmin" type="hidden" value="0" />
                                            </label>
                                        </span>
                                    </div>
                                </div>
                                <div class="form-group  margin-bottom-9">
                                    @{
                                        var checkFlagNNTAdmin = "";
                                        if (Model != null && Model.FlagNNTAdmin.Equals("1"))
                                        {
                                            checkFlagNNTAdmin = "checked";
                                        }
                                        else
                                        {
                                            checkFlagNNTAdmin = "";
                                        }
                                    }
                                    <label for="" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">Cờ Quản trị đơn vị</label>
                                    <div class="col-xs-12 col-sm-8">
                                        <span class="block input-icon input-icon-right padding-top-5">
                                            <label class="@disablecheck">
                                                <input name="FlagNNTAdmin" id="FlagNNTAdmin" class="ace ace-switch ace-switch-4 FlagNNTAdmin" type="checkbox" value="1" @checkFlagNNTAdmin />
                                                <span class="lbl"></span>
                                                <input name="FlagNNTAdmin" type="hidden" value="0" />
                                            </label>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        }
                    </aside>
                    <div class="col-xs-12">
                        <div class="clearfix">
                            <div class="row no-margin" style="float: right">
                                @*<a href="javascript:void(0);" class="btn font-color mybtn-Button" style="margin-left: 10px; padding-left: 15px!important; padding-right: 15px!important; " onclick="SaveData();"><i class="ace-icon fa fa-floppy-o bigger-110"></i>Lưu</a>*@
                                @RenderItemFormat("BTN_CAP_NHAT_NGUOI_DUNG_LUU", "<a href=\"javascript: void(0); \" class=\"btn font-color mybtn-Button\" style=\"margin-top: 20px; padding-left: 15px!important; padding-right: 15px!important;\" onclick=\"SaveData();\">Lưu</a>", "", "")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

<script type="text/javascript">
    processAjaxForm($('#manageForm'), function (response) {
        processAjaxFormResult(response);

    });
</script>

@*Active Menu*@
<script type="text/javascript">
    setAdminCurrentUrl('@Url.Action("Index", "Sys_User")');
</script>
@*Set focus*@
<script>
    var _getForm = document.getElementById("manageForm");
    _getForm.addEventListener('reset', function () {
        document.getElementById("UserName").focus();
    });
</script>

<script>
     function CheckForm() {
         if (!CheckIsNullOrEmpty('#UserCode',
             'has-error-fix',
             '@MvcHtmlString.Create("Mã người dùng không được trống!")')) {
             return false;
         } else {
             var usercode = $('#UserCode').val();
             if (!IsNullOrEmpty(usercode)) {
                 if (!ValidateEmail(usercode)) {
                     AddClassCss('#UserCode', 'has-error-fix');
                     $('#Email').focus();
                     alert('@MvcHtmlString.Create("Mã người dùng không hợp lệ!")');
                     return false;
                 }
                 else {
                     RemoveClassCss('#UserCode', 'has-error-fix');
                 }
             }
         }
         if (!CheckIsNullOrEmpty('#UserName', 'has-error-fix', '@MvcHtmlString.Create("Tên người dùng không được trống!")'))
         {
             return false;
         }
         if (!CheckIsNullOrEmpty('#MST', 'has-error-fix', '@MvcHtmlString.Create("Trực thuộc đơn vị không được trống!")'))
         {
             return false;
         }
         if (!CheckIsNullOrEmpty('#DepartmentCode', 'has-error-fix', '@MvcHtmlString.Create("Bộ phận/phòng ban không được trống!")'))
         {
             return false;
         }

        return true;
     }

    function ReturnValueText(thiz) {
        var a = $(thiz).val();
        if (a == undefined) return "";
        return a;
    }

    function SaveData()
    {
        debugger;
        var check = CheckForm();

        if (check)
        {
            var userCode = ReturnValueText('#UserCode');
            var userName = ReturnValueText('#UserName');
            var mst = ReturnValueText('#MST');
            var departmentCode = ReturnValueText('#DepartmentCode');
            var phoneNo = ReturnValueText('#PhoneNo');

            var flagNNTAdmin = '0';
            var inputFlagNNTAdmin = $('#FlagNNTAdmin');
            if (inputFlagNNTAdmin !== undefined && inputFlagNNTAdmin !== null) {
                if (inputFlagNNTAdmin.prop('checked')) {
                    flagNNTAdmin = '1';
                }
            }

            var flagSysAdmin = '0';
            var inputFlagSysAdmin = $('#FlagSysAdmin');
            if (inputFlagSysAdmin !== undefined && inputFlagSysAdmin !== null) {
                if (inputFlagSysAdmin.prop('checked')) {
                    flagSysAdmin = '1';
                }
            }

            var flagActive = '0';
            var inputFlagActive = $('#FlagActive');
            if (inputFlagActive !== undefined && inputFlagActive !== null) {
                if (inputFlagActive.prop('checked')) {
                    flagActive = '1';
                }
            }
            var tem = new Object();
            tem.UserCode = userCode;
            tem.UserName = userName;
            tem.MST = mst;
            tem.DepartmentCode = departmentCode;
            tem.PhoneNo = phoneNo;
            tem.FlagNNTAdmin = flagNNTAdmin;
            tem.FlagSysAdmin = flagSysAdmin;
            tem.FlagActive = flagActive;

            var token = $('#manageForm input[name=__RequestVerificationToken]').val();
            var modelCur = JSON.stringify(tem);
            var url = '@Url.Action("Edit", "Sys_User")';
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    __RequestVerificationToken: token
                    , model: modelCur
                },
                traditional: true,
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.Success) {
                        if (data.Messages !== null && data.Messages !== undefined && data.Messages.length > 0) {
                            alert(data.Messages[0]);
                        }
                        window.location.href = data.RedirectUrl;
                    }
                    else {
                        if (data.Detail != null) {
                            _showErrorMsg123("Lỗi!", data.Detail);
                        }
                    }
                }, error: function (xmlHttpRequest, textStatus, errorThrown) {
                    debugger;
                    if (textStatus === 'Unauthorized') {
                        alert('custom message. Error: ' + errorThrown);
                    } else {
                        //alert('custom message. Error2: ' + errorThrown);
                    }
                }
            });


        }
    }
</script>


@section Scripts{
    <script src="@Url.Content("~/Scripts/mine/Sys_User.js")"></script>
    <script type="text/javascript">
        @*Active Menu*@
        setAdminCurrentUrl('@Url.Action("Index", "Sys_User")');

        processAjaxForm($('#manageForm'), function (response) {
            processAjaxFormResult(response);

        });
    @* Set focus *@
    var _getForm = document.getElementById("manageForm");
    _getForm.addEventListener('reset', function () {
        document.getElementById("UserCode").focus();
    });
        @* Set focus *@
        $(document).ready(function () {
            $('#UserCode').focus();
        });
        function SaveData() {
            var ajaxSettings = {};
            ajaxSettings.Type = 'post';
            ajaxSettings.DataType = 'json';
            ajaxSettings.Url = '@Url.Action("Edit", "Sys_User")';
            var objSys_User = new Sys_User();
            objSys_User.ActionType = 'edit';
            objSys_User.ajaxSettings = ajaxSettings;
            objSys_User.saveData();
        }
    </script>
}








