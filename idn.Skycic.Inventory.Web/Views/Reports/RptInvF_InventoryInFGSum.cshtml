@using System.Diagnostics;
@using idn.Skycic.Inventory.Common.Models;
@model List<Rpt_InvFInventoryInFGSum>
@{
    Layout = "~/Views/Shared/CoreLayoutBaoCao.cshtml";
    ViewBag.Title = "BÁO CÁO NHẬP KHO";

    var fromdate = ViewBag.FromDate as string;
    var listPart = ViewBag.ListPart as List<Mst_Part>;
    var startCount = 0;
    var strStartCount = ViewBag.StartCount as string;
    if (!CUtils.IsNullOrEmpty(strStartCount))
    {
        startCount = Convert.ToInt32(strStartCount);
    }
    var offset = ViewBag.Offset;
}
<script src="~/Scripts/mine/invoice.js"></script>
<script src="~/Scripts/mine/download.js"></script>
<div class="row no-margin">
    <div class="col-xs-12">
        <!-- PAGE CONTENT BEGINS -->
        <div class="panel-group" id="steps">
            <div class="panel panel-info">
                <div class="panel-body no-padding" id="panel-body" style="padding-left: 0px; padding-right: 0px;">
                    <div class="col-xs-12 layout-search layout-bot-top-16">
                        @using (Html.BeginForm("RptInvF_InventoryInFGSum", "Reports", FormMethod.Get, new { id = "manageForm", @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <div class="col-xs-12 layout-search">
                                <div>
                                    <input hidden id="init" name="init" value="search" />
                                    <div class="col-xs-4">
                                        <div class="form-group margin-bottom-9">
                                            <label for="" class="col-xs-4 col-sm-4 control-label font-weight-500">@MvcHtmlString.Create("Ngày duyệt từ <span style=\"color: red; \">*</span>")</label>
                                            <div class="col-xs-8 col-sm-8">
                                                <div class="col-xs-12" style="padding-left: 0;padding-right: 17px;">
                                                    <div class="input-group" id="dtfromdate">
                                                        <input type="text" id="fromdate" name="fromdate" class="col-xs-12 fromdate" data-date-format="yyyy-mm-dd" value="@MvcHtmlString.Create(fromdate)" autocomplete="off" />
                                                        <span class="input-group-addon">
                                                            <i class="far fa-calendar-alt"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group margin-bottom-9">

                                            <label for="" class="col-xs-4 col-sm-4 control-label font-weight-500">@MvcHtmlString.Create("đến <span style=\"color: red; \">*</span>")</label>
                                            <div class="col-xs-8 col-sm-8">
                                                <div class="col-xs-12" style="padding-left: 0;padding-right: 17px;">
                                                    <div class="input-group" id="dttodate">
                                                        <input type="text" id="todate" name="todate" class="col-xs-12 todate" data-date-format="yyyy-mm-dd" value="@MvcHtmlString.Create(Request["todate"] == null ? "" : Request["todate"])" autocomplete="off" />
                                                        <span class="input-group-addon">
                                                            <i class="far fa-calendar-alt"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group margin-bottom-9">
                                            <label for="SourceInvoiceCode" class="col-xs-12 col-sm-4 control-label no-padding-right font-weight-500 ">@MvcHtmlString.Create("Mã sản phẩm")</label>
                                            <div class="col-xs-12 col-sm-8">
                                                <span class="block input-icon input-icon-right">
                                                    <select id="partcode" name="partcode" class="col-xs-12">
                                                        @{
                                                            var partcode = Request["partcode"] == null ? "" : Request["partcode"];
                                                        }
                                                        @if (listPart != null && listPart.Count > 0)
                                                        {
                                                            <option value="Tất cả">Tất cả</option>
                                                            foreach (var item in listPart)
                                                            {
                                                                <option value="@MvcHtmlString.Create(item.PartCode.ToString().Trim())" desc="@MvcHtmlString.Create(item.PartCode.ToString().Trim())" @(partcode.Equals(item.PartCode.ToString().Trim()) ? "selected" : "")>@MvcHtmlString.Create(item.PartCode.ToString().Trim())</option>
                                                            }
                                                        }
                                                    </select>
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="button-tk">
                                        <div class="form-group margin-bottom-9">
                                            <div class="col-xs-12 col-sm-8">
                                                <span class="block input-icon input-icon-right">
                                                    @RenderItemFormat("BTN_BAO_CAO_NHAP_KHO_TK", "<a class=\"btn font-color mybtn-Button\" onclick=\"Search()\" href=\"javascript:void(0);\" style=\" \"><img class=\"img-button\" src='" + Url.Content("~/Images/search.svg") + "'></a>", "", "")
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 no-padding" style="margin: 10px 0">
                                        @RenderItemFormat("BTN_BAO_CAO_NHAP_KHO_EXCEL", "<a class=\"btn btn-nc-button\" onclick=\"Export()\" href=\"javascript:void(0);\" style=\"box-shadow: 0 2px 4px rgba(0,0,0,.2);color:#057d5a\" title=\"Xuất excel\"><i class=\"fa fa-upload\" aria-hidden=\"true\"></i> Xuất excel</a>", "", "")
                                        <span class="search-bar">
                                            <input type="text" id="txtSearchObj" class="quicksearch txtSearchObj" name="search">
                                            <input type="text" class="quicksearch1 txtSearchObj1" name="search" style="z-index: -1000; height: 0; padding: 0; margin: 0; border: 0">
                                        </span>
                                        @*@Html.Partial("Pagination", null, new ViewDataDictionary() { { "PageCur", MvcHtmlString.Create("1") }, { "PageCount", MvcHtmlString.Create(Model.PageCount.ToString()) }, { "ShowText", showtext } })*@
                                    </div>
                                </div>
                            </div>

                        }
                    </div>
                </div>
                <div class="panel-body no-padding" id="panel-body">
                    @Html.AntiForgeryToken()
                    <aside class="col-xs-12 layout-table no-padding">
                        <div class="scrollable-horizontal padding-left-0 padding-right-0 div-scrollable" style="padding-top: 0!important;">
                            <div style="width: 100%; float: left;">
                                <table id="dynamic-table-thead" class="table table-bordered table-thead table-cus table-bottom-0 no-margin">
                                    <thead>
                                        <tr class="trthead">

                                            <th class=" cell-50">@MvcHtmlString.Create("TT")</th>
                                            <th fieldId="INVCODE" sorttype="T" class="cell-100">
                                                @MvcHtmlString.Create("Kho")
                                            </th>
                                            <th fieldId="PARTCODE" sorttype="T" class=" cell-100">
                                                @MvcHtmlString.Create("Mã sản phẩm")
                                            </th>
                                            <th fieldId="PARTNAME" sorttype="T" class=" cell-100">
                                                @MvcHtmlString.Create("Tên sản phẩm")
                                            </th>
                                            <th class=" cell-100">
                                                @MvcHtmlString.Create("Số lượng nhập")
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            <div id="scrollable_1" class="scrollable" style="width: 100%; float: left">
                                <table id="dynamic-table-thead-tbody" class="table table-borderedtable-cus table-bottom-0 dynamic-table-tbody dynamic-table-thead-tbody">
                                    <tbody id="table-tbodyID">
                                        @if (Model != null && Model.Count > 0)
                                        {
                                            var i = 1;
                                            foreach (var item in Model)
                                            {
                                                <tr class="data-item trdata">
                                                    <td class="text-center cell-50">@i</td>
                                                    <td fieldId="INVCODE" class="cell-100">@item.InvCode</td>
                                                    <td fieldId="PARTCODE" class="cell-100">@item.PartCode</td>
                                                    <td fieldId="PARTNAME" class="cell-100">@item.PartName</td>
                                                    <td class="cell-100">@item.TotalQtyIn</td>
                                                </tr>
                                                i++;
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </aside>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- PAGE CONTENT ENDS -->
</div><!-- /.row -->

@section Scripts{
    <script type="text/javascript">
        @*Active Menu*@
        setAdminCurrentUrl('@Url.Action("RptInvF_InventoryInFGSum", "Reports")');

        $('.scrollable').each(function () {
            var $this = $(this);
            $(this).ace_scroll({
                //size: 500,
                size: $this.attr('data-size') || 1000,
                mouseWheelLock: true
                //styleClass: 'scroll-left scroll-margin scroll-thin scroll-dark scroll-light no-track scroll-visible'
            });
        });

        @* keypress *@
        $(document).on('keypress', function (e) {
            if (e.which == 13) {
                Search();
            }
        });
        $(document).ready(function () {
            //datepicker plugin
            $('#fromdate, #todate').datepicker({
                autoclose: true,
                todayHighlight: true,
                dateFormat: 'yy-mm-dd'

            })
                //show datepicker when clicking on the icon
                .next().on(ace.click_event, function () {
                    $(this).prev().focus();
                });
        });
        function CheckForm() {
            if (!commonUtils.checkElementIsNullOrEmpty('#fromdate', 'has-error-fix', 'Bạn cần chọn ngày từ!')) {
                return false;
            }
            if (!commonUtils.checkElementIsNullOrEmpty('#todate', 'has-error-fix', 'Bạn cần chọn ngày đến!')) {
                return false;
            }
            var fdateCur = $('#fromdate').val();
            var tdateCur = $('#todate').val();
            if (!commonUtils.isNullOrEmpty(fdateCur) && !commonUtils.isNullOrEmpty(tdateCur)) {

                if (commonUtils.checkDate(fdateCur)) {
                    if (commonUtils.checkDate(tdateCur)) {
                        if (commonUtils.compareTwoDates(fdateCur, tdateCur)) {
                            $('#todate').focus();
                            commonUtils.addClassCss('#todate', 'has-error-fix');
                            alert('Ngày đến >= ngày từ!');
                            return false;
                        }
                        else {
                            commonUtils.removeClassCss('#todate', 'has-error-fix');
                        }
                    }
                    else {
                        $('#todate').focus();
                        commonUtils.addClassCss('#todate', 'has-error-fix');
                        alert('Ngày đến không hợp lệ!');
                        return false;
                    }

                }
                else {
                    $('#fromdate').focus();
                    commonUtils.addClassCss('#fromdate', 'has-error-fix');
                    alert('Ngày từ không hợp lệ!');
                    return false;
                }
            }
            return true;
        }
        function Search()
        {
            if (CheckForm()) {
                $('#manageForm').attr('action', '@Url.Action("RptInvF_InventoryInFGSum", "Reports")').submit();
            }
        }
        var objCommonExcel = new CommonExcel();
        var objVariablesInit = {
            Id_FormMain: '',
            Id_FormImportExcel: 'manageFormImportExcel',
            Id_Modal: 'ImportExcelModal',
            Id_FileInput: 'file',
        };

        var ajaxSettings_Excel = {};
        ajaxSettings_Excel.Type = 'post';
        ajaxSettings_Excel.DataType = 'json';

        function Export() {
            ajaxSettings_Excel.Url = '@Url.Action("ExportRptInvF_InventoryInFGSum", "Reports")';
            var trArr = $('tbody#table-tbodyID tr.trdata');
            if (trArr !== null && trArr.length > 0) {
                objCommonExcel.ajaxSettingsInit();
                objCommonExcel.ajaxSettings = ajaxSettings_Excel;

                var partcode = $("#partcode").val();
                var fromdate = $("#fromdate").val();
                var todate = $("#todate").val();

                var ListSearchInput = [
                    { Key: "partcode", Value: partcode },
                    { Key: "fromdate", Value: fromdate },
                    { Key: "todate", Value: todate },
                ];
                objCommonExcel.exportExcel(ListSearchInput);
            } else {
                alert("Lưới dữ liệu trống!");
                return false;
            }
        }
        $("#partcode").select2({
            placeholder: "",
            allowClear: true
        });
    </script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/table-sortable-v3.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            (function ($) {
                var body = $('body');
                body.on('keyup', '#txtSearchObj', function () {
                    var datafilter = $(this).val();
                    if (datafilter !== undefined && datafilter !== null && datafilter.toString().trim()) {
                        datafilter = datafilter.toUpperCase().trim();
                    }
                    var rex = new RegExp($(this).val(), 'i');
                    $('#table-tbodyID tr').hide();
                    $('#table-tbodyID tr').filter(function () {
                        debugger
                        var dataOfRow = $(this).text();
                        if (dataOfRow !== undefined && dataOfRow !== null && dataOfRow.toString().trim().length > 0) {
                            dataOfRow = dataOfRow.toUpperCase().trim();
                        }
                        if (dataOfRow.toUpperCase().indexOf(datafilter) > -1) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    }).show();
                });

            }(jQuery));

        });

        function totalRowSearch() {
            var numOfVisibleRows = $('.table-tbodyID tr').filter(function () {
                return $(this).css('display') === 'table-row';
            }).length;
            if (numOfVisibleRows != null && numOfVisibleRows != '') {
                if (CheckElementExists('#totalRowTable')) {
                    $('#totalRowTable').html(numOfVisibleRows);
                }
            }
        }

        function CheckElementExists(element) {
            if (!IsNullOrEmpty(element)) {
                if ($(element).length > 0) {
                    return true;
                }
            }
            return false;
        }

    </script>

    <script type="text/javascript">
        var listColumns = {
            'INVCODE': [],
            'PARTCODE': [],
            'PARTNAME': []
        };
        var options = {};
        options.Columns = listColumns;
        $('#dynamic-table-thead').table_Sortable(options);
    </script>
}